

Microchip Technology PIC18 LITE Macro Assembler V1.33 build 59893 
                                                                                               Thu Oct 26 18:13:05 2017

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cstackBANK6,global,class=BANK6,space=1,delta=1
    11                           	psect	cstackBANK5,global,class=BANK5,space=1,delta=1
    12                           	psect	cstackBANK4,global,class=BANK4,space=1,delta=1
    13                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1
    44                           	psect	text26,global,reloc=2,class=CODE,delta=1
    45                           	psect	text27,global,reloc=2,class=CODE,delta=1
    46                           	psect	text28,global,reloc=2,class=CODE,delta=1
    47                           	psect	text29,global,reloc=2,class=CODE,delta=1
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1
    49                           	psect	text31,global,reloc=2,class=CODE,delta=1
    50                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    51                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    52  0000                     
    53                           	psect	idataBANK0
    54  0065BE                     __pidataBANK0:
    55                           	opt stack 0
    56                           
    57                           ;initializer for _countup
    58  0065BE  0001               	dw	1
    59  0000                     _CCP1CON	set	4029
    60  0000                     _CCP2CON	set	4026
    61  0000                     _CCPR1L	set	4030
    62  0000                     _CCPR2L	set	4027
    63  0000                     _OSCCONbits	set	4051
    64  0000                     _PIE1bits	set	3997
    65  0000                     _PIR1bits	set	3998
    66  0000                     _PORTA	set	3968
    67  0000                     _PORTAbits	set	3968
    68  0000                     _PORTB	set	3969
    69  0000                     _PORTBbits	set	3969
    70  0000                     _PORTC	set	3970
    71  0000                     _PORTD	set	3971
    72  0000                     _PORTDbits	set	3971
    73  0000                     _PORTE	set	3972
    74  0000                     _PR2	set	4043
    75  0000                     _T2CON	set	4042
    76  0000                     _T2CONbits	set	4042
    77  0000                     _TMR2	set	4044
    78  0000                     _TRISA	set	3986
    79  0000                     _TRISB	set	3987
    80  0000                     _TRISBbits	set	3987
    81  0000                     _TRISC	set	3988
    82  0000                     _TRISCbits	set	3988
    83  0000                     _TRISD	set	3989
    84  0000                     _TRISE	set	3990
    85                           
    86                           ; #config settings
    87  0000                     
    88                           	psect	cinit
    89  0066A6                     __pcinit:
    90                           	opt stack 0
    91  0066A6                     start_initialization:
    92                           	opt stack 0
    93  0066A6                     __initialization:
    94                           	opt stack 0
    95                           
    96                           ; Clear objects allocated to BANK0 (4 bytes)
    97  0066A6  0100               	movlb	0
    98  0066A8  6BF2               	clrf	(__pbssBANK0+3)& (0+255),b
    99  0066AA  6BF1               	clrf	(__pbssBANK0+2)& (0+255),b
   100  0066AC  6BF0               	clrf	(__pbssBANK0+1)& (0+255),b
   101  0066AE  6BEF               	clrf	__pbssBANK0& (0+255),b
   102                           
   103                           ; Clear objects allocated to COMRAM (1 bytes)
   104  0066B0  6A5F               	clrf	__pbssCOMRAM& (0+255),c
   105                           
   106                           ; Initialize objects allocated to BANK0 (2 bytes)
   107                           ; load TBLPTR registers with __pidataBANK0
   108  0066B2  0EBE               	movlw	low __pidataBANK0
   109  0066B4  6EF6               	movwf	tblptrl,c
   110  0066B6  0E65               	movlw	high __pidataBANK0
   111  0066B8  6EF7               	movwf	tblptrh,c
   112  0066BA  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   113  0066BC  6EF8               	movwf	tblptru,c
   114  0066BE  0009               	tblrd		*+	;fetch initializer
   115  0066C0  CFF5 F0F3          	movff	tablat,__pdataBANK0
   116  0066C4  0009               	tblrd		*+	;fetch initializer
   117  0066C6  CFF5 F0F4          	movff	tablat,__pdataBANK0+1
   118  0066CA                     end_of_initialization:
   119                           	opt stack 0
   120  0066CA                     __end_of__initialization:
   121                           	opt stack 0
   122  0066CA  0100               	movlb	0
   123  0066CC  EF4F  F037         	goto	_main	;jump to C main() function
   124                           tblptru	equ	0xFF8
   125                           tblptrh	equ	0xFF7
   126                           tblptrl	equ	0xFF6
   127                           tablat	equ	0xFF5
   128                           
   129                           	psect	bssCOMRAM
   130  00005F                     __pbssCOMRAM:
   131                           	opt stack 0
   132  00005F                     _Timer2Config:
   133                           	opt stack 0
   134  00005F                     	ds	1
   135                           tblptru	equ	0xFF8
   136                           tblptrh	equ	0xFF7
   137                           tblptrl	equ	0xFF6
   138                           tablat	equ	0xFF5
   139                           
   140                           	psect	bssBANK0
   141  0000EF                     __pbssBANK0:
   142                           	opt stack 0
   143  0000EF                     _DutyCycle:
   144                           	opt stack 0
   145  0000EF                     	ds	2
   146  0000F1                     _i:
   147                           	opt stack 0
   148  0000F1                     	ds	2
   149                           tblptru	equ	0xFF8
   150                           tblptrh	equ	0xFF7
   151                           tblptrl	equ	0xFF6
   152                           tablat	equ	0xFF5
   153                           
   154                           	psect	dataBANK0
   155  0000F3                     __pdataBANK0:
   156                           	opt stack 0
   157  0000F3                     _countup:
   158                           	opt stack 0
   159  0000F3                     	ds	2
   160                           tblptru	equ	0xFF8
   161                           tblptrh	equ	0xFF7
   162                           tblptrl	equ	0xFF6
   163                           tablat	equ	0xFF5
   164                           
   165                           	psect	cstackBANK6
   166  000600                     __pcstackBANK6:
   167                           	opt stack 0
   168  000600                     fuzzy_system_single2@x:
   169                           	opt stack 0
   170  000600                     fuzzy_system_single1@x:
   171                           	opt stack 0
   172                           
   173                           ; 120 bytes @ 0x0
   174  000600                     	ds	120
   175  000678                     fuzzy_system_single2@y:
   176                           	opt stack 0
   177  000678                     fuzzy_system_single1@y:
   178                           	opt stack 0
   179                           
   180                           ; 120 bytes @ 0x78
   181  000678                     	ds	120
   182                           tblptru	equ	0xFF8
   183                           tblptrh	equ	0xFF7
   184                           tblptrl	equ	0xFF6
   185                           tablat	equ	0xFF5
   186                           
   187                           	psect	cstackBANK5
   188  000500                     __pcstackBANK5:
   189                           	opt stack 0
   190  000500                     fuzzy_system_single2@cons_mf3:
   191                           	opt stack 0
   192  000500                     fuzzy_system_single1@cons_mf3:
   193                           	opt stack 0
   194                           
   195                           ; 120 bytes @ 0x0
   196  000500                     	ds	120
   197  000578                     fuzzy_system_single2@overall_out_mf:
   198                           	opt stack 0
   199  000578                     fuzzy_system_single1@overall_out_mf:
   200                           	opt stack 0
   201                           
   202                           ; 120 bytes @ 0x78
   203  000578                     	ds	120
   204                           tblptru	equ	0xFF8
   205                           tblptrh	equ	0xFF7
   206                           tblptrl	equ	0xFF6
   207                           tablat	equ	0xFF5
   208                           
   209                           	psect	cstackBANK4
   210  000400                     __pcstackBANK4:
   211                           	opt stack 0
   212  000400                     fuzzy_system_single2@qualified_cons_mf3:
   213                           	opt stack 0
   214  000400                     fuzzy_system_single1@qualified_cons_mf3:
   215                           	opt stack 0
   216                           
   217                           ; 120 bytes @ 0x0
   218  000400                     	ds	120
   219  000478                     fuzzy_system_single2@qualified_cons_mf2:
   220                           	opt stack 0
   221  000478                     fuzzy_system_single1@qualified_cons_mf2:
   222                           	opt stack 0
   223                           
   224                           ; 120 bytes @ 0x78
   225  000478                     	ds	120
   226                           tblptru	equ	0xFF8
   227                           tblptrh	equ	0xFF7
   228                           tblptrl	equ	0xFF6
   229                           tablat	equ	0xFF5
   230                           
   231                           	psect	cstackBANK3
   232  000300                     __pcstackBANK3:
   233                           	opt stack 0
   234  000300                     fuzzy_system_single2@cons_mf1:
   235                           	opt stack 0
   236  000300                     fuzzy_system_single1@cons_mf1:
   237                           	opt stack 0
   238                           
   239                           ; 120 bytes @ 0x0
   240  000300                     	ds	120
   241  000378                     fuzzy_system_single2@qualified_cons_mf1:
   242                           	opt stack 0
   243  000378                     fuzzy_system_single1@qualified_cons_mf1:
   244                           	opt stack 0
   245                           
   246                           ; 120 bytes @ 0x78
   247  000378                     	ds	120
   248                           tblptru	equ	0xFF8
   249                           tblptrh	equ	0xFF7
   250                           tblptrl	equ	0xFF6
   251                           tablat	equ	0xFF5
   252                           
   253                           	psect	cstackBANK2
   254  000200                     __pcstackBANK2:
   255                           	opt stack 0
   256  000200                     fuzzy_system_single2@cons_mf2:
   257                           	opt stack 0
   258  000200                     fuzzy_system_single1@cons_mf2:
   259                           	opt stack 0
   260                           
   261                           ; 120 bytes @ 0x0
   262  000200                     	ds	120
   263  000278                     fuzzy_system_single2@ante_mf3:
   264                           	opt stack 0
   265  000278                     fuzzy_system_single1@ante_mf3:
   266                           	opt stack 0
   267                           
   268                           ; 120 bytes @ 0x78
   269  000278                     	ds	120
   270                           tblptru	equ	0xFF8
   271                           tblptrh	equ	0xFF7
   272                           tblptrl	equ	0xFF6
   273                           tablat	equ	0xFF5
   274                           
   275                           	psect	cstackBANK1
   276  000100                     __pcstackBANK1:
   277                           	opt stack 0
   278  000100                     fuzzy_system_single2@ante_mf1:
   279                           	opt stack 0
   280  000100                     fuzzy_system_single1@ante_mf1:
   281                           	opt stack 0
   282                           
   283                           ; 120 bytes @ 0x0
   284  000100                     	ds	120
   285  000178                     fuzzy_system_single2@ante_mf2:
   286                           	opt stack 0
   287  000178                     fuzzy_system_single1@ante_mf2:
   288                           	opt stack 0
   289                           
   290                           ; 120 bytes @ 0x78
   291  000178                     	ds	120
   292                           tblptru	equ	0xFF8
   293                           tblptrh	equ	0xFF7
   294                           tblptrl	equ	0xFF6
   295                           tablat	equ	0xFF5
   296                           
   297                           	psect	cstackBANK0
   298  000060                     __pcstackBANK0:
   299                           	opt stack 0
   300  000060                     tri_mf@temp:
   301                           	opt stack 0
   302                           
   303                           ; 120 bytes @ 0x0
   304  000060                     	ds	120
   305  0000D8                     tri_mf@i:
   306                           	opt stack 0
   307                           
   308                           ; 2 bytes @ 0x78
   309  0000D8                     	ds	2
   310  0000DA                     fuzzy_system_single2@output:
   311                           	opt stack 0
   312  0000DA                     fuzzy_system_single1@output:
   313                           	opt stack 0
   314                           
   315                           ; 3 bytes @ 0x7A
   316  0000DA                     	ds	3
   317  0000DD                     ??_main:
   318                           
   319                           ; 0 bytes @ 0x7D
   320  0000DD                     	ds	4
   321  0000E1                     main@a:
   322                           	opt stack 0
   323                           
   324                           ; 3 bytes @ 0x81
   325  0000E1                     	ds	3
   326  0000E4                     main@b:
   327                           	opt stack 0
   328                           
   329                           ; 3 bytes @ 0x84
   330  0000E4                     	ds	3
   331  0000E7                     _main$1475:
   332                           	opt stack 0
   333                           
   334                           ; 3 bytes @ 0x87
   335  0000E7                     	ds	3
   336  0000EA                     _main$1476:
   337                           	opt stack 0
   338                           
   339                           ; 3 bytes @ 0x8A
   340  0000EA                     	ds	3
   341  0000ED                     main@sensed:
   342                           	opt stack 0
   343                           
   344                           ; 2 bytes @ 0x8D
   345  0000ED                     	ds	2
   346                           tblptru	equ	0xFF8
   347                           tblptrh	equ	0xFF7
   348                           tblptrl	equ	0xFF6
   349                           tablat	equ	0xFF5
   350                           
   351                           	psect	cstackCOMRAM
   352  000001                     __pcstackCOMRAM:
   353                           	opt stack 0
   354  000001                     ??_OpenPWM2:
   355  000001                     ?_getCNY70Value:
   356                           	opt stack 0
   357  000001                     ?___wmul:
   358                           	opt stack 0
   359  000001                     ?___ftpack:
   360                           	opt stack 0
   361  000001                     ?___ftneg:
   362                           	opt stack 0
   363  000001                     OpenPWM1@period:
   364                           	opt stack 0
   365  000001                     SetDCPWM1@dutycycle:
   366                           	opt stack 0
   367  000001                     SetDCPWM2@dutycycle:
   368                           	opt stack 0
   369  000001                     ___wmul@multiplier:
   370                           	opt stack 0
   371  000001                     ___ftpack@arg:
   372                           	opt stack 0
   373  000001                     ___ftneg@f1:
   374                           	opt stack 0
   375                           
   376                           ; 3 bytes @ 0x0
   377  000001                     	ds	1
   378  000002                     PWM_init1@period:
   379                           	opt stack 0
   380  000002                     OpenPWM2@period:
   381                           	opt stack 0
   382                           
   383                           ; 1 bytes @ 0x1
   384  000002                     	ds	1
   385  000003                     ??_SetDCPWM1:
   386  000003                     ??_SetDCPWM2:
   387  000003                     OpenPWM2@ccp2mx:
   388                           	opt stack 0
   389  000003                     ___wmul@multiplicand:
   390                           	opt stack 0
   391                           
   392                           ; 2 bytes @ 0x2
   393  000003                     	ds	1
   394  000004                     PWM_init2@period:
   395                           	opt stack 0
   396  000004                     ___ftpack@exp:
   397                           	opt stack 0
   398                           
   399                           ; 1 bytes @ 0x3
   400  000004                     	ds	1
   401  000005                     ___ftpack@sign:
   402                           	opt stack 0
   403  000005                     SetDCPWM1@DCycle:
   404                           	opt stack 0
   405  000005                     SetDCPWM2@DCycle:
   406                           	opt stack 0
   407  000005                     ___wmul@product:
   408                           	opt stack 0
   409                           
   410                           ; 2 bytes @ 0x4
   411  000005                     	ds	1
   412  000006                     ??___ftpack:
   413                           
   414                           ; 0 bytes @ 0x5
   415  000006                     	ds	1
   416  000007                     ___ftge@ff1:
   417                           	opt stack 0
   418                           
   419                           ; 3 bytes @ 0x6
   420  000007                     	ds	2
   421  000009                     ?___awtoft:
   422                           	opt stack 0
   423  000009                     ?___lbtoft:
   424                           	opt stack 0
   425  000009                     ___awtoft@c:
   426                           	opt stack 0
   427                           
   428                           ; 2 bytes @ 0x8
   429  000009                     	ds	1
   430  00000A                     ___ftge@ff2:
   431                           	opt stack 0
   432                           
   433                           ; 3 bytes @ 0x9
   434  00000A                     	ds	2
   435  00000C                     ___awtoft@sign:
   436                           	opt stack 0
   437  00000C                     ___lbtoft@c:
   438                           	opt stack 0
   439                           
   440                           ; 1 bytes @ 0xB
   441  00000C                     	ds	1
   442  00000D                     ??___ftge:
   443  00000D                     ?___ftmul:
   444                           	opt stack 0
   445  00000D                     ___ftmul@f1:
   446                           	opt stack 0
   447                           
   448                           ; 3 bytes @ 0xC
   449  00000D                     	ds	3
   450  000010                     qualified@y:
   451                           	opt stack 0
   452  000010                     out_mf@result:
   453                           	opt stack 0
   454  000010                     ___ftmul@f2:
   455                           	opt stack 0
   456                           
   457                           ; 3 bytes @ 0xF
   458  000010                     	ds	2
   459  000012                     qualified@x:
   460                           	opt stack 0
   461  000012                     out_mf@x:
   462                           	opt stack 0
   463                           
   464                           ; 2 bytes @ 0x11
   465  000012                     	ds	1
   466  000013                     ??___ftmul:
   467                           
   468                           ; 0 bytes @ 0x12
   469  000013                     	ds	1
   470  000014                     out_mf@y:
   471                           	opt stack 0
   472  000014                     qualified@w:
   473                           	opt stack 0
   474                           
   475                           ; 3 bytes @ 0x13
   476  000014                     	ds	2
   477  000016                     ___ftmul@exp:
   478                           	opt stack 0
   479  000016                     out_mf@z:
   480                           	opt stack 0
   481                           
   482                           ; 2 bytes @ 0x15
   483  000016                     	ds	1
   484  000017                     qualified@min:
   485                           	opt stack 0
   486  000017                     ___ftmul@f3_as_product:
   487                           	opt stack 0
   488                           
   489                           ; 3 bytes @ 0x16
   490  000017                     	ds	1
   491  000018                     out_mf@i:
   492                           	opt stack 0
   493                           
   494                           ; 2 bytes @ 0x17
   495  000018                     	ds	2
   496  00001A                     ___ftmul@cntr:
   497                           	opt stack 0
   498  00001A                     qualified@i:
   499                           	opt stack 0
   500                           
   501                           ; 2 bytes @ 0x19
   502  00001A                     	ds	1
   503  00001B                     ___ftmul@sign:
   504                           	opt stack 0
   505                           
   506                           ; 1 bytes @ 0x1A
   507  00001B                     	ds	1
   508  00001C                     ?___ftadd:
   509                           	opt stack 0
   510  00001C                     ?___fttol:
   511                           	opt stack 0
   512  00001C                     ___ftadd@f1:
   513                           	opt stack 0
   514  00001C                     ___fttol@f1:
   515                           	opt stack 0
   516                           
   517                           ; 3 bytes @ 0x1B
   518  00001C                     	ds	3
   519  00001F                     ___ftadd@f2:
   520                           	opt stack 0
   521                           
   522                           ; 3 bytes @ 0x1E
   523  00001F                     	ds	1
   524  000020                     ??___fttol:
   525                           
   526                           ; 0 bytes @ 0x1F
   527  000020                     	ds	2
   528  000022                     ??___ftadd:
   529                           
   530                           ; 0 bytes @ 0x21
   531  000022                     	ds	3
   532  000025                     ___ftadd@sign:
   533                           	opt stack 0
   534  000025                     ___fttol@sign1:
   535                           	opt stack 0
   536                           
   537                           ; 1 bytes @ 0x24
   538  000025                     	ds	1
   539  000026                     ___ftadd@exp2:
   540                           	opt stack 0
   541  000026                     ___fttol@lval:
   542                           	opt stack 0
   543                           
   544                           ; 4 bytes @ 0x25
   545  000026                     	ds	1
   546  000027                     ___ftadd@exp1:
   547                           	opt stack 0
   548                           
   549                           ; 1 bytes @ 0x26
   550  000027                     	ds	1
   551  000028                     ?___ftdiv:
   552                           	opt stack 0
   553  000028                     ___ftdiv@f1:
   554                           	opt stack 0
   555                           
   556                           ; 3 bytes @ 0x27
   557  000028                     	ds	2
   558  00002A                     ___fttol@exp1:
   559                           	opt stack 0
   560                           
   561                           ; 1 bytes @ 0x29
   562  00002A                     	ds	1
   563  00002B                     ??_PWM_DutyCycle1:
   564  00002B                     ??_PWM_DutyCycle2:
   565  00002B                     ___ftdiv@f2:
   566                           	opt stack 0
   567                           
   568                           ; 3 bytes @ 0x2A
   569  00002B                     	ds	3
   570  00002E                     ??___ftdiv:
   571                           
   572                           ; 0 bytes @ 0x2D
   573  00002E                     	ds	1
   574  00002F                     PWM_DutyCycle1@DutyCycle:
   575                           	opt stack 0
   576  00002F                     PWM_DutyCycle2@DutyCycle:
   577                           	opt stack 0
   578                           
   579                           ; 2 bytes @ 0x2E
   580  00002F                     	ds	2
   581  000031                     PWM_DutyCycle1@percentageDuty:
   582                           	opt stack 0
   583  000031                     PWM_DutyCycle2@percentageDuty:
   584                           	opt stack 0
   585  000031                     ___ftdiv@cntr:
   586                           	opt stack 0
   587                           
   588                           ; 1 bytes @ 0x30
   589  000031                     	ds	1
   590  000032                     PWM_DutyCycle1@DC:
   591                           	opt stack 0
   592  000032                     PWM_DutyCycle2@DC:
   593                           	opt stack 0
   594  000032                     ___ftdiv@f3:
   595                           	opt stack 0
   596                           
   597                           ; 3 bytes @ 0x31
   598  000032                     	ds	2
   599  000034                     ??_mcu_init:
   600  000034                     go_back@m_left:
   601                           	opt stack 0
   602                           
   603                           ; 1 bytes @ 0x33
   604  000034                     	ds	1
   605  000035                     go_back@m_right:
   606                           	opt stack 0
   607  000035                     ___ftdiv@exp:
   608                           	opt stack 0
   609  000035                     mcu_init@i:
   610                           	opt stack 0
   611                           
   612                           ; 2 bytes @ 0x34
   613  000035                     	ds	1
   614  000036                     ___ftdiv@sign:
   615                           	opt stack 0
   616                           
   617                           ; 1 bytes @ 0x35
   618  000036                     	ds	1
   619  000037                     ?_triangular:
   620                           	opt stack 0
   621  000037                     ?_defuzzy:
   622                           	opt stack 0
   623  000037                     linspace@x:
   624                           	opt stack 0
   625  000037                     defuzzy@x:
   626                           	opt stack 0
   627  000037                     triangular@a:
   628                           	opt stack 0
   629                           
   630                           ; 3 bytes @ 0x36
   631  000037                     	ds	2
   632  000039                     defuzzy@mf:
   633                           	opt stack 0
   634  000039                     linspace@start:
   635                           	opt stack 0
   636                           
   637                           ; 3 bytes @ 0x38
   638  000039                     	ds	1
   639  00003A                     triangular@b:
   640                           	opt stack 0
   641                           
   642                           ; 3 bytes @ 0x39
   643  00003A                     	ds	1
   644  00003B                     defuzzy@out:
   645                           	opt stack 0
   646                           
   647                           ; 3 bytes @ 0x3A
   648  00003B                     	ds	1
   649  00003C                     linspace@end:
   650                           	opt stack 0
   651                           
   652                           ; 3 bytes @ 0x3B
   653  00003C                     	ds	1
   654  00003D                     triangular@c:
   655                           	opt stack 0
   656                           
   657                           ; 3 bytes @ 0x3C
   658  00003D                     	ds	1
   659  00003E                     defuzzy@sum1:
   660                           	opt stack 0
   661                           
   662                           ; 3 bytes @ 0x3D
   663  00003E                     	ds	1
   664  00003F                     linspace@size:
   665                           	opt stack 0
   666                           
   667                           ; 2 bytes @ 0x3E
   668  00003F                     	ds	1
   669  000040                     triangular@x:
   670                           	opt stack 0
   671                           
   672                           ; 3 bytes @ 0x3F
   673  000040                     	ds	1
   674  000041                     ??_linspace:
   675  000041                     defuzzy@sum2:
   676                           	opt stack 0
   677                           
   678                           ; 3 bytes @ 0x40
   679  000041                     	ds	2
   680  000043                     linspace@i:
   681                           	opt stack 0
   682  000043                     triangular@ux:
   683                           	opt stack 0
   684                           
   685                           ; 3 bytes @ 0x42
   686  000043                     	ds	1
   687  000044                     defuzzy@i:
   688                           	opt stack 0
   689                           
   690                           ; 2 bytes @ 0x43
   691  000044                     	ds	2
   692  000046                     tri_mf@t_value:
   693                           	opt stack 0
   694                           
   695                           ; 2 bytes @ 0x45
   696  000046                     	ds	2
   697  000048                     tri_mf@x:
   698                           	opt stack 0
   699                           
   700                           ; 2 bytes @ 0x47
   701  000048                     	ds	2
   702  00004A                     tri_mf@a:
   703                           	opt stack 0
   704                           
   705                           ; 3 bytes @ 0x49
   706  00004A                     	ds	3
   707  00004D                     tri_mf@b:
   708                           	opt stack 0
   709                           
   710                           ; 3 bytes @ 0x4C
   711  00004D                     	ds	3
   712  000050                     tri_mf@c:
   713                           	opt stack 0
   714                           
   715                           ; 3 bytes @ 0x4F
   716  000050                     	ds	3
   717  000053                     ?_fuzzy_system_single1:
   718                           	opt stack 0
   719  000053                     ?_fuzzy_system_single2:
   720                           	opt stack 0
   721  000053                     fuzzy_system_single2@input:
   722                           	opt stack 0
   723  000053                     fuzzy_system_single1@input:
   724                           	opt stack 0
   725                           
   726                           ; 3 bytes @ 0x52
   727  000053                     	ds	3
   728  000056                     fuzzy_system_single2@w1:
   729                           	opt stack 0
   730  000056                     fuzzy_system_single1@w1:
   731                           	opt stack 0
   732                           
   733                           ; 3 bytes @ 0x55
   734  000056                     	ds	3
   735  000059                     fuzzy_system_single2@w2:
   736                           	opt stack 0
   737  000059                     fuzzy_system_single1@w2:
   738                           	opt stack 0
   739                           
   740                           ; 3 bytes @ 0x58
   741  000059                     	ds	3
   742  00005C                     fuzzy_system_single2@w3:
   743                           	opt stack 0
   744  00005C                     fuzzy_system_single1@w3:
   745                           	opt stack 0
   746                           
   747                           ; 3 bytes @ 0x5B
   748  00005C                     	ds	3
   749                           tblptru	equ	0xFF8
   750                           tblptrh	equ	0xFF7
   751                           tblptrl	equ	0xFF6
   752                           tablat	equ	0xFF5
   753                           
   754 ;;
   755 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   756 ;;
   757 ;; *************** function _main *****************
   758 ;; Defined at:
   759 ;;		line 25 in file "main.c"
   760 ;; Parameters:    Size  Location     Type
   761 ;;		None
   762 ;; Auto vars:     Size  Location     Type
   763 ;;  b               3  132[BANK0 ] PTR 
   764 ;;  a               3  129[BANK0 ] PTR 
   765 ;;  sensed          2  141[BANK0 ] int 
   766 ;; Return value:  Size  Location     Type
   767 ;;                  2   20[COMRAM] int 
   768 ;; Registers used:
   769 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   770 ;; Tracked objects:
   771 ;;		On entry : 0/0
   772 ;;		On exit  : 0/0
   773 ;;		Unchanged: 0/0
   774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   775 ;;      Params:         0       0       0       0       0       0       0       0       0
   776 ;;      Locals:         0      14       0       0       0       0       0       0       0
   777 ;;      Temps:          0       4       0       0       0       0       0       0       0
   778 ;;      Totals:         0      18       0       0       0       0       0       0       0
   779 ;;Total ram usage:       18 bytes
   780 ;; Hardware stack levels required when called:    5
   781 ;; This function calls:
   782 ;;		_PWM_DutyCycle1
   783 ;;		___awtoft
   784 ;;		___fttol
   785 ;;		_fuzzy_system_single1
   786 ;;		_fuzzy_system_single2
   787 ;;		_getCNY70Value
   788 ;;		_go_back
   789 ;;		_mcu_init
   790 ;;		_motor_forward
   791 ;; This function is called by:
   792 ;;		Startup code after reset
   793 ;; This function uses a non-reentrant model
   794 ;;
   795                           
   796                           	psect	text0
   797  006E9E                     __ptext0:
   798                           	opt stack 0
   799  006E9E                     _main:
   800                           	opt stack 26
   801                           
   802                           ;main.c: 28: mcu_init();
   803                           
   804                           ;incstack = 0
   805  006E9E  EC95  F034         	call	_mcu_init	;wreg free
   806                           
   807                           ;main.c: 29: PORTAbits.RA0 = 1;
   808  006EA2  8080               	bsf	3968,0,c	;volatile
   809  006EA4                     l2653:
   810                           
   811                           ;main.c: 33: double a, b;
   812                           ;main.c: 34: int sensed;
   813                           ;main.c: 37: sensed = getCNY70Value();
   814  006EA4  EC38  F035         	call	_getCNY70Value	;wreg free
   815  006EA8  C001  F0ED         	movff	?_getCNY70Value,main@sensed
   816  006EAC  C002  F0EE         	movff	?_getCNY70Value+1,main@sensed+1
   817                           
   818                           ;main.c: 38: a = fuzzy_system_single1(sensed);
   819  006EB0  C0ED  F009         	movff	main@sensed,___awtoft@c
   820  006EB4  C0EE  F00A         	movff	main@sensed+1,___awtoft@c+1
   821  006EB8  ECBF  F033         	call	___awtoft	;wreg free
   822  006EBC  C009  F0E7         	movff	?___awtoft,_main$1475
   823  006EC0  C00A  F0E8         	movff	?___awtoft+1,_main$1475+1
   824  006EC4  C00B  F0E9         	movff	?___awtoft+2,_main$1475+2
   825                           
   826                           ;main.c: 38: a = fuzzy_system_single1(sensed);
   827  006EC8  C0E7  F053         	movff	_main$1475,fuzzy_system_single1@input
   828  006ECC  C0E8  F054         	movff	_main$1475+1,fuzzy_system_single1@input+1
   829  006ED0  C0E9  F055         	movff	_main$1475+2,fuzzy_system_single1@input+2
   830  006ED4  EC7E  F03C         	call	_fuzzy_system_single1	;wreg free
   831  006ED8  C053  F0E1         	movff	?_fuzzy_system_single1,main@a
   832  006EDC  C054  F0E2         	movff	?_fuzzy_system_single1+1,main@a+1
   833  006EE0  C055  F0E3         	movff	?_fuzzy_system_single1+2,main@a+2
   834                           
   835                           ;main.c: 39: b = fuzzy_system_single2(sensed);
   836  006EE4  C0ED  F009         	movff	main@sensed,___awtoft@c
   837  006EE8  C0EE  F00A         	movff	main@sensed+1,___awtoft@c+1
   838  006EEC  ECBF  F033         	call	___awtoft	;wreg free
   839  006EF0  C009  F0EA         	movff	?___awtoft,_main$1476
   840  006EF4  C00A  F0EB         	movff	?___awtoft+1,_main$1476+1
   841  006EF8  C00B  F0EC         	movff	?___awtoft+2,_main$1476+2
   842                           
   843                           ;main.c: 39: b = fuzzy_system_single2(sensed);
   844  006EFC  C0EA  F053         	movff	_main$1476,fuzzy_system_single2@input
   845  006F00  C0EB  F054         	movff	_main$1476+1,fuzzy_system_single2@input+1
   846  006F04  C0EC  F055         	movff	_main$1476+2,fuzzy_system_single2@input+2
   847  006F08  EC3F  F03E         	call	_fuzzy_system_single2	;wreg free
   848  006F0C  C053  F0E4         	movff	?_fuzzy_system_single2,main@b
   849  006F10  C054  F0E5         	movff	?_fuzzy_system_single2+1,main@b+1
   850  006F14  C055  F0E6         	movff	?_fuzzy_system_single2+2,main@b+2
   851                           
   852                           ;main.c: 41: if(PORTBbits.RB2 == 1 && PORTBbits.RB3 == 1 && PORTBbits.RB0 == 1 && PORTBb
      +                          its.RB4 == 1 && PORTBbits.RB1 == 1){
   853  006F18  B481               	btfsc	3969,2,c	;volatile
   854  006F1A  A681               	btfss	3969,3,c	;volatile
   855  006F1C  D00B               	goto	l2675
   856  006F1E  B081               	btfsc	3969,0,c	;volatile
   857  006F20  A881               	btfss	3969,4,c	;volatile
   858  006F22  D008               	goto	l2675
   859  006F24  A281               	btfss	3969,1,c	;volatile
   860  006F26  D006               	goto	l2675
   861                           
   862                           ;main.c: 42: go_back(100,100);
   863  006F28  0E64               	movlw	100
   864  006F2A  6E34               	movwf	go_back@m_left,c
   865  006F2C  0E64               	movlw	100
   866  006F2E  ECF3  F032         	call	_go_back
   867                           
   868                           ;main.c: 43: }
   869  006F32  D7B8               	goto	l2653
   870  006F34                     l2675:
   871                           
   872                           ;main.c: 44: else{
   873                           ;main.c: 45: motor_forward();
   874  006F34  ECE5  F032         	call	_motor_forward	;wreg free
   875                           
   876                           ;main.c: 46: PWM_DutyCycle1(a);
   877  006F38  C0E1  F01C         	movff	main@a,___fttol@f1
   878  006F3C  C0E2  F01D         	movff	main@a+1,___fttol@f1+1
   879  006F40  C0E3  F01E         	movff	main@a+2,___fttol@f1+2
   880  006F44  EC94  F035         	call	___fttol	;wreg free
   881  006F48  C01C  F0DD         	movff	?___fttol,??_main
   882  006F4C  C01D  F0DE         	movff	?___fttol+1,??_main+1
   883  006F50  C01E  F0DF         	movff	?___fttol+2,??_main+2
   884  006F54  C01F  F0E0         	movff	?___fttol+3,??_main+3
   885  006F58  0100               	movlb	0	; () banked
   886  006F5A  51DD               	movf	??_main& (0+255),w,b
   887  006F5C  ECE3  F033         	call	_PWM_DutyCycle1
   888                           
   889                           ;main.c: 47: PWM_DutyCycle1(b);
   890  006F60  C0E4  F01C         	movff	main@b,___fttol@f1
   891  006F64  C0E5  F01D         	movff	main@b+1,___fttol@f1+1
   892  006F68  C0E6  F01E         	movff	main@b+2,___fttol@f1+2
   893  006F6C  EC94  F035         	call	___fttol	;wreg free
   894  006F70  C01C  F0DD         	movff	?___fttol,??_main
   895  006F74  C01D  F0DE         	movff	?___fttol+1,??_main+1
   896  006F78  C01E  F0DF         	movff	?___fttol+2,??_main+2
   897  006F7C  C01F  F0E0         	movff	?___fttol+3,??_main+3
   898  006F80  0100               	movlb	0	; () banked
   899  006F82  51DD               	movf	??_main& (0+255),w,b
   900  006F84  ECE3  F033         	call	_PWM_DutyCycle1
   901  006F88  D78D               	goto	l2653
   902  006F8A                     __end_of_main:
   903                           	opt stack 0
   904                           tblptru	equ	0xFF8
   905                           tblptrh	equ	0xFF7
   906                           tblptrl	equ	0xFF6
   907                           tablat	equ	0xFF5
   908                           
   909 ;; *************** function _motor_forward *****************
   910 ;; Defined at:
   911 ;;		line 47 in file "motor.c"
   912 ;; Parameters:    Size  Location     Type
   913 ;;		None
   914 ;; Auto vars:     Size  Location     Type
   915 ;;		None
   916 ;; Return value:  Size  Location     Type
   917 ;;		None               void
   918 ;; Registers used:
   919 ;;		None
   920 ;; Tracked objects:
   921 ;;		On entry : 0/0
   922 ;;		On exit  : 0/0
   923 ;;		Unchanged: 0/0
   924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   925 ;;      Params:         0       0       0       0       0       0       0       0       0
   926 ;;      Locals:         0       0       0       0       0       0       0       0       0
   927 ;;      Temps:          0       0       0       0       0       0       0       0       0
   928 ;;      Totals:         0       0       0       0       0       0       0       0       0
   929 ;;Total ram usage:        0 bytes
   930 ;; Hardware stack levels used:    1
   931 ;; This function calls:
   932 ;;		Nothing
   933 ;; This function is called by:
   934 ;;		_main
   935 ;;		_go_straight
   936 ;; This function uses a non-reentrant model
   937 ;;
   938                           
   939                           	psect	text1
   940  0065CA                     __ptext1:
   941                           	opt stack 0
   942  0065CA                     _motor_forward:
   943                           	opt stack 30
   944                           
   945                           ;motor.c: 49: PORTDbits.RD7 = 1;
   946                           
   947                           ;incstack = 0
   948  0065CA  8E83               	bsf	3971,7,c	;volatile
   949                           
   950                           ;motor.c: 50: PORTDbits.RD4 = 0;
   951  0065CC  9883               	bcf	3971,4,c	;volatile
   952                           
   953                           ;motor.c: 51: PORTDbits.RD2 = 1;
   954  0065CE  8483               	bsf	3971,2,c	;volatile
   955                           
   956                           ;motor.c: 52: PORTDbits.RD3 = 0;
   957  0065D0  9683               	bcf	3971,3,c	;volatile
   958                           
   959                           ;motor.c: 54: return;
   960  0065D2  0012               	return	
   961  0065D4                     __end_of_motor_forward:
   962                           	opt stack 0
   963                           tblptru	equ	0xFF8
   964                           tblptrh	equ	0xFF7
   965                           tblptrl	equ	0xFF6
   966                           tablat	equ	0xFF5
   967                           
   968 ;; *************** function _mcu_init *****************
   969 ;; Defined at:
   970 ;;		line 14 in file "funciones.c"
   971 ;; Parameters:    Size  Location     Type
   972 ;;		None
   973 ;; Auto vars:     Size  Location     Type
   974 ;;  i               2   52[COMRAM] int 
   975 ;; Return value:  Size  Location     Type
   976 ;;                  2    2[COMRAM] int 
   977 ;; Registers used:
   978 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   979 ;; Tracked objects:
   980 ;;		On entry : 0/0
   981 ;;		On exit  : 0/0
   982 ;;		Unchanged: 0/0
   983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   984 ;;      Params:         0       0       0       0       0       0       0       0       0
   985 ;;      Locals:         2       0       0       0       0       0       0       0       0
   986 ;;      Temps:          1       0       0       0       0       0       0       0       0
   987 ;;      Totals:         3       0       0       0       0       0       0       0       0
   988 ;;Total ram usage:        3 bytes
   989 ;; Hardware stack levels used:    1
   990 ;; Hardware stack levels required when called:    3
   991 ;; This function calls:
   992 ;;		_PWM_DutyCycle1
   993 ;;		_PWM_DutyCycle2
   994 ;;		_PWM_init1
   995 ;;		_PWM_init2
   996 ;; This function is called by:
   997 ;;		_main
   998 ;; This function uses a non-reentrant model
   999 ;;
  1000                           
  1001                           	psect	text2
  1002  00692A                     __ptext2:
  1003                           	opt stack 0
  1004  00692A                     _mcu_init:
  1005                           	opt stack 27
  1006                           
  1007                           ;funciones.c: 16: TRISA=TRISB=TRISC=TRISD=TRISE=0;
  1008                           
  1009                           ;incstack = 0
  1010  00692A  0E00               	movlw	0
  1011  00692C  6E96               	movwf	3990,c	;volatile
  1012  00692E  CF96 FF95          	movff	3990,3989	;volatile
  1013  006932  CF95 FF94          	movff	3989,3988	;volatile
  1014  006936  CF94 FF93          	movff	3988,3987	;volatile
  1015  00693A  CF93 FF92          	movff	3987,3986	;volatile
  1016                           
  1017                           ;funciones.c: 17: PORTA=PORTB=PORTC=PORTD=PORTE=0;
  1018  00693E  0E00               	movlw	0
  1019  006940  6E84               	movwf	3972,c	;volatile
  1020  006942  CF84 FF83          	movff	3972,3971	;volatile
  1021  006946  CF83 FF82          	movff	3971,3970	;volatile
  1022  00694A  CF82 FF81          	movff	3970,3969	;volatile
  1023  00694E  CF81 FF80          	movff	3969,3968	;volatile
  1024                           
  1025                           ;funciones.c: 21: int i = 0;
  1026  006952  0E00               	movlw	0
  1027  006954  6E36               	movwf	mcu_init@i+1,c
  1028  006956  0E00               	movlw	0
  1029  006958  6E35               	movwf	mcu_init@i,c
  1030                           
  1031                           ;funciones.c: 22: _delay((unsigned long)((40)*(8000000/4000.0)));
  1032  00695A  0E68               	movlw	104
  1033  00695C  6E34               	movwf	??_mcu_init& (0+255),c
  1034  00695E  0EE4               	movlw	228
  1035  006960                     u3017:
  1036  006960  2EE8               	decfsz	wreg,f,c
  1037  006962  D7FE               	goto	u3017
  1038  006964  2E34               	decfsz	??_mcu_init& (0+255),f,c
  1039  006966  D7FC               	goto	u3017
  1040  006968  D000               	nop2	
  1041                           
  1042                           ;funciones.c: 23: OSCCONbits.IRCF = 0b111;
  1043  00696A  88D3               	bsf	4051,4,c	;volatile
  1044  00696C  8AD3               	bsf	4051,5,c	;volatile
  1045  00696E  8CD3               	bsf	4051,6,c	;volatile
  1046                           
  1047                           ;funciones.c: 28: TRISA = TRISB = TRISC = TRISD = TRISE = 0;
  1048  006970  0E00               	movlw	0
  1049  006972  6E96               	movwf	3990,c	;volatile
  1050  006974  CF96 FF95          	movff	3990,3989	;volatile
  1051  006978  CF95 FF94          	movff	3989,3988	;volatile
  1052  00697C  CF94 FF93          	movff	3988,3987	;volatile
  1053  006980  CF93 FF92          	movff	3987,3986	;volatile
  1054                           
  1055                           ;funciones.c: 29: PORTA = PORTB = PORTC = PORTD = PORTE = 0;
  1056  006984  0E00               	movlw	0
  1057  006986  6E84               	movwf	3972,c	;volatile
  1058  006988  CF84 FF83          	movff	3972,3971	;volatile
  1059  00698C  CF83 FF82          	movff	3971,3970	;volatile
  1060  006990  CF82 FF81          	movff	3970,3969	;volatile
  1061  006994  CF81 FF80          	movff	3969,3968	;volatile
  1062                           
  1063                           ;funciones.c: 30: TRISCbits.TRISC7 = 1;
  1064  006998  8E94               	bsf	3988,7,c	;volatile
  1065                           
  1066                           ;funciones.c: 31: TRISCbits.TRISC6 = 0;
  1067  00699A  9C94               	bcf	3988,6,c	;volatile
  1068                           
  1069                           ;funciones.c: 34: PORTE = 0;
  1070  00699C  0E00               	movlw	0
  1071  00699E  6E84               	movwf	3972,c	;volatile
  1072                           
  1073                           ;funciones.c: 35: PORTB = 0;
  1074  0069A0  0E00               	movlw	0
  1075  0069A2  6E81               	movwf	3969,c	;volatile
  1076                           
  1077                           ;funciones.c: 36: TRISBbits.TRISB0 = 1;
  1078  0069A4  8093               	bsf	3987,0,c	;volatile
  1079                           
  1080                           ;funciones.c: 37: TRISBbits.TRISB1 = 1;
  1081  0069A6  8293               	bsf	3987,1,c	;volatile
  1082                           
  1083                           ;funciones.c: 38: TRISBbits.TRISB2 = 1;
  1084  0069A8  8493               	bsf	3987,2,c	;volatile
  1085                           
  1086                           ;funciones.c: 39: TRISBbits.TRISB3 = 1;
  1087  0069AA  8693               	bsf	3987,3,c	;volatile
  1088                           
  1089                           ;funciones.c: 40: TRISBbits.TRISB4 = 1;
  1090  0069AC  8893               	bsf	3987,4,c	;volatile
  1091                           
  1092                           ;funciones.c: 46: PWM_init1(0xff);
  1093  0069AE  0EFF               	movlw	255
  1094  0069B0  ECFD  F032         	call	_PWM_init1
  1095                           
  1096                           ;funciones.c: 47: PWM_init2(0xff);
  1097  0069B4  0EFF               	movlw	255
  1098  0069B6  EC0C  F033         	call	_PWM_init2
  1099                           
  1100                           ;funciones.c: 48: PWM_DutyCycle1(0);
  1101  0069BA  0E00               	movlw	0
  1102  0069BC  ECE3  F033         	call	_PWM_DutyCycle1
  1103                           
  1104                           ;funciones.c: 49: PWM_DutyCycle2(0);
  1105  0069C0  0E00               	movlw	0
  1106  0069C2  EC18  F034         	call	_PWM_DutyCycle2
  1107                           
  1108                           ;funciones.c: 52: return;
  1109  0069C6  0012               	return	
  1110  0069C8                     __end_of_mcu_init:
  1111                           	opt stack 0
  1112                           tblptru	equ	0xFF8
  1113                           tblptrh	equ	0xFF7
  1114                           tblptrl	equ	0xFF6
  1115                           tablat	equ	0xFF5
  1116                           wreg	equ	0xFE8
  1117                           
  1118 ;; *************** function _PWM_init2 *****************
  1119 ;; Defined at:
  1120 ;;		line 42 in file "pwm.c"
  1121 ;; Parameters:    Size  Location     Type
  1122 ;;  period          1    wreg     unsigned char 
  1123 ;; Auto vars:     Size  Location     Type
  1124 ;;  period          1    3[COMRAM] unsigned char 
  1125 ;; Return value:  Size  Location     Type
  1126 ;;		None               void
  1127 ;; Registers used:
  1128 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1129 ;; Tracked objects:
  1130 ;;		On entry : 0/0
  1131 ;;		On exit  : 0/0
  1132 ;;		Unchanged: 0/0
  1133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1134 ;;      Params:         0       0       0       0       0       0       0       0       0
  1135 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1136 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1137 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1138 ;;Total ram usage:        1 bytes
  1139 ;; Hardware stack levels used:    1
  1140 ;; Hardware stack levels required when called:    1
  1141 ;; This function calls:
  1142 ;;		_OpenPWM2
  1143 ;; This function is called by:
  1144 ;;		_mcu_init
  1145 ;; This function uses a non-reentrant model
  1146 ;;
  1147                           
  1148                           	psect	text3
  1149  006618                     __ptext3:
  1150                           	opt stack 0
  1151  006618                     _PWM_init2:
  1152                           	opt stack 28
  1153                           
  1154                           ;incstack = 0
  1155                           ;PWM_init2@period stored from wreg
  1156  006618  6E04               	movwf	PWM_init2@period,c
  1157                           
  1158                           ;pwm.c: 43: Timer2Config = 0b11111110;
  1159  00661A  0EFE               	movlw	254
  1160  00661C  6E5F               	movwf	_Timer2Config,c
  1161                           
  1162                           ;pwm.c: 44: T2CON = (0xfb & Timer2Config);
  1163  00661E  505F               	movf	_Timer2Config,w,c
  1164  006620  0BFB               	andlw	251
  1165  006622  6ECA               	movwf	4042,c	;volatile
  1166                           
  1167                           ;pwm.c: 47: TMR2 = 0;
  1168  006624  0E00               	movlw	0
  1169  006626  6ECC               	movwf	4044,c	;volatile
  1170                           
  1171                           ;pwm.c: 48: PIR1bits.TMR2IF = 0;
  1172  006628  929E               	bcf	3998,1,c	;volatile
  1173                           
  1174                           ;pwm.c: 49: PIE1bits.TMR2IE = 0;
  1175  00662A  929D               	bcf	3997,1,c	;volatile
  1176                           
  1177                           ;pwm.c: 50: T2CONbits.TMR2ON = 1;
  1178  00662C  84CA               	bsf	4042,2,c	;volatile
  1179                           
  1180                           ;pwm.c: 51: OpenPWM2(period);
  1181  00662E  5004               	movf	PWM_init2@period,w,c
  1182  006630  ECA2  F033         	call	_OpenPWM2
  1183                           
  1184                           ;pwm.c: 53: return;
  1185  006634  0012               	return	
  1186  006636                     __end_of_PWM_init2:
  1187                           	opt stack 0
  1188                           tblptru	equ	0xFF8
  1189                           tblptrh	equ	0xFF7
  1190                           tblptrl	equ	0xFF6
  1191                           tablat	equ	0xFF5
  1192                           wreg	equ	0xFE8
  1193                           
  1194 ;; *************** function _OpenPWM2 *****************
  1195 ;; Defined at:
  1196 ;;		line 18 in file "C:\Program Files\Microchip\xc8\v1.33\sources\pic18\plib\PWM\pw2open.c"
  1197 ;; Parameters:    Size  Location     Type
  1198 ;;  period          1    wreg     unsigned char 
  1199 ;; Auto vars:     Size  Location     Type
  1200 ;;  period          1    1[COMRAM] unsigned char 
  1201 ;;  ccp2mx          1    2[COMRAM] unsigned char 
  1202 ;;  pmmode          1    0        unsigned char 
  1203 ;; Return value:  Size  Location     Type
  1204 ;;		None               void
  1205 ;; Registers used:
  1206 ;;		wreg, status,2, tblptrl, tblptrh, tblptru
  1207 ;; Tracked objects:
  1208 ;;		On entry : 0/0
  1209 ;;		On exit  : 0/0
  1210 ;;		Unchanged: 0/0
  1211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1212 ;;      Params:         0       0       0       0       0       0       0       0       0
  1213 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1214 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1215 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1216 ;;Total ram usage:        3 bytes
  1217 ;; Hardware stack levels used:    1
  1218 ;; This function calls:
  1219 ;;		Nothing
  1220 ;; This function is called by:
  1221 ;;		_PWM_init2
  1222 ;; This function uses a non-reentrant model
  1223 ;;
  1224                           
  1225                           	psect	text4
  1226  006744                     __ptext4:
  1227                           	opt stack 0
  1228  006744                     _OpenPWM2:
  1229                           	opt stack 28
  1230                           
  1231                           ;incstack = 0
  1232                           ;OpenPWM2@period stored from wreg
  1233  006744  6E02               	movwf	OpenPWM2@period,c
  1234  006746  0E0C               	movlw	12
  1235  006748  6EBA               	movwf	4026,c	;volatile
  1236  00674A  0E05               	movlw	5
  1237  00674C  6EF6               	movwf	tblptrl,c
  1238  00674E                     	if	1	;There is more than 1 active tblptr byte
  1239  00674E  0E00               	movlw	0
  1240  006750  6EF7               	movwf	tblptrh,c
  1241  006752                     	endif
  1242  006752                     	if	1	;There are 3 active tblptr bytes
  1243  006752  0E30               	movlw	48
  1244  006754  6EF8               	movwf	tblptru,c
  1245  006756                     	endif
  1246  006756  0008               	tblrd		*
  1247  006758  CFF5 F001          	movff	tablat,??_OpenPWM2
  1248  00675C  A001               	btfss	??_OpenPWM2,0,c
  1249  00675E  D002               	goto	l2075
  1250  006760  6803               	setf	OpenPWM2@ccp2mx,c
  1251  006762  D002               	goto	l293
  1252  006764                     l2075:
  1253  006764  0E00               	movlw	0
  1254  006766  6E03               	movwf	OpenPWM2@ccp2mx,c
  1255  006768                     l293:
  1256  006768  5003               	movf	OpenPWM2@ccp2mx,w,c
  1257  00676A  B4D8               	btfsc	status,2,c
  1258  00676C  D002               	goto	l294
  1259  00676E  9294               	bcf	3988,1,c	;volatile
  1260  006770  D001               	goto	l295
  1261  006772                     l294:
  1262  006772  9693               	bcf	3987,3,c	;volatile
  1263  006774                     l295:
  1264  006774  94CA               	bcf	4042,2,c	;volatile
  1265  006776  C002  FFCB         	movff	OpenPWM2@period,4043	;volatile
  1266  00677A  84CA               	bsf	4042,2,c	;volatile
  1267  00677C  0012               	return	
  1268  00677E                     __end_of_OpenPWM2:
  1269                           	opt stack 0
  1270                           tblptru	equ	0xFF8
  1271                           tblptrh	equ	0xFF7
  1272                           tblptrl	equ	0xFF6
  1273                           tablat	equ	0xFF5
  1274                           wreg	equ	0xFE8
  1275                           status	equ	0xFD8
  1276                           
  1277 ;; *************** function _PWM_init1 *****************
  1278 ;; Defined at:
  1279 ;;		line 20 in file "pwm.c"
  1280 ;; Parameters:    Size  Location     Type
  1281 ;;  period          1    wreg     unsigned char 
  1282 ;; Auto vars:     Size  Location     Type
  1283 ;;  period          1    1[COMRAM] unsigned char 
  1284 ;; Return value:  Size  Location     Type
  1285 ;;		None               void
  1286 ;; Registers used:
  1287 ;;		wreg, status,2, status,0, cstack
  1288 ;; Tracked objects:
  1289 ;;		On entry : 0/0
  1290 ;;		On exit  : 0/0
  1291 ;;		Unchanged: 0/0
  1292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1293 ;;      Params:         0       0       0       0       0       0       0       0       0
  1294 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1295 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1296 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1297 ;;Total ram usage:        1 bytes
  1298 ;; Hardware stack levels used:    1
  1299 ;; Hardware stack levels required when called:    1
  1300 ;; This function calls:
  1301 ;;		_OpenPWM1
  1302 ;; This function is called by:
  1303 ;;		_mcu_init
  1304 ;; This function uses a non-reentrant model
  1305 ;;
  1306                           
  1307                           	psect	text5
  1308  0065FA                     __ptext5:
  1309                           	opt stack 0
  1310  0065FA                     _PWM_init1:
  1311                           	opt stack 28
  1312                           
  1313                           ;incstack = 0
  1314                           ;PWM_init1@period stored from wreg
  1315  0065FA  6E02               	movwf	PWM_init1@period,c
  1316                           
  1317                           ;pwm.c: 21: Timer2Config = 0b11111110;
  1318  0065FC  0EFE               	movlw	254
  1319  0065FE  6E5F               	movwf	_Timer2Config,c
  1320                           
  1321                           ;pwm.c: 22: T2CON = (0xfb & Timer2Config);
  1322  006600  505F               	movf	_Timer2Config,w,c
  1323  006602  0BFB               	andlw	251
  1324  006604  6ECA               	movwf	4042,c	;volatile
  1325                           
  1326                           ;pwm.c: 25: TMR2 = 0;
  1327  006606  0E00               	movlw	0
  1328  006608  6ECC               	movwf	4044,c	;volatile
  1329                           
  1330                           ;pwm.c: 26: PIR1bits.TMR2IF = 0;
  1331  00660A  929E               	bcf	3998,1,c	;volatile
  1332                           
  1333                           ;pwm.c: 27: PIE1bits.TMR2IE = 0;
  1334  00660C  929D               	bcf	3997,1,c	;volatile
  1335                           
  1336                           ;pwm.c: 28: T2CONbits.TMR2ON = 1;
  1337  00660E  84CA               	bsf	4042,2,c	;volatile
  1338                           
  1339                           ;pwm.c: 29: OpenPWM1(period);
  1340  006610  5002               	movf	PWM_init1@period,w,c
  1341  006612  ECEA  F032         	call	_OpenPWM1
  1342                           
  1343                           ;pwm.c: 31: return;
  1344  006616  0012               	return	
  1345  006618                     __end_of_PWM_init1:
  1346                           	opt stack 0
  1347                           tblptru	equ	0xFF8
  1348                           tblptrh	equ	0xFF7
  1349                           tblptrl	equ	0xFF6
  1350                           tablat	equ	0xFF5
  1351                           wreg	equ	0xFE8
  1352                           status	equ	0xFD8
  1353                           
  1354 ;; *************** function _OpenPWM1 *****************
  1355 ;; Defined at:
  1356 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.33\sources\pic18\plib\PWM\pw1open.c"
  1357 ;; Parameters:    Size  Location     Type
  1358 ;;  period          1    wreg     unsigned char 
  1359 ;; Auto vars:     Size  Location     Type
  1360 ;;  period          1    0[COMRAM] unsigned char 
  1361 ;; Return value:  Size  Location     Type
  1362 ;;		None               void
  1363 ;; Registers used:
  1364 ;;		wreg, status,2, status,0
  1365 ;; Tracked objects:
  1366 ;;		On entry : 0/0
  1367 ;;		On exit  : 0/0
  1368 ;;		Unchanged: 0/0
  1369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1370 ;;      Params:         0       0       0       0       0       0       0       0       0
  1371 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1372 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1373 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1374 ;;Total ram usage:        1 bytes
  1375 ;; Hardware stack levels used:    1
  1376 ;; This function calls:
  1377 ;;		Nothing
  1378 ;; This function is called by:
  1379 ;;		_PWM_init1
  1380 ;; This function uses a non-reentrant model
  1381 ;;
  1382                           
  1383                           	psect	text6
  1384  0065D4                     __ptext6:
  1385                           	opt stack 0
  1386  0065D4                     _OpenPWM1:
  1387                           	opt stack 28
  1388                           
  1389                           ;incstack = 0
  1390                           ;OpenPWM1@period stored from wreg
  1391  0065D4  6E01               	movwf	OpenPWM1@period,c
  1392  0065D6  0E0C               	movlw	12
  1393  0065D8  12BD               	iorwf	4029,f,c	;volatile
  1394  0065DA  9494               	bcf	3988,2,c	;volatile
  1395  0065DC  94CA               	bcf	4042,2,c	;volatile
  1396  0065DE  C001  FFCB         	movff	OpenPWM1@period,4043	;volatile
  1397  0065E2  84CA               	bsf	4042,2,c	;volatile
  1398  0065E4  0012               	return	
  1399  0065E6                     __end_of_OpenPWM1:
  1400                           	opt stack 0
  1401                           tblptru	equ	0xFF8
  1402                           tblptrh	equ	0xFF7
  1403                           tblptrl	equ	0xFF6
  1404                           tablat	equ	0xFF5
  1405                           wreg	equ	0xFE8
  1406                           status	equ	0xFD8
  1407                           
  1408 ;; *************** function _go_back *****************
  1409 ;; Defined at:
  1410 ;;		line 125 in file "cny70.c"
  1411 ;; Parameters:    Size  Location     Type
  1412 ;;  m_right         1    wreg     unsigned char 
  1413 ;;  m_left          1   51[COMRAM] unsigned char 
  1414 ;; Auto vars:     Size  Location     Type
  1415 ;;  m_right         1   52[COMRAM] unsigned char 
  1416 ;; Return value:  Size  Location     Type
  1417 ;;		None               void
  1418 ;; Registers used:
  1419 ;;		wreg, status,2, status,0, cstack
  1420 ;; Tracked objects:
  1421 ;;		On entry : 0/0
  1422 ;;		On exit  : 0/0
  1423 ;;		Unchanged: 0/0
  1424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1425 ;;      Params:         1       0       0       0       0       0       0       0       0
  1426 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1427 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1428 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1429 ;;Total ram usage:        2 bytes
  1430 ;; Hardware stack levels used:    1
  1431 ;; Hardware stack levels required when called:    3
  1432 ;; This function calls:
  1433 ;;		_PWM_DutyCycle1
  1434 ;;		_PWM_DutyCycle2
  1435 ;;		_motor_Backforward
  1436 ;; This function is called by:
  1437 ;;		_main
  1438 ;; This function uses a non-reentrant model
  1439 ;;
  1440                           
  1441                           	psect	text7
  1442  0065E6                     __ptext7:
  1443                           	opt stack 0
  1444  0065E6                     _go_back:
  1445                           	opt stack 27
  1446                           
  1447                           ;incstack = 0
  1448                           ;go_back@m_right stored from wreg
  1449  0065E6  6E35               	movwf	go_back@m_right,c
  1450                           
  1451                           ;cny70.c: 127: motor_Backforward();
  1452  0065E8  ECE0  F032         	call	_motor_Backforward	;wreg free
  1453                           
  1454                           ;cny70.c: 128: PWM_DutyCycle1(m_right);
  1455  0065EC  5035               	movf	go_back@m_right,w,c
  1456  0065EE  ECE3  F033         	call	_PWM_DutyCycle1
  1457                           
  1458                           ;cny70.c: 129: PWM_DutyCycle2(m_left);
  1459  0065F2  5034               	movf	go_back@m_left,w,c
  1460  0065F4  EC18  F034         	call	_PWM_DutyCycle2
  1461                           
  1462                           ;cny70.c: 130: return;
  1463  0065F8  0012               	return	
  1464  0065FA                     __end_of_go_back:
  1465                           	opt stack 0
  1466                           tblptru	equ	0xFF8
  1467                           tblptrh	equ	0xFF7
  1468                           tblptrl	equ	0xFF6
  1469                           tablat	equ	0xFF5
  1470                           wreg	equ	0xFE8
  1471                           status	equ	0xFD8
  1472                           
  1473 ;; *************** function _motor_Backforward *****************
  1474 ;; Defined at:
  1475 ;;		line 57 in file "motor.c"
  1476 ;; Parameters:    Size  Location     Type
  1477 ;;		None
  1478 ;; Auto vars:     Size  Location     Type
  1479 ;;		None
  1480 ;; Return value:  Size  Location     Type
  1481 ;;                  2  205[COMRAM] int 
  1482 ;; Registers used:
  1483 ;;		None
  1484 ;; Tracked objects:
  1485 ;;		On entry : 0/0
  1486 ;;		On exit  : 0/0
  1487 ;;		Unchanged: 0/0
  1488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1489 ;;      Params:         0       0       0       0       0       0       0       0       0
  1490 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1491 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1492 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1493 ;;Total ram usage:        0 bytes
  1494 ;; Hardware stack levels used:    1
  1495 ;; This function calls:
  1496 ;;		Nothing
  1497 ;; This function is called by:
  1498 ;;		_go_back
  1499 ;; This function uses a non-reentrant model
  1500 ;;
  1501                           
  1502                           	psect	text8
  1503  0065C0                     __ptext8:
  1504                           	opt stack 0
  1505  0065C0                     _motor_Backforward:
  1506                           	opt stack 29
  1507                           
  1508                           ;motor.c: 59: PORTDbits.RD7 = 0;
  1509                           
  1510                           ;incstack = 0
  1511  0065C0  9E83               	bcf	3971,7,c	;volatile
  1512                           
  1513                           ;motor.c: 60: PORTDbits.RD4 = 1;
  1514  0065C2  8883               	bsf	3971,4,c	;volatile
  1515                           
  1516                           ;motor.c: 61: PORTDbits.RD2 = 0;
  1517  0065C4  9483               	bcf	3971,2,c	;volatile
  1518                           
  1519                           ;motor.c: 62: PORTDbits.RD3 = 1;
  1520  0065C6  8683               	bsf	3971,3,c	;volatile
  1521                           
  1522                           ;motor.c: 64: return;
  1523  0065C8  0012               	return	
  1524  0065CA                     __end_of_motor_Backforward:
  1525                           	opt stack 0
  1526                           tblptru	equ	0xFF8
  1527                           tblptrh	equ	0xFF7
  1528                           tblptrl	equ	0xFF6
  1529                           tablat	equ	0xFF5
  1530                           wreg	equ	0xFE8
  1531                           status	equ	0xFD8
  1532                           
  1533 ;; *************** function _PWM_DutyCycle2 *****************
  1534 ;; Defined at:
  1535 ;;		line 55 in file "pwm.c"
  1536 ;; Parameters:    Size  Location     Type
  1537 ;;  percentageDu    1    wreg     unsigned char 
  1538 ;; Auto vars:     Size  Location     Type
  1539 ;;  percentageDu    1   48[COMRAM] unsigned char 
  1540 ;;  DC              2   49[COMRAM] unsigned int 
  1541 ;;  DutyCycle       2   46[COMRAM] unsigned int 
  1542 ;; Return value:  Size  Location     Type
  1543 ;;		None               void
  1544 ;; Registers used:
  1545 ;;		wreg, status,2, status,0, cstack
  1546 ;; Tracked objects:
  1547 ;;		On entry : 0/0
  1548 ;;		On exit  : 0/0
  1549 ;;		Unchanged: 0/0
  1550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1551 ;;      Params:         0       0       0       0       0       0       0       0       0
  1552 ;;      Locals:         5       0       0       0       0       0       0       0       0
  1553 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1554 ;;      Totals:         9       0       0       0       0       0       0       0       0
  1555 ;;Total ram usage:        9 bytes
  1556 ;; Hardware stack levels used:    1
  1557 ;; Hardware stack levels required when called:    2
  1558 ;; This function calls:
  1559 ;;		_SetDCPWM2
  1560 ;;		___ftmul
  1561 ;;		___fttol
  1562 ;;		___lbtoft
  1563 ;; This function is called by:
  1564 ;;		_mcu_init
  1565 ;;		_go_back
  1566 ;;		_right
  1567 ;;		_left
  1568 ;;		_go_straight
  1569 ;; This function uses a non-reentrant model
  1570 ;;
  1571                           
  1572                           	psect	text9
  1573  006830                     __ptext9:
  1574                           	opt stack 0
  1575  006830                     _PWM_DutyCycle2:
  1576                           	opt stack 27
  1577                           
  1578                           ;incstack = 0
  1579                           ;PWM_DutyCycle2@percentageDuty stored from wreg
  1580  006830  6E31               	movwf	PWM_DutyCycle2@percentageDuty,c
  1581                           
  1582                           ;pwm.c: 57: unsigned int DC = 0, DutyCycle = 0;
  1583  006832  0E00               	movlw	0
  1584  006834  6E33               	movwf	PWM_DutyCycle2@DC+1,c
  1585  006836  0E00               	movlw	0
  1586  006838  6E32               	movwf	PWM_DutyCycle2@DC,c
  1587  00683A  0E00               	movlw	0
  1588  00683C  6E30               	movwf	PWM_DutyCycle2@DutyCycle+1,c
  1589  00683E  0E00               	movlw	0
  1590  006840  6E2F               	movwf	PWM_DutyCycle2@DutyCycle,c
  1591                           
  1592                           ;pwm.c: 59: DC = (unsigned int)(percentageDuty * 10.23);
  1593  006842  0EAE               	movlw	174
  1594  006844  6E10               	movwf	___ftmul@f2,c
  1595  006846  0E23               	movlw	35
  1596  006848  6E11               	movwf	___ftmul@f2+1,c
  1597  00684A  0E41               	movlw	65
  1598  00684C  6E12               	movwf	___ftmul@f2+2,c
  1599  00684E  5031               	movf	PWM_DutyCycle2@percentageDuty,w,c
  1600  006850  EC1B  F033         	call	___lbtoft
  1601  006854  C009  F00D         	movff	?___lbtoft,___ftmul@f1
  1602  006858  C00A  F00E         	movff	?___lbtoft+1,___ftmul@f1+1
  1603  00685C  C00B  F00F         	movff	?___lbtoft+2,___ftmul@f1+2
  1604  006860  EC69  F036         	call	___ftmul	;wreg free
  1605  006864  C00D  F01C         	movff	?___ftmul,___fttol@f1
  1606  006868  C00E  F01D         	movff	?___ftmul+1,___fttol@f1+1
  1607  00686C  C00F  F01E         	movff	?___ftmul+2,___fttol@f1+2
  1608  006870  EC94  F035         	call	___fttol	;wreg free
  1609  006874  C01C  F02B         	movff	?___fttol,??_PWM_DutyCycle2
  1610  006878  C01D  F02C         	movff	?___fttol+1,??_PWM_DutyCycle2+1
  1611  00687C  C01E  F02D         	movff	?___fttol+2,??_PWM_DutyCycle2+2
  1612  006880  C01F  F02E         	movff	?___fttol+3,??_PWM_DutyCycle2+3
  1613  006884  C02B  F032         	movff	??_PWM_DutyCycle2,PWM_DutyCycle2@DC
  1614  006888  C02C  F033         	movff	??_PWM_DutyCycle2+1,PWM_DutyCycle2@DC+1
  1615                           
  1616                           ;pwm.c: 60: SetDCPWM2(DC);
  1617  00688C  C032  F001         	movff	PWM_DutyCycle2@DC,SetDCPWM2@dutycycle
  1618  006890  C033  F002         	movff	PWM_DutyCycle2@DC+1,SetDCPWM2@dutycycle+1
  1619  006894  EC85  F033         	call	_SetDCPWM2	;wreg free
  1620                           
  1621                           ;pwm.c: 61: return;
  1622  006898  0012               	return	
  1623  00689A                     __end_of_PWM_DutyCycle2:
  1624                           	opt stack 0
  1625                           tblptru	equ	0xFF8
  1626                           tblptrh	equ	0xFF7
  1627                           tblptrl	equ	0xFF6
  1628                           tablat	equ	0xFF5
  1629                           wreg	equ	0xFE8
  1630                           status	equ	0xFD8
  1631                           
  1632 ;; *************** function _SetDCPWM2 *****************
  1633 ;; Defined at:
  1634 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v1.33\sources\pic18\plib\PWM\pw2setdc.c"
  1635 ;; Parameters:    Size  Location     Type
  1636 ;;  dutycycle       2    0[COMRAM] unsigned int 
  1637 ;; Auto vars:     Size  Location     Type
  1638 ;;  DCycle          2    4[COMRAM] struct PWMDC
  1639 ;; Return value:  Size  Location     Type
  1640 ;;		None               void
  1641 ;; Registers used:
  1642 ;;		wreg, status,2, status,0
  1643 ;; Tracked objects:
  1644 ;;		On entry : 0/0
  1645 ;;		On exit  : 0/0
  1646 ;;		Unchanged: 0/0
  1647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1648 ;;      Params:         2       0       0       0       0       0       0       0       0
  1649 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1650 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1651 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1652 ;;Total ram usage:        6 bytes
  1653 ;; Hardware stack levels used:    1
  1654 ;; This function calls:
  1655 ;;		Nothing
  1656 ;; This function is called by:
  1657 ;;		_PWM_DutyCycle2
  1658 ;; This function uses a non-reentrant model
  1659 ;;
  1660                           
  1661                           	psect	text10
  1662  00670A                     __ptext10:
  1663                           	opt stack 0
  1664  00670A                     _SetDCPWM2:
  1665                           	opt stack 28
  1666                           
  1667                           ;incstack = 0
  1668  00670A  C001  F003         	movff	SetDCPWM2@dutycycle,??_SetDCPWM2
  1669  00670E  C002  F004         	movff	SetDCPWM2@dutycycle+1,??_SetDCPWM2+1
  1670  006712  0E06               	movlw	6
  1671  006714                     u1975:
  1672  006714  90D8               	bcf	status,0,c
  1673  006716  3603               	rlcf	??_SetDCPWM2,f,c
  1674  006718  3604               	rlcf	??_SetDCPWM2+1,f,c
  1675  00671A  2EE8               	decfsz	wreg,f,c
  1676  00671C  D7FB               	goto	u1975
  1677  00671E  C003  F005         	movff	??_SetDCPWM2,SetDCPWM2@DCycle
  1678  006722  C004  F006         	movff	??_SetDCPWM2+1,SetDCPWM2@DCycle+1
  1679  006726  C006  FFBB         	movff	SetDCPWM2@DCycle+1,4027	;volatile
  1680  00672A  C005  F003         	movff	SetDCPWM2@DCycle,??_SetDCPWM2
  1681  00672E  90D8               	bcf	status,0,c
  1682  006730  3203               	rrcf	??_SetDCPWM2,f,c
  1683  006732  90D8               	bcf	status,0,c
  1684  006734  3203               	rrcf	??_SetDCPWM2,f,c
  1685  006736  0E30               	movlw	48
  1686  006738  1603               	andwf	??_SetDCPWM2,f,c
  1687  00673A  50BA               	movf	4026,w,c	;volatile
  1688  00673C  0BCF               	andlw	207
  1689  00673E  1003               	iorwf	??_SetDCPWM2,w,c
  1690  006740  6EBA               	movwf	4026,c	;volatile
  1691  006742  0012               	return	
  1692  006744                     __end_of_SetDCPWM2:
  1693                           	opt stack 0
  1694                           tblptru	equ	0xFF8
  1695                           tblptrh	equ	0xFF7
  1696                           tblptrl	equ	0xFF6
  1697                           tablat	equ	0xFF5
  1698                           wreg	equ	0xFE8
  1699                           status	equ	0xFD8
  1700                           
  1701 ;; *************** function _PWM_DutyCycle1 *****************
  1702 ;; Defined at:
  1703 ;;		line 33 in file "pwm.c"
  1704 ;; Parameters:    Size  Location     Type
  1705 ;;  percentageDu    1    wreg     unsigned char 
  1706 ;; Auto vars:     Size  Location     Type
  1707 ;;  percentageDu    1   48[COMRAM] unsigned char 
  1708 ;;  DC              2   49[COMRAM] unsigned int 
  1709 ;;  DutyCycle       2   46[COMRAM] unsigned int 
  1710 ;; Return value:  Size  Location     Type
  1711 ;;		None               void
  1712 ;; Registers used:
  1713 ;;		wreg, status,2, status,0, cstack
  1714 ;; Tracked objects:
  1715 ;;		On entry : 0/0
  1716 ;;		On exit  : 0/0
  1717 ;;		Unchanged: 0/0
  1718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1719 ;;      Params:         0       0       0       0       0       0       0       0       0
  1720 ;;      Locals:         5       0       0       0       0       0       0       0       0
  1721 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1722 ;;      Totals:         9       0       0       0       0       0       0       0       0
  1723 ;;Total ram usage:        9 bytes
  1724 ;; Hardware stack levels used:    1
  1725 ;; Hardware stack levels required when called:    2
  1726 ;; This function calls:
  1727 ;;		_SetDCPWM1
  1728 ;;		___ftmul
  1729 ;;		___fttol
  1730 ;;		___lbtoft
  1731 ;; This function is called by:
  1732 ;;		_main
  1733 ;;		_mcu_init
  1734 ;;		_go_back
  1735 ;;		_right
  1736 ;;		_left
  1737 ;;		_go_straight
  1738 ;; This function uses a non-reentrant model
  1739 ;;
  1740                           
  1741                           	psect	text11
  1742  0067C6                     __ptext11:
  1743                           	opt stack 0
  1744  0067C6                     _PWM_DutyCycle1:
  1745                           	opt stack 27
  1746                           
  1747                           ;incstack = 0
  1748                           ;PWM_DutyCycle1@percentageDuty stored from wreg
  1749  0067C6  6E31               	movwf	PWM_DutyCycle1@percentageDuty,c
  1750                           
  1751                           ;pwm.c: 35: unsigned int DC = 0, DutyCycle = 0;
  1752  0067C8  0E00               	movlw	0
  1753  0067CA  6E33               	movwf	PWM_DutyCycle1@DC+1,c
  1754  0067CC  0E00               	movlw	0
  1755  0067CE  6E32               	movwf	PWM_DutyCycle1@DC,c
  1756  0067D0  0E00               	movlw	0
  1757  0067D2  6E30               	movwf	PWM_DutyCycle1@DutyCycle+1,c
  1758  0067D4  0E00               	movlw	0
  1759  0067D6  6E2F               	movwf	PWM_DutyCycle1@DutyCycle,c
  1760                           
  1761                           ;pwm.c: 37: DC = (unsigned int)(percentageDuty * 10.23);
  1762  0067D8  0EAE               	movlw	174
  1763  0067DA  6E10               	movwf	___ftmul@f2,c
  1764  0067DC  0E23               	movlw	35
  1765  0067DE  6E11               	movwf	___ftmul@f2+1,c
  1766  0067E0  0E41               	movlw	65
  1767  0067E2  6E12               	movwf	___ftmul@f2+2,c
  1768  0067E4  5031               	movf	PWM_DutyCycle1@percentageDuty,w,c
  1769  0067E6  EC1B  F033         	call	___lbtoft
  1770  0067EA  C009  F00D         	movff	?___lbtoft,___ftmul@f1
  1771  0067EE  C00A  F00E         	movff	?___lbtoft+1,___ftmul@f1+1
  1772  0067F2  C00B  F00F         	movff	?___lbtoft+2,___ftmul@f1+2
  1773  0067F6  EC69  F036         	call	___ftmul	;wreg free
  1774  0067FA  C00D  F01C         	movff	?___ftmul,___fttol@f1
  1775  0067FE  C00E  F01D         	movff	?___ftmul+1,___fttol@f1+1
  1776  006802  C00F  F01E         	movff	?___ftmul+2,___fttol@f1+2
  1777  006806  EC94  F035         	call	___fttol	;wreg free
  1778  00680A  C01C  F02B         	movff	?___fttol,??_PWM_DutyCycle1
  1779  00680E  C01D  F02C         	movff	?___fttol+1,??_PWM_DutyCycle1+1
  1780  006812  C01E  F02D         	movff	?___fttol+2,??_PWM_DutyCycle1+2
  1781  006816  C01F  F02E         	movff	?___fttol+3,??_PWM_DutyCycle1+3
  1782  00681A  C02B  F032         	movff	??_PWM_DutyCycle1,PWM_DutyCycle1@DC
  1783  00681E  C02C  F033         	movff	??_PWM_DutyCycle1+1,PWM_DutyCycle1@DC+1
  1784                           
  1785                           ;pwm.c: 38: SetDCPWM1(DC);
  1786  006822  C032  F001         	movff	PWM_DutyCycle1@DC,SetDCPWM1@dutycycle
  1787  006826  C033  F002         	movff	PWM_DutyCycle1@DC+1,SetDCPWM1@dutycycle+1
  1788  00682A  EC68  F033         	call	_SetDCPWM1	;wreg free
  1789                           
  1790                           ;pwm.c: 39: return;
  1791  00682E  0012               	return	
  1792  006830                     __end_of_PWM_DutyCycle1:
  1793                           	opt stack 0
  1794                           tblptru	equ	0xFF8
  1795                           tblptrh	equ	0xFF7
  1796                           tblptrl	equ	0xFF6
  1797                           tablat	equ	0xFF5
  1798                           wreg	equ	0xFE8
  1799                           status	equ	0xFD8
  1800                           
  1801 ;; *************** function ___lbtoft *****************
  1802 ;; Defined at:
  1803 ;;		line 27 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\lbtoft.c"
  1804 ;; Parameters:    Size  Location     Type
  1805 ;;  c               1    wreg     unsigned char 
  1806 ;; Auto vars:     Size  Location     Type
  1807 ;;  c               1   11[COMRAM] unsigned char 
  1808 ;; Return value:  Size  Location     Type
  1809 ;;                  3    8[COMRAM] float 
  1810 ;; Registers used:
  1811 ;;		wreg, status,2, status,0, cstack
  1812 ;; Tracked objects:
  1813 ;;		On entry : 0/0
  1814 ;;		On exit  : 0/0
  1815 ;;		Unchanged: 0/0
  1816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1817 ;;      Params:         3       0       0       0       0       0       0       0       0
  1818 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1819 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1820 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1821 ;;Total ram usage:        4 bytes
  1822 ;; Hardware stack levels used:    1
  1823 ;; Hardware stack levels required when called:    1
  1824 ;; This function calls:
  1825 ;;		___ftpack
  1826 ;; This function is called by:
  1827 ;;		_PWM_DutyCycle1
  1828 ;;		_PWM_DutyCycle2
  1829 ;; This function uses a non-reentrant model
  1830 ;;
  1831                           
  1832                           	psect	text12
  1833  006636                     __ptext12:
  1834                           	opt stack 0
  1835  006636                     ___lbtoft:
  1836                           	opt stack 27
  1837                           
  1838                           ;incstack = 0
  1839                           ;___lbtoft@c stored from wreg
  1840  006636  6E0C               	movwf	___lbtoft@c,c
  1841  006638  500C               	movf	___lbtoft@c,w,c
  1842  00663A  6E01               	movwf	___ftpack@arg,c
  1843  00663C  6A02               	clrf	___ftpack@arg+1,c
  1844  00663E  6A03               	clrf	___ftpack@arg+2,c
  1845  006640  0E8E               	movlw	142
  1846  006642  6E04               	movwf	___ftpack@exp,c
  1847  006644  0E00               	movlw	0
  1848  006646  6E05               	movwf	___ftpack@sign,c
  1849  006648  ECE4  F034         	call	___ftpack	;wreg free
  1850  00664C  C001  F009         	movff	?___ftpack,?___lbtoft
  1851  006650  C002  F00A         	movff	?___ftpack+1,?___lbtoft+1
  1852  006654  C003  F00B         	movff	?___ftpack+2,?___lbtoft+2
  1853  006658  0012               	return	
  1854  00665A                     __end_of___lbtoft:
  1855                           	opt stack 0
  1856                           tblptru	equ	0xFF8
  1857                           tblptrh	equ	0xFF7
  1858                           tblptrl	equ	0xFF6
  1859                           tablat	equ	0xFF5
  1860                           wreg	equ	0xFE8
  1861                           status	equ	0xFD8
  1862                           
  1863 ;; *************** function ___fttol *****************
  1864 ;; Defined at:
  1865 ;;		line 44 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\fttol.c"
  1866 ;; Parameters:    Size  Location     Type
  1867 ;;  f1              3   27[COMRAM] float 
  1868 ;; Auto vars:     Size  Location     Type
  1869 ;;  lval            4   37[COMRAM] unsigned long 
  1870 ;;  exp1            1   41[COMRAM] unsigned char 
  1871 ;;  sign1           1   36[COMRAM] unsigned char 
  1872 ;; Return value:  Size  Location     Type
  1873 ;;                  4   27[COMRAM] long 
  1874 ;; Registers used:
  1875 ;;		wreg, status,2, status,0
  1876 ;; Tracked objects:
  1877 ;;		On entry : 0/0
  1878 ;;		On exit  : 0/0
  1879 ;;		Unchanged: 0/0
  1880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1881 ;;      Params:         4       0       0       0       0       0       0       0       0
  1882 ;;      Locals:         6       0       0       0       0       0       0       0       0
  1883 ;;      Temps:          5       0       0       0       0       0       0       0       0
  1884 ;;      Totals:        15       0       0       0       0       0       0       0       0
  1885 ;;Total ram usage:       15 bytes
  1886 ;; Hardware stack levels used:    1
  1887 ;; This function calls:
  1888 ;;		Nothing
  1889 ;; This function is called by:
  1890 ;;		_main
  1891 ;;		_PWM_DutyCycle1
  1892 ;;		_PWM_DutyCycle2
  1893 ;; This function uses a non-reentrant model
  1894 ;;
  1895                           
  1896                           	psect	text13
  1897  006B28                     __ptext13:
  1898                           	opt stack 0
  1899  006B28                     ___fttol:
  1900                           	opt stack 28
  1901                           
  1902                           ;incstack = 0
  1903  006B28  C01E  F020         	movff	___fttol@f1+2,??___fttol
  1904  006B2C  6A21               	clrf	(??___fttol+1)& (0+255),c
  1905  006B2E  6A22               	clrf	(??___fttol+2)& (0+255),c
  1906  006B30  341D               	rlcf	___fttol@f1+1,w,c
  1907  006B32  3620               	rlcf	??___fttol& (0+255),f,c
  1908  006B34  E301               	bnc	u2051
  1909  006B36  8021               	bsf	(??___fttol+1)& (0+255),0,c
  1910  006B38                     u2051:
  1911  006B38  5020               	movf	??___fttol,w,c
  1912  006B3A  6E2A               	movwf	___fttol@exp1,c
  1913  006B3C  662A               	tstfsz	___fttol@exp1& (0+255),c
  1914  006B3E  D001               	goto	l2155
  1915  006B40  D038               	goto	u2100
  1916  006B42                     l2155:
  1917  006B42  0E17               	movlw	23
  1918  006B44  6E20               	movwf	??___fttol& (0+255),c
  1919  006B46  C01C  F021         	movff	___fttol@f1,??___fttol+1
  1920  006B4A  C01D  F022         	movff	___fttol@f1+1,??___fttol+2
  1921  006B4E  C01E  F023         	movff	___fttol@f1+2,??___fttol+3
  1922  006B52  2820               	incf	??___fttol,w,c
  1923  006B54  6E24               	movwf	(??___fttol+4)& (0+255),c
  1924  006B56  D004               	goto	u2070
  1925  006B58                     u2075:
  1926  006B58  90D8               	bcf	status,0,c
  1927  006B5A  3223               	rrcf	??___fttol+3,f,c
  1928  006B5C  3222               	rrcf	??___fttol+2,f,c
  1929  006B5E  3221               	rrcf	??___fttol+1,f,c
  1930  006B60                     u2070:
  1931  006B60  2E24               	decfsz	(??___fttol+4)& (0+255),f,c
  1932  006B62  D7FA               	goto	u2075
  1933  006B64  5021               	movf	??___fttol+1,w,c
  1934  006B66  6E25               	movwf	___fttol@sign1,c
  1935  006B68  8E1D               	bsf	___fttol@f1+1,7,c
  1936  006B6A  0EFF               	movlw	255
  1937  006B6C  161C               	andwf	___fttol@f1,f,c
  1938  006B6E  0EFF               	movlw	255
  1939  006B70  161D               	andwf	___fttol@f1+1,f,c
  1940  006B72  0E00               	movlw	0
  1941  006B74  161E               	andwf	___fttol@f1+2,f,c
  1942  006B76  501C               	movf	___fttol@f1,w,c
  1943  006B78  6E26               	movwf	___fttol@lval,c
  1944  006B7A  501D               	movf	___fttol@f1+1,w,c
  1945  006B7C  6E27               	movwf	___fttol@lval+1,c
  1946  006B7E  501E               	movf	___fttol@f1+2,w,c
  1947  006B80  6E28               	movwf	___fttol@lval+2,c
  1948  006B82  6A29               	clrf	___fttol@lval+3,c
  1949  006B84  0E8E               	movlw	142
  1950  006B86  5E2A               	subwf	___fttol@exp1,f,c
  1951  006B88  AE2A               	btfss	___fttol@exp1,7,c
  1952  006B8A  D010               	goto	l2177
  1953  006B8C  502A               	movf	___fttol@exp1,w,c
  1954  006B8E  0A80               	xorlw	128
  1955  006B90  6E20               	movwf	??___fttol& (0+255),c
  1956  006B92  0EF1               	movlw	241
  1957  006B94  0A80               	xorlw	128
  1958  006B96  5C20               	subwf	??___fttol,w,c
  1959  006B98  A0D8               	btfss	status,0,c
  1960  006B9A  D00B               	goto	u2100
  1961  006B9C                     l2173:
  1962  006B9C  90D8               	bcf	status,0,c
  1963  006B9E  3229               	rrcf	___fttol@lval+3,f,c
  1964  006BA0  3228               	rrcf	___fttol@lval+2,f,c
  1965  006BA2  3227               	rrcf	___fttol@lval+1,f,c
  1966  006BA4  3226               	rrcf	___fttol@lval,f,c
  1967  006BA6  3E2A               	incfsz	___fttol@exp1,f,c
  1968  006BA8  D7F9               	goto	l2173
  1969  006BAA  D014               	goto	l2187
  1970  006BAC                     l2177:
  1971  006BAC  0E17               	movlw	23
  1972  006BAE  642A               	cpfsgt	___fttol@exp1,c
  1973  006BB0  D00F               	goto	l2185
  1974  006BB2                     u2100:
  1975  006BB2  0E00               	movlw	0
  1976  006BB4  6E1C               	movwf	?___fttol,c
  1977  006BB6  0E00               	movlw	0
  1978  006BB8  6E1D               	movwf	?___fttol+1,c
  1979  006BBA  0E00               	movlw	0
  1980  006BBC  6E1E               	movwf	?___fttol+2,c
  1981  006BBE  0E00               	movlw	0
  1982  006BC0  6E1F               	movwf	?___fttol+3,c
  1983  006BC2  D01B               	goto	l716
  1984  006BC4                     l2183:
  1985  006BC4  90D8               	bcf	status,0,c
  1986  006BC6  3626               	rlcf	___fttol@lval,f,c
  1987  006BC8  3627               	rlcf	___fttol@lval+1,f,c
  1988  006BCA  3628               	rlcf	___fttol@lval+2,f,c
  1989  006BCC  3629               	rlcf	___fttol@lval+3,f,c
  1990  006BCE  062A               	decf	___fttol@exp1,f,c
  1991  006BD0                     l2185:
  1992  006BD0  662A               	tstfsz	___fttol@exp1,c
  1993  006BD2  D7F8               	goto	l2183
  1994  006BD4                     l2187:
  1995  006BD4  5025               	movf	___fttol@sign1,w,c
  1996  006BD6  B4D8               	btfsc	status,2,c
  1997  006BD8  D008               	goto	l2191
  1998  006BDA  1E29               	comf	___fttol@lval+3,f,c
  1999  006BDC  1E28               	comf	___fttol@lval+2,f,c
  2000  006BDE  1E27               	comf	___fttol@lval+1,f,c
  2001  006BE0  6C26               	negf	___fttol@lval,c
  2002  006BE2  0E00               	movlw	0
  2003  006BE4  2227               	addwfc	___fttol@lval+1,f,c
  2004  006BE6  2228               	addwfc	___fttol@lval+2,f,c
  2005  006BE8  2229               	addwfc	___fttol@lval+3,f,c
  2006  006BEA                     l2191:
  2007  006BEA  C026  F01C         	movff	___fttol@lval,?___fttol
  2008  006BEE  C027  F01D         	movff	___fttol@lval+1,?___fttol+1
  2009  006BF2  C028  F01E         	movff	___fttol@lval+2,?___fttol+2
  2010  006BF6  C029  F01F         	movff	___fttol@lval+3,?___fttol+3
  2011  006BFA                     l716:
  2012  006BFA  0012               	return	
  2013  006BFC                     __end_of___fttol:
  2014                           	opt stack 0
  2015                           tblptru	equ	0xFF8
  2016                           tblptrh	equ	0xFF7
  2017                           tblptrl	equ	0xFF6
  2018                           tablat	equ	0xFF5
  2019                           wreg	equ	0xFE8
  2020                           status	equ	0xFD8
  2021                           
  2022 ;; *************** function _SetDCPWM1 *****************
  2023 ;; Defined at:
  2024 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v1.33\sources\pic18\plib\PWM\pw1setdc.c"
  2025 ;; Parameters:    Size  Location     Type
  2026 ;;  dutycycle       2    0[COMRAM] unsigned int 
  2027 ;; Auto vars:     Size  Location     Type
  2028 ;;  DCycle          2    4[COMRAM] struct PWMDC
  2029 ;; Return value:  Size  Location     Type
  2030 ;;		None               void
  2031 ;; Registers used:
  2032 ;;		wreg, status,2, status,0
  2033 ;; Tracked objects:
  2034 ;;		On entry : 0/0
  2035 ;;		On exit  : 0/0
  2036 ;;		Unchanged: 0/0
  2037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2038 ;;      Params:         2       0       0       0       0       0       0       0       0
  2039 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2040 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2041 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2042 ;;Total ram usage:        6 bytes
  2043 ;; Hardware stack levels used:    1
  2044 ;; This function calls:
  2045 ;;		Nothing
  2046 ;; This function is called by:
  2047 ;;		_PWM_DutyCycle1
  2048 ;; This function uses a non-reentrant model
  2049 ;;
  2050                           
  2051                           	psect	text14
  2052  0066D0                     __ptext14:
  2053                           	opt stack 0
  2054  0066D0                     _SetDCPWM1:
  2055                           	opt stack 28
  2056                           
  2057                           ;incstack = 0
  2058  0066D0  C001  F003         	movff	SetDCPWM1@dutycycle,??_SetDCPWM1
  2059  0066D4  C002  F004         	movff	SetDCPWM1@dutycycle+1,??_SetDCPWM1+1
  2060  0066D8  0E06               	movlw	6
  2061  0066DA                     u1945:
  2062  0066DA  90D8               	bcf	status,0,c
  2063  0066DC  3603               	rlcf	??_SetDCPWM1,f,c
  2064  0066DE  3604               	rlcf	??_SetDCPWM1+1,f,c
  2065  0066E0  2EE8               	decfsz	wreg,f,c
  2066  0066E2  D7FB               	goto	u1945
  2067  0066E4  C003  F005         	movff	??_SetDCPWM1,SetDCPWM1@DCycle
  2068  0066E8  C004  F006         	movff	??_SetDCPWM1+1,SetDCPWM1@DCycle+1
  2069  0066EC  C006  FFBE         	movff	SetDCPWM1@DCycle+1,4030	;volatile
  2070  0066F0  C005  F003         	movff	SetDCPWM1@DCycle,??_SetDCPWM1
  2071  0066F4  90D8               	bcf	status,0,c
  2072  0066F6  3203               	rrcf	??_SetDCPWM1,f,c
  2073  0066F8  90D8               	bcf	status,0,c
  2074  0066FA  3203               	rrcf	??_SetDCPWM1,f,c
  2075  0066FC  0E30               	movlw	48
  2076  0066FE  1603               	andwf	??_SetDCPWM1,f,c
  2077  006700  50BD               	movf	4029,w,c	;volatile
  2078  006702  0BCF               	andlw	207
  2079  006704  1003               	iorwf	??_SetDCPWM1,w,c
  2080  006706  6EBD               	movwf	4029,c	;volatile
  2081  006708  0012               	return	
  2082  00670A                     __end_of_SetDCPWM1:
  2083                           	opt stack 0
  2084                           tblptru	equ	0xFF8
  2085                           tblptrh	equ	0xFF7
  2086                           tblptrl	equ	0xFF6
  2087                           tablat	equ	0xFF5
  2088                           wreg	equ	0xFE8
  2089                           status	equ	0xFD8
  2090                           
  2091 ;; *************** function _getCNY70Value *****************
  2092 ;; Defined at:
  2093 ;;		line 4 in file "cny70.c"
  2094 ;; Parameters:    Size  Location     Type
  2095 ;;		None
  2096 ;; Auto vars:     Size  Location     Type
  2097 ;;		None
  2098 ;; Return value:  Size  Location     Type
  2099 ;;                  2    0[COMRAM] int 
  2100 ;; Registers used:
  2101 ;;		wreg, status,2
  2102 ;; Tracked objects:
  2103 ;;		On entry : 0/0
  2104 ;;		On exit  : 0/0
  2105 ;;		Unchanged: 0/0
  2106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2107 ;;      Params:         2       0       0       0       0       0       0       0       0
  2108 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2109 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2110 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2111 ;;Total ram usage:        2 bytes
  2112 ;; Hardware stack levels used:    1
  2113 ;; This function calls:
  2114 ;;		Nothing
  2115 ;; This function is called by:
  2116 ;;		_main
  2117 ;; This function uses a non-reentrant model
  2118 ;;
  2119                           
  2120                           	psect	text15
  2121  006A70                     __ptext15:
  2122                           	opt stack 0
  2123  006A70                     _getCNY70Value:
  2124                           	opt stack 30
  2125                           
  2126                           ;cny70.c: 24: if(PORTBbits.RB2 == 1 && PORTBbits.RB3 == 1 && PORTBbits.RB0 == 0 && PORTB
      +                          bits.RB4 == 1 && PORTBbits.RB1 == 1){
  2127                           
  2128                           ;incstack = 0
  2129  006A70  B481               	btfsc	3969,2,c	;volatile
  2130  006A72  A681               	btfss	3969,3,c	;volatile
  2131  006A74  D005               	goto	l208
  2132  006A76  A081               	btfss	3969,0,c	;volatile
  2133  006A78  A881               	btfss	3969,4,c	;volatile
  2134  006A7A  D002               	goto	l208
  2135  006A7C  B281               	btfsc	3969,1,c	;volatile
  2136  006A7E  D04F               	goto	l2543
  2137  006A80                     l208:
  2138                           
  2139                           ;cny70.c: 29: else if(PORTBbits.RB2 == 1 && PORTBbits.RB3 == 0 && PORTBbits.RB0 == 1 && 
      +                          PORTBbits.RB4 == 1 && PORTBbits.RB1 == 1){
  2140  006A80  B481               	btfsc	3969,2,c	;volatile
  2141  006A82  B681               	btfsc	3969,3,c	;volatile
  2142  006A84  D005               	goto	l211
  2143  006A86  B081               	btfsc	3969,0,c	;volatile
  2144  006A88  A881               	btfss	3969,4,c	;volatile
  2145  006A8A  D002               	goto	l211
  2146  006A8C  B281               	btfsc	3969,1,c	;volatile
  2147  006A8E  D038               	goto	u2780
  2148  006A90                     l211:
  2149                           
  2150                           ;cny70.c: 34: else if(PORTBbits.RB2 == 0 && PORTBbits.RB3 == 1 && PORTBbits.RB0 == 1 && 
      +                          PORTBbits.RB4 == 1 && PORTBbits.RB1 == 1){
  2151  006A90  A481               	btfss	3969,2,c	;volatile
  2152  006A92  A681               	btfss	3969,3,c	;volatile
  2153  006A94  D009               	goto	l213
  2154  006A96  B081               	btfsc	3969,0,c	;volatile
  2155  006A98  A881               	btfss	3969,4,c	;volatile
  2156  006A9A  D006               	goto	l213
  2157  006A9C  A281               	btfss	3969,1,c	;volatile
  2158  006A9E  D004               	goto	l213
  2159  006AA0                     
  2160                           ;cny70.c: 36: return -2;
  2161  006AA0  0EFF               	movlw	255
  2162  006AA2  6E02               	movwf	?_getCNY70Value+1,c
  2163  006AA4  0EFE               	movlw	254
  2164  006AA6  D03E               	goto	L4
  2165  006AA8                     l213:
  2166                           
  2167                           ;cny70.c: 39: else if(PORTBbits.RB2 == 1 && PORTBbits.RB3 == 1 && PORTBbits.RB0 == 1 && 
      +                          PORTBbits.RB4 == 0 && PORTBbits.RB1 == 1){
  2168  006AA8  B481               	btfsc	3969,2,c	;volatile
  2169  006AAA  A681               	btfss	3969,3,c	;volatile
  2170  006AAC  D005               	goto	l215
  2171  006AAE  B081               	btfsc	3969,0,c	;volatile
  2172  006AB0  B881               	btfsc	3969,4,c	;volatile
  2173  006AB2  D002               	goto	l215
  2174  006AB4  B281               	btfsc	3969,1,c	;volatile
  2175  006AB6  D02F               	goto	u2830
  2176  006AB8                     l215:
  2177                           
  2178                           ;cny70.c: 44: else if(PORTBbits.RB2 == 1 && PORTBbits.RB3 == 1 && PORTBbits.RB0 == 1 && 
      +                          PORTBbits.RB4 == 1 && PORTBbits.RB1 == 0){
  2179  006AB8  B481               	btfsc	3969,2,c	;volatile
  2180  006ABA  A681               	btfss	3969,3,c	;volatile
  2181  006ABC  D005               	goto	l217
  2182  006ABE  B081               	btfsc	3969,0,c	;volatile
  2183  006AC0  A881               	btfss	3969,4,c	;volatile
  2184  006AC2  D002               	goto	l217
  2185  006AC4  A281               	btfss	3969,1,c	;volatile
  2186  006AC6  D008               	goto	u2680
  2187  006AC8                     l217:
  2188                           
  2189                           ;cny70.c: 50: else if(PORTBbits.RB2 == 1 && PORTBbits.RB3 == 1 && PORTBbits.RB0 == 1 && 
      +                          PORTBbits.RB4 == 0 && PORTBbits.RB1 == 0){
  2190  006AC8  B481               	btfsc	3969,2,c	;volatile
  2191  006ACA  A681               	btfss	3969,3,c	;volatile
  2192  006ACC  D009               	goto	l219
  2193  006ACE  B081               	btfsc	3969,0,c	;volatile
  2194  006AD0  B881               	btfsc	3969,4,c	;volatile
  2195  006AD2  D006               	goto	l219
  2196  006AD4  B281               	btfsc	3969,1,c	;volatile
  2197  006AD6  D004               	goto	l219
  2198  006AD8                     u2680:
  2199                           
  2200                           ;cny70.c: 52: return 2;
  2201  006AD8  0E00               	movlw	0
  2202  006ADA  6E02               	movwf	?_getCNY70Value+1,c
  2203  006ADC  0E02               	movlw	2
  2204  006ADE  D022               	goto	L4
  2205  006AE0                     l219:
  2206                           
  2207                           ;cny70.c: 55: else if(PORTBbits.RB2 == 0 && PORTBbits.RB3 == 0 && PORTBbits.RB0 == 1 && 
      +                          PORTBbits.RB4 == 1 && PORTBbits.RB1 == 1){
  2208  006AE0  A481               	btfss	3969,2,c	;volatile
  2209  006AE2  B681               	btfsc	3969,3,c	;volatile
  2210  006AE4  D005               	goto	l221
  2211  006AE6  B081               	btfsc	3969,0,c	;volatile
  2212  006AE8  A881               	btfss	3969,4,c	;volatile
  2213  006AEA  D002               	goto	l221
  2214  006AEC  B281               	btfsc	3969,1,c	;volatile
  2215  006AEE  D7D8               	goto	L5
  2216  006AF0                     l221:
  2217                           
  2218                           ;cny70.c: 60: else if(PORTBbits.RB2 == 1 && PORTBbits.RB3 == 0 && PORTBbits.RB0 == 0 && 
      +                          PORTBbits.RB4 == 1 && PORTBbits.RB1 == 1){
  2219  006AF0  B481               	btfsc	3969,2,c	;volatile
  2220  006AF2  B681               	btfsc	3969,3,c	;volatile
  2221  006AF4  D008               	goto	l223
  2222  006AF6  A081               	btfss	3969,0,c	;volatile
  2223  006AF8  A881               	btfss	3969,4,c	;volatile
  2224  006AFA  D005               	goto	l223
  2225  006AFC  A281               	btfss	3969,1,c	;volatile
  2226  006AFE  D003               	goto	l223
  2227  006B00                     u2780:
  2228                           
  2229                           ;cny70.c: 62: return -1;
  2230  006B00  6801               	setf	?_getCNY70Value,c
  2231  006B02  6802               	setf	?_getCNY70Value+1,c
  2232  006B04  D010               	goto	l209
  2233  006B06                     l223:
  2234                           
  2235                           ;cny70.c: 65: else if(PORTBbits.RB2 == 1 && PORTBbits.RB3 == 1 && PORTBbits.RB0 == 0 && 
      +                          PORTBbits.RB4 == 0 && PORTBbits.RB1 == 1){
  2236  006B06  B481               	btfsc	3969,2,c	;volatile
  2237  006B08  A681               	btfss	3969,3,c	;volatile
  2238  006B0A  D009               	goto	l2543
  2239  006B0C  A081               	btfss	3969,0,c	;volatile
  2240  006B0E  B881               	btfsc	3969,4,c	;volatile
  2241  006B10  D006               	goto	l2543
  2242  006B12  A281               	btfss	3969,1,c	;volatile
  2243  006B14  D004               	goto	l2543
  2244  006B16                     u2830:
  2245                           
  2246                           ;cny70.c: 67: return 1;
  2247  006B16  0E00               	movlw	0
  2248  006B18  6E02               	movwf	?_getCNY70Value+1,c
  2249  006B1A  0E01               	movlw	1
  2250  006B1C  D003               	goto	L4
  2251  006B1E                     l2543:
  2252                           
  2253                           ;cny70.c: 75: else
  2254                           ;cny70.c: 76: return 0;
  2255  006B1E  0E00               	movlw	0
  2256  006B20  6E02               	movwf	?_getCNY70Value+1,c
  2257  006B22  0E00               	movlw	0
  2258  006B24                     L4:
  2259  006B24  6E01               	movwf	?_getCNY70Value,c
  2260  006B26                     l209:
  2261  006B26  0012               	return	
  2262  006B28                     __end_of_getCNY70Value:
  2263                           	opt stack 0
  2264                           tblptru	equ	0xFF8
  2265                           tblptrh	equ	0xFF7
  2266                           tblptrl	equ	0xFF6
  2267                           tablat	equ	0xFF5
  2268                           wreg	equ	0xFE8
  2269                           status	equ	0xFD8
  2270                           
  2271 ;; *************** function _fuzzy_system_single2 *****************
  2272 ;; Defined at:
  2273 ;;		line 234 in file "fuzzy.c"
  2274 ;; Parameters:    Size  Location     Type
  2275 ;;  input           3   82[COMRAM] int 
  2276 ;; Auto vars:     Size  Location     Type
  2277 ;;  y             120  120[BANK6 ] [40]
  2278 ;;  x             120    0[BANK6 ] [40]
  2279 ;;  overall_out_  120  120[BANK5 ] [40]
  2280 ;;  qualified_co  120  120[BANK4 ] [40]
  2281 ;;  qualified_co  120  120[BANK3 ] [40]
  2282 ;;  cons_mf3      120    0[BANK5 ] [40]
  2283 ;;  qualified_co  120    0[BANK4 ] [40]
  2284 ;;  cons_mf1      120    0[BANK3 ] [40]
  2285 ;;  ante_mf3      120  120[BANK2 ] [40]
  2286 ;;  cons_mf2      120    0[BANK2 ] [40]
  2287 ;;  ante_mf2      120  120[BANK1 ] [40]
  2288 ;;  ante_mf1      120    0[BANK1 ] [40]
  2289 ;;  output          3  122[BANK0 ] [40]
  2290 ;;  w3              3   91[COMRAM] [40]
  2291 ;;  w2              3   88[COMRAM] [40]
  2292 ;;  w1              3   85[COMRAM] [40]
  2293 ;;  i               2    0        int 
  2294 ;; Return value:  Size  Location     Type
  2295 ;;                  3   82[COMRAM] int 
  2296 ;; Registers used:
  2297 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2298 ;; Tracked objects:
  2299 ;;		On entry : 0/0
  2300 ;;		On exit  : 0/0
  2301 ;;		Unchanged: 0/0
  2302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2303 ;;      Params:         3       0       0       0       0       0       0       0       0
  2304 ;;      Locals:         9       3     240     240     240     240     240     240       0
  2305 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2306 ;;      Totals:        12       3     240     240     240     240     240     240       0
  2307 ;;Total ram usage:     1455 bytes
  2308 ;; Hardware stack levels used:    1
  2309 ;; Hardware stack levels required when called:    4
  2310 ;; This function calls:
  2311 ;;		_defuzzy
  2312 ;;		_linspace
  2313 ;;		_out_mf
  2314 ;;		_qualified
  2315 ;;		_tri_mf
  2316 ;;		_triangular
  2317 ;; This function is called by:
  2318 ;;		_main
  2319 ;; This function uses a non-reentrant model
  2320 ;;
  2321                           
  2322                           	psect	text16
  2323  007C7E                     __ptext16:
  2324                           	opt stack 0
  2325  007C7E                     _fuzzy_system_single2:
  2326                           	opt stack 26
  2327                           
  2328                           ;fuzzy.c: 236: double ante_mf1[40],cons_mf1[40];
  2329                           ;fuzzy.c: 237: double ante_mf2[40],cons_mf2[40];
  2330                           ;fuzzy.c: 238: double ante_mf3[40],cons_mf3[40];
  2331                           ;fuzzy.c: 239: double x[40],y[40];
  2332                           ;fuzzy.c: 240: double qualified_cons_mf1[40],qualified_cons_mf2[40],qualified_cons_mf3[4
      +                          0];
  2333                           ;fuzzy.c: 241: double overall_out_mf[40];
  2334                           ;fuzzy.c: 242: double w1,w2,w3;
  2335                           ;fuzzy.c: 243: double output;
  2336                           ;fuzzy.c: 244: int i;
  2337                           ;fuzzy.c: 245: linspace(x,-2,2,40);
  2338                           
  2339                           ;incstack = 0
  2340  007C7E  0106               	movlb	6	; () banked
  2341  007C80  0E06               	movlw	high fuzzy_system_single2@x
  2342  007C82  6E38               	movwf	linspace@x+1,c
  2343  007C84  0106               	movlb	6	; () banked
  2344  007C86  0E00               	movlw	low fuzzy_system_single2@x
  2345  007C88  6E37               	movwf	linspace@x,c
  2346  007C8A  0E00               	movlw	0
  2347  007C8C  6E39               	movwf	linspace@start,c
  2348  007C8E  0E00               	movlw	0
  2349  007C90  6E3A               	movwf	linspace@start+1,c
  2350  007C92  0EC0               	movlw	192
  2351  007C94  6E3B               	movwf	linspace@start+2,c
  2352  007C96  0E00               	movlw	0
  2353  007C98  6E3C               	movwf	linspace@end,c
  2354  007C9A  0E00               	movlw	0
  2355  007C9C  6E3D               	movwf	linspace@end+1,c
  2356  007C9E  0E40               	movlw	64
  2357  007CA0  6E3E               	movwf	linspace@end+2,c
  2358  007CA2  0E00               	movlw	0
  2359  007CA4  6E40               	movwf	linspace@size+1,c
  2360  007CA6  0E28               	movlw	40
  2361  007CA8  6E3F               	movwf	linspace@size,c
  2362  007CAA  ECC5  F037         	call	_linspace	;wreg free
  2363                           
  2364                           ;fuzzy.c: 246: linspace(y,0,100,40);
  2365  007CAE  0106               	movlb	6	; () banked
  2366  007CB0  0E06               	movlw	high fuzzy_system_single2@y
  2367  007CB2  6E38               	movwf	linspace@x+1,c
  2368  007CB4  0106               	movlb	6	; () banked
  2369  007CB6  0E78               	movlw	low fuzzy_system_single2@y
  2370  007CB8  6E37               	movwf	linspace@x,c
  2371  007CBA  0E00               	movlw	0
  2372  007CBC  6E39               	movwf	linspace@start,c
  2373  007CBE  0E00               	movlw	0
  2374  007CC0  6E3A               	movwf	linspace@start+1,c
  2375  007CC2  0E00               	movlw	0
  2376  007CC4  6E3B               	movwf	linspace@start+2,c
  2377  007CC6  0E00               	movlw	0
  2378  007CC8  6E3C               	movwf	linspace@end,c
  2379  007CCA  0EC8               	movlw	200
  2380  007CCC  6E3D               	movwf	linspace@end+1,c
  2381  007CCE  0E42               	movlw	66
  2382  007CD0  6E3E               	movwf	linspace@end+2,c
  2383  007CD2  0E00               	movlw	0
  2384  007CD4  6E40               	movwf	linspace@size+1,c
  2385  007CD6  0E28               	movlw	40
  2386  007CD8  6E3F               	movwf	linspace@size,c
  2387  007CDA  ECC5  F037         	call	_linspace	;wreg free
  2388                           
  2389                           ;fuzzy.c: 249: tri_mf(ante_mf1,x,-3.6, -2, -0.4);
  2390  007CDE  0101               	movlb	1	; () banked
  2391  007CE0  0E01               	movlw	high fuzzy_system_single2@ante_mf1
  2392  007CE2  6E47               	movwf	tri_mf@t_value+1,c
  2393  007CE4  0101               	movlb	1	; () banked
  2394  007CE6  0E00               	movlw	low fuzzy_system_single2@ante_mf1
  2395  007CE8  6E46               	movwf	tri_mf@t_value,c
  2396  007CEA  0106               	movlb	6	; () banked
  2397  007CEC  0E06               	movlw	high fuzzy_system_single2@x
  2398  007CEE  6E49               	movwf	tri_mf@x+1,c
  2399  007CF0  0106               	movlb	6	; () banked
  2400  007CF2  0E00               	movlw	low fuzzy_system_single2@x
  2401  007CF4  6E48               	movwf	tri_mf@x,c
  2402  007CF6  0E66               	movlw	102
  2403  007CF8  6E4A               	movwf	tri_mf@a,c
  2404  007CFA  0E66               	movlw	102
  2405  007CFC  6E4B               	movwf	tri_mf@a+1,c
  2406  007CFE  0EC0               	movlw	192
  2407  007D00  6E4C               	movwf	tri_mf@a+2,c
  2408  007D02  0E00               	movlw	0
  2409  007D04  6E4D               	movwf	tri_mf@b,c
  2410  007D06  0E00               	movlw	0
  2411  007D08  6E4E               	movwf	tri_mf@b+1,c
  2412  007D0A  0EC0               	movlw	192
  2413  007D0C  6E4F               	movwf	tri_mf@b+2,c
  2414  007D0E  0ECD               	movlw	205
  2415  007D10  6E50               	movwf	tri_mf@c,c
  2416  007D12  0ECC               	movlw	204
  2417  007D14  6E51               	movwf	tri_mf@c+1,c
  2418  007D16  0EBE               	movlw	190
  2419  007D18  6E52               	movwf	tri_mf@c+2,c
  2420  007D1A  EC46  F038         	call	_tri_mf	;wreg free
  2421                           
  2422                           ;fuzzy.c: 250: tri_mf(ante_mf2,x,-1.6, 0, 1.6);
  2423  007D1E  0101               	movlb	1	; () banked
  2424  007D20  0E01               	movlw	high fuzzy_system_single2@ante_mf2
  2425  007D22  6E47               	movwf	tri_mf@t_value+1,c
  2426  007D24  0101               	movlb	1	; () banked
  2427  007D26  0E78               	movlw	low fuzzy_system_single2@ante_mf2
  2428  007D28  6E46               	movwf	tri_mf@t_value,c
  2429  007D2A  0106               	movlb	6	; () banked
  2430  007D2C  0E06               	movlw	high fuzzy_system_single2@x
  2431  007D2E  6E49               	movwf	tri_mf@x+1,c
  2432  007D30  0106               	movlb	6	; () banked
  2433  007D32  0E00               	movlw	low fuzzy_system_single2@x
  2434  007D34  6E48               	movwf	tri_mf@x,c
  2435  007D36  0ECD               	movlw	205
  2436  007D38  6E4A               	movwf	tri_mf@a,c
  2437  007D3A  0ECC               	movlw	204
  2438  007D3C  6E4B               	movwf	tri_mf@a+1,c
  2439  007D3E  0EBF               	movlw	191
  2440  007D40  6E4C               	movwf	tri_mf@a+2,c
  2441  007D42  0E00               	movlw	0
  2442  007D44  6E4D               	movwf	tri_mf@b,c
  2443  007D46  0E00               	movlw	0
  2444  007D48  6E4E               	movwf	tri_mf@b+1,c
  2445  007D4A  0E00               	movlw	0
  2446  007D4C  6E4F               	movwf	tri_mf@b+2,c
  2447  007D4E  0ECD               	movlw	205
  2448  007D50  6E50               	movwf	tri_mf@c,c
  2449  007D52  0ECC               	movlw	204
  2450  007D54  6E51               	movwf	tri_mf@c+1,c
  2451  007D56  0E3F               	movlw	63
  2452  007D58  6E52               	movwf	tri_mf@c+2,c
  2453  007D5A  EC46  F038         	call	_tri_mf	;wreg free
  2454                           
  2455                           ;fuzzy.c: 251: tri_mf(ante_mf3,x,0.4, 2, 3.6);
  2456  007D5E  0102               	movlb	2	; () banked
  2457  007D60  0E02               	movlw	high fuzzy_system_single2@ante_mf3
  2458  007D62  6E47               	movwf	tri_mf@t_value+1,c
  2459  007D64  0102               	movlb	2	; () banked
  2460  007D66  0E78               	movlw	low fuzzy_system_single2@ante_mf3
  2461  007D68  6E46               	movwf	tri_mf@t_value,c
  2462  007D6A  0106               	movlb	6	; () banked
  2463  007D6C  0E06               	movlw	high fuzzy_system_single2@x
  2464  007D6E  6E49               	movwf	tri_mf@x+1,c
  2465  007D70  0106               	movlb	6	; () banked
  2466  007D72  0E00               	movlw	low fuzzy_system_single2@x
  2467  007D74  6E48               	movwf	tri_mf@x,c
  2468  007D76  0ECD               	movlw	205
  2469  007D78  6E4A               	movwf	tri_mf@a,c
  2470  007D7A  0ECC               	movlw	204
  2471  007D7C  6E4B               	movwf	tri_mf@a+1,c
  2472  007D7E  0E3E               	movlw	62
  2473  007D80  6E4C               	movwf	tri_mf@a+2,c
  2474  007D82  0E00               	movlw	0
  2475  007D84  6E4D               	movwf	tri_mf@b,c
  2476  007D86  0E00               	movlw	0
  2477  007D88  6E4E               	movwf	tri_mf@b+1,c
  2478  007D8A  0E40               	movlw	64
  2479  007D8C  6E4F               	movwf	tri_mf@b+2,c
  2480  007D8E  0E66               	movlw	102
  2481  007D90  6E50               	movwf	tri_mf@c,c
  2482  007D92  0E66               	movlw	102
  2483  007D94  6E51               	movwf	tri_mf@c+1,c
  2484  007D96  0E40               	movlw	64
  2485  007D98  6E52               	movwf	tri_mf@c+2,c
  2486  007D9A  EC46  F038         	call	_tri_mf	;wreg free
  2487                           
  2488                           ;fuzzy.c: 254: tri_mf(cons_mf1,y,-40, 0, 40);
  2489  007D9E  0103               	movlb	3	; () banked
  2490  007DA0  0E03               	movlw	high fuzzy_system_single2@cons_mf1
  2491  007DA2  6E47               	movwf	tri_mf@t_value+1,c
  2492  007DA4  0103               	movlb	3	; () banked
  2493  007DA6  0E00               	movlw	low fuzzy_system_single2@cons_mf1
  2494  007DA8  6E46               	movwf	tri_mf@t_value,c
  2495  007DAA  0106               	movlb	6	; () banked
  2496  007DAC  0E06               	movlw	high fuzzy_system_single2@y
  2497  007DAE  6E49               	movwf	tri_mf@x+1,c
  2498  007DB0  0106               	movlb	6	; () banked
  2499  007DB2  0E78               	movlw	low fuzzy_system_single2@y
  2500  007DB4  6E48               	movwf	tri_mf@x,c
  2501  007DB6  0E00               	movlw	0
  2502  007DB8  6E4A               	movwf	tri_mf@a,c
  2503  007DBA  0E20               	movlw	32
  2504  007DBC  6E4B               	movwf	tri_mf@a+1,c
  2505  007DBE  0EC2               	movlw	194
  2506  007DC0  6E4C               	movwf	tri_mf@a+2,c
  2507  007DC2  0E00               	movlw	0
  2508  007DC4  6E4D               	movwf	tri_mf@b,c
  2509  007DC6  0E00               	movlw	0
  2510  007DC8  6E4E               	movwf	tri_mf@b+1,c
  2511  007DCA  0E00               	movlw	0
  2512  007DCC  6E4F               	movwf	tri_mf@b+2,c
  2513  007DCE  0E00               	movlw	0
  2514  007DD0  6E50               	movwf	tri_mf@c,c
  2515  007DD2  0E20               	movlw	32
  2516  007DD4  6E51               	movwf	tri_mf@c+1,c
  2517  007DD6  0E42               	movlw	66
  2518  007DD8  6E52               	movwf	tri_mf@c+2,c
  2519  007DDA  EC46  F038         	call	_tri_mf	;wreg free
  2520                           
  2521                           ;fuzzy.c: 255: tri_mf(cons_mf2,y,10, 50, 90);
  2522  007DDE  0102               	movlb	2	; () banked
  2523  007DE0  0E02               	movlw	high fuzzy_system_single2@cons_mf2
  2524  007DE2  6E47               	movwf	tri_mf@t_value+1,c
  2525  007DE4  0102               	movlb	2	; () banked
  2526  007DE6  0E00               	movlw	low fuzzy_system_single2@cons_mf2
  2527  007DE8  6E46               	movwf	tri_mf@t_value,c
  2528  007DEA  0106               	movlb	6	; () banked
  2529  007DEC  0E06               	movlw	high fuzzy_system_single2@y
  2530  007DEE  6E49               	movwf	tri_mf@x+1,c
  2531  007DF0  0106               	movlb	6	; () banked
  2532  007DF2  0E78               	movlw	low fuzzy_system_single2@y
  2533  007DF4  6E48               	movwf	tri_mf@x,c
  2534  007DF6  0E00               	movlw	0
  2535  007DF8  6E4A               	movwf	tri_mf@a,c
  2536  007DFA  0E20               	movlw	32
  2537  007DFC  6E4B               	movwf	tri_mf@a+1,c
  2538  007DFE  0E41               	movlw	65
  2539  007E00  6E4C               	movwf	tri_mf@a+2,c
  2540  007E02  0E00               	movlw	0
  2541  007E04  6E4D               	movwf	tri_mf@b,c
  2542  007E06  0E48               	movlw	72
  2543  007E08  6E4E               	movwf	tri_mf@b+1,c
  2544  007E0A  0E42               	movlw	66
  2545  007E0C  6E4F               	movwf	tri_mf@b+2,c
  2546  007E0E  0E00               	movlw	0
  2547  007E10  6E50               	movwf	tri_mf@c,c
  2548  007E12  0EB4               	movlw	180
  2549  007E14  6E51               	movwf	tri_mf@c+1,c
  2550  007E16  0E42               	movlw	66
  2551  007E18  6E52               	movwf	tri_mf@c+2,c
  2552  007E1A  EC46  F038         	call	_tri_mf	;wreg free
  2553                           
  2554                           ;fuzzy.c: 256: tri_mf(cons_mf3,y,60, 100, 140);
  2555  007E1E  0105               	movlb	5	; () banked
  2556  007E20  0E05               	movlw	high fuzzy_system_single2@cons_mf3
  2557  007E22  6E47               	movwf	tri_mf@t_value+1,c
  2558  007E24  0105               	movlb	5	; () banked
  2559  007E26  0E00               	movlw	low fuzzy_system_single2@cons_mf3
  2560  007E28  6E46               	movwf	tri_mf@t_value,c
  2561  007E2A  0106               	movlb	6	; () banked
  2562  007E2C  0E06               	movlw	high fuzzy_system_single2@y
  2563  007E2E  6E49               	movwf	tri_mf@x+1,c
  2564  007E30  0106               	movlb	6	; () banked
  2565  007E32  0E78               	movlw	low fuzzy_system_single2@y
  2566  007E34  6E48               	movwf	tri_mf@x,c
  2567  007E36  0E00               	movlw	0
  2568  007E38  6E4A               	movwf	tri_mf@a,c
  2569  007E3A  0E70               	movlw	112
  2570  007E3C  6E4B               	movwf	tri_mf@a+1,c
  2571  007E3E  0E42               	movlw	66
  2572  007E40  6E4C               	movwf	tri_mf@a+2,c
  2573  007E42  0E00               	movlw	0
  2574  007E44  6E4D               	movwf	tri_mf@b,c
  2575  007E46  0EC8               	movlw	200
  2576  007E48  6E4E               	movwf	tri_mf@b+1,c
  2577  007E4A  0E42               	movlw	66
  2578  007E4C  6E4F               	movwf	tri_mf@b+2,c
  2579  007E4E  0E00               	movlw	0
  2580  007E50  6E50               	movwf	tri_mf@c,c
  2581  007E52  0E0C               	movlw	12
  2582  007E54  6E51               	movwf	tri_mf@c+1,c
  2583  007E56  0E43               	movlw	67
  2584  007E58  6E52               	movwf	tri_mf@c+2,c
  2585  007E5A  EC46  F038         	call	_tri_mf	;wreg free
  2586                           
  2587                           ;fuzzy.c: 260: w1=triangular(-3.6, -2, -0.4,input);
  2588  007E5E  0E66               	movlw	102
  2589  007E60  6E37               	movwf	triangular@a,c
  2590  007E62  0E66               	movlw	102
  2591  007E64  6E38               	movwf	triangular@a+1,c
  2592  007E66  0EC0               	movlw	192
  2593  007E68  6E39               	movwf	triangular@a+2,c
  2594  007E6A  0E00               	movlw	0
  2595  007E6C  6E3A               	movwf	triangular@b,c
  2596  007E6E  0E00               	movlw	0
  2597  007E70  6E3B               	movwf	triangular@b+1,c
  2598  007E72  0EC0               	movlw	192
  2599  007E74  6E3C               	movwf	triangular@b+2,c
  2600  007E76  0ECD               	movlw	205
  2601  007E78  6E3D               	movwf	triangular@c,c
  2602  007E7A  0ECC               	movlw	204
  2603  007E7C  6E3E               	movwf	triangular@c+1,c
  2604  007E7E  0EBE               	movlw	190
  2605  007E80  6E3F               	movwf	triangular@c+2,c
  2606  007E82  C053  F040         	movff	fuzzy_system_single2@input,triangular@x
  2607  007E86  C054  F041         	movff	fuzzy_system_single2@input+1,triangular@x+1
  2608  007E8A  C055  F042         	movff	fuzzy_system_single2@input+2,triangular@x+2
  2609  007E8E  EC5E  F03A         	call	_triangular	;wreg free
  2610  007E92  C037  F056         	movff	?_triangular,fuzzy_system_single2@w1
  2611  007E96  C038  F057         	movff	?_triangular+1,fuzzy_system_single2@w1+1
  2612  007E9A  C039  F058         	movff	?_triangular+2,fuzzy_system_single2@w1+2
  2613                           
  2614                           ;fuzzy.c: 261: w2=triangular(-1.6, 0, 1.6,input);
  2615  007E9E  0ECD               	movlw	205
  2616  007EA0  6E37               	movwf	triangular@a,c
  2617  007EA2  0ECC               	movlw	204
  2618  007EA4  6E38               	movwf	triangular@a+1,c
  2619  007EA6  0EBF               	movlw	191
  2620  007EA8  6E39               	movwf	triangular@a+2,c
  2621  007EAA  0E00               	movlw	0
  2622  007EAC  6E3A               	movwf	triangular@b,c
  2623  007EAE  0E00               	movlw	0
  2624  007EB0  6E3B               	movwf	triangular@b+1,c
  2625  007EB2  0E00               	movlw	0
  2626  007EB4  6E3C               	movwf	triangular@b+2,c
  2627  007EB6  0ECD               	movlw	205
  2628  007EB8  6E3D               	movwf	triangular@c,c
  2629  007EBA  0ECC               	movlw	204
  2630  007EBC  6E3E               	movwf	triangular@c+1,c
  2631  007EBE  0E3F               	movlw	63
  2632  007EC0  6E3F               	movwf	triangular@c+2,c
  2633  007EC2  C053  F040         	movff	fuzzy_system_single2@input,triangular@x
  2634  007EC6  C054  F041         	movff	fuzzy_system_single2@input+1,triangular@x+1
  2635  007ECA  C055  F042         	movff	fuzzy_system_single2@input+2,triangular@x+2
  2636  007ECE  EC5E  F03A         	call	_triangular	;wreg free
  2637  007ED2  C037  F059         	movff	?_triangular,fuzzy_system_single2@w2
  2638  007ED6  C038  F05A         	movff	?_triangular+1,fuzzy_system_single2@w2+1
  2639  007EDA  C039  F05B         	movff	?_triangular+2,fuzzy_system_single2@w2+2
  2640                           
  2641                           ;fuzzy.c: 262: w3=triangular(0.4, 2, 3.6,input);
  2642  007EDE  0ECD               	movlw	205
  2643  007EE0  6E37               	movwf	triangular@a,c
  2644  007EE2  0ECC               	movlw	204
  2645  007EE4  6E38               	movwf	triangular@a+1,c
  2646  007EE6  0E3E               	movlw	62
  2647  007EE8  6E39               	movwf	triangular@a+2,c
  2648  007EEA  0E00               	movlw	0
  2649  007EEC  6E3A               	movwf	triangular@b,c
  2650  007EEE  0E00               	movlw	0
  2651  007EF0  6E3B               	movwf	triangular@b+1,c
  2652  007EF2  0E40               	movlw	64
  2653  007EF4  6E3C               	movwf	triangular@b+2,c
  2654  007EF6  0E66               	movlw	102
  2655  007EF8  6E3D               	movwf	triangular@c,c
  2656  007EFA  0E66               	movlw	102
  2657  007EFC  6E3E               	movwf	triangular@c+1,c
  2658  007EFE  0E40               	movlw	64
  2659  007F00  6E3F               	movwf	triangular@c+2,c
  2660  007F02  C053  F040         	movff	fuzzy_system_single2@input,triangular@x
  2661  007F06  C054  F041         	movff	fuzzy_system_single2@input+1,triangular@x+1
  2662  007F0A  C055  F042         	movff	fuzzy_system_single2@input+2,triangular@x+2
  2663  007F0E  EC5E  F03A         	call	_triangular	;wreg free
  2664  007F12  C037  F05C         	movff	?_triangular,fuzzy_system_single2@w3
  2665  007F16  C038  F05D         	movff	?_triangular+1,fuzzy_system_single2@w3+1
  2666  007F1A  C039  F05E         	movff	?_triangular+2,fuzzy_system_single2@w3+2
  2667                           
  2668                           ;fuzzy.c: 263: qualified(qualified_cons_mf1,cons_mf1,w1);
  2669  007F1E  0103               	movlb	3	; () banked
  2670  007F20  0E03               	movlw	high fuzzy_system_single2@qualified_cons_mf1
  2671  007F22  6E11               	movwf	qualified@y+1,c
  2672  007F24  0103               	movlb	3	; () banked
  2673  007F26  0E78               	movlw	low fuzzy_system_single2@qualified_cons_mf1
  2674  007F28  6E10               	movwf	qualified@y,c
  2675  007F2A  0103               	movlb	3	; () banked
  2676  007F2C  0E03               	movlw	high fuzzy_system_single2@cons_mf1
  2677  007F2E  6E13               	movwf	qualified@x+1,c
  2678  007F30  0103               	movlb	3	; () banked
  2679  007F32  0E00               	movlw	low fuzzy_system_single2@cons_mf1
  2680  007F34  6E12               	movwf	qualified@x,c
  2681  007F36  C056  F014         	movff	fuzzy_system_single2@w1,qualified@w
  2682  007F3A  C057  F015         	movff	fuzzy_system_single2@w1+1,qualified@w+1
  2683  007F3E  C058  F016         	movff	fuzzy_system_single2@w1+2,qualified@w+2
  2684  007F42  ECDB  F036         	call	_qualified	;wreg free
  2685                           
  2686                           ;fuzzy.c: 264: qualified(qualified_cons_mf2,cons_mf3,w2);
  2687  007F46  0104               	movlb	4	; () banked
  2688  007F48  0E04               	movlw	high fuzzy_system_single2@qualified_cons_mf2
  2689  007F4A  6E11               	movwf	qualified@y+1,c
  2690  007F4C  0104               	movlb	4	; () banked
  2691  007F4E  0E78               	movlw	low fuzzy_system_single2@qualified_cons_mf2
  2692  007F50  6E10               	movwf	qualified@y,c
  2693  007F52  0105               	movlb	5	; () banked
  2694  007F54  0E05               	movlw	high fuzzy_system_single2@cons_mf3
  2695  007F56  6E13               	movwf	qualified@x+1,c
  2696  007F58  0105               	movlb	5	; () banked
  2697  007F5A  0E00               	movlw	low fuzzy_system_single2@cons_mf3
  2698  007F5C  6E12               	movwf	qualified@x,c
  2699  007F5E  C059  F014         	movff	fuzzy_system_single2@w2,qualified@w
  2700  007F62  C05A  F015         	movff	fuzzy_system_single2@w2+1,qualified@w+1
  2701  007F66  C05B  F016         	movff	fuzzy_system_single2@w2+2,qualified@w+2
  2702  007F6A  ECDB  F036         	call	_qualified	;wreg free
  2703                           
  2704                           ;fuzzy.c: 265: qualified(qualified_cons_mf3,cons_mf3,w3);
  2705  007F6E  0104               	movlb	4	; () banked
  2706  007F70  0E04               	movlw	high fuzzy_system_single2@qualified_cons_mf3
  2707  007F72  6E11               	movwf	qualified@y+1,c
  2708  007F74  0104               	movlb	4	; () banked
  2709  007F76  0E00               	movlw	low fuzzy_system_single2@qualified_cons_mf3
  2710  007F78  6E10               	movwf	qualified@y,c
  2711  007F7A  0105               	movlb	5	; () banked
  2712  007F7C  0E05               	movlw	high fuzzy_system_single2@cons_mf3
  2713  007F7E  6E13               	movwf	qualified@x+1,c
  2714  007F80  0105               	movlb	5	; () banked
  2715  007F82  0E00               	movlw	low fuzzy_system_single2@cons_mf3
  2716  007F84  6E12               	movwf	qualified@x,c
  2717  007F86  C05C  F014         	movff	fuzzy_system_single2@w3,qualified@w
  2718  007F8A  C05D  F015         	movff	fuzzy_system_single2@w3+1,qualified@w+1
  2719  007F8E  C05E  F016         	movff	fuzzy_system_single2@w3+2,qualified@w+2
  2720  007F92  ECDB  F036         	call	_qualified	;wreg free
  2721                           
  2722                           ;fuzzy.c: 266: out_mf(overall_out_mf,qualified_cons_mf1,qualified_cons_mf2,qualified_con
      +                          s_mf3);
  2723  007F96  0105               	movlb	5	; () banked
  2724  007F98  0E05               	movlw	high fuzzy_system_single2@overall_out_mf
  2725  007F9A  6E11               	movwf	out_mf@result+1,c
  2726  007F9C  0105               	movlb	5	; () banked
  2727  007F9E  0E78               	movlw	low fuzzy_system_single2@overall_out_mf
  2728  007FA0  6E10               	movwf	out_mf@result,c
  2729  007FA2  0103               	movlb	3	; () banked
  2730  007FA4  0E03               	movlw	high fuzzy_system_single2@qualified_cons_mf1
  2731  007FA6  6E13               	movwf	out_mf@x+1,c
  2732  007FA8  0103               	movlb	3	; () banked
  2733  007FAA  0E78               	movlw	low fuzzy_system_single2@qualified_cons_mf1
  2734  007FAC  6E12               	movwf	out_mf@x,c
  2735  007FAE  0104               	movlb	4	; () banked
  2736  007FB0  0E04               	movlw	high fuzzy_system_single2@qualified_cons_mf2
  2737  007FB2  6E15               	movwf	out_mf@y+1,c
  2738  007FB4  0104               	movlb	4	; () banked
  2739  007FB6  0E78               	movlw	low fuzzy_system_single2@qualified_cons_mf2
  2740  007FB8  6E14               	movwf	out_mf@y,c
  2741  007FBA  0104               	movlb	4	; () banked
  2742  007FBC  0E04               	movlw	high fuzzy_system_single2@qualified_cons_mf3
  2743  007FBE  6E17               	movwf	out_mf@z+1,c
  2744  007FC0  0104               	movlb	4	; () banked
  2745  007FC2  0E00               	movlw	low fuzzy_system_single2@qualified_cons_mf3
  2746  007FC4  6E16               	movwf	out_mf@z,c
  2747  007FC6  EC51  F03B         	call	_out_mf	;wreg free
  2748                           
  2749                           ;fuzzy.c: 267: output= defuzzy(y,overall_out_mf);
  2750  007FCA  0106               	movlb	6	; () banked
  2751  007FCC  0E06               	movlw	high fuzzy_system_single2@y
  2752  007FCE  6E38               	movwf	defuzzy@x+1,c
  2753  007FD0  0106               	movlb	6	; () banked
  2754  007FD2  0E78               	movlw	low fuzzy_system_single2@y
  2755  007FD4  6E37               	movwf	defuzzy@x,c
  2756  007FD6  0105               	movlb	5	; () banked
  2757  007FD8  0E05               	movlw	high fuzzy_system_single2@overall_out_mf
  2758  007FDA  6E3A               	movwf	defuzzy@mf+1,c
  2759  007FDC  0105               	movlb	5	; () banked
  2760  007FDE  0E78               	movlw	low fuzzy_system_single2@overall_out_mf
  2761  007FE0  6E39               	movwf	defuzzy@mf,c
  2762  007FE2  ECD7  F038         	call	_defuzzy	;wreg free
  2763  007FE6  C037  F0DA         	movff	?_defuzzy,fuzzy_system_single2@output
  2764  007FEA  C038  F0DB         	movff	?_defuzzy+1,fuzzy_system_single2@output+1
  2765  007FEE  C039  F0DC         	movff	?_defuzzy+2,fuzzy_system_single2@output+2
  2766                           
  2767                           ;fuzzy.c: 268: return output;
  2768  007FF2  C0DA  F053         	movff	fuzzy_system_single2@output,?_fuzzy_system_single2
  2769  007FF6  C0DB  F054         	movff	fuzzy_system_single2@output+1,?_fuzzy_system_single2+1
  2770  007FFA  C0DC  F055         	movff	fuzzy_system_single2@output+2,?_fuzzy_system_single2+2
  2771  007FFE  0012               	return	
  2772  008000                     __end_of_fuzzy_system_single2:
  2773                           	opt stack 0
  2774                           tblptru	equ	0xFF8
  2775                           tblptrh	equ	0xFF7
  2776                           tblptrl	equ	0xFF6
  2777                           tablat	equ	0xFF5
  2778                           wreg	equ	0xFE8
  2779                           status	equ	0xFD8
  2780                           
  2781 ;; *************** function _fuzzy_system_single1 *****************
  2782 ;; Defined at:
  2783 ;;		line 275 in file "fuzzy.c"
  2784 ;; Parameters:    Size  Location     Type
  2785 ;;  input           3   82[COMRAM] int 
  2786 ;; Auto vars:     Size  Location     Type
  2787 ;;  y             120  120[BANK6 ] [40]
  2788 ;;  x             120    0[BANK6 ] [40]
  2789 ;;  overall_out_  120  120[BANK5 ] [40]
  2790 ;;  qualified_co  120  120[BANK4 ] [40]
  2791 ;;  qualified_co  120  120[BANK3 ] [40]
  2792 ;;  cons_mf3      120    0[BANK5 ] [40]
  2793 ;;  qualified_co  120    0[BANK4 ] [40]
  2794 ;;  cons_mf1      120    0[BANK3 ] [40]
  2795 ;;  ante_mf3      120  120[BANK2 ] [40]
  2796 ;;  cons_mf2      120    0[BANK2 ] [40]
  2797 ;;  ante_mf2      120  120[BANK1 ] [40]
  2798 ;;  ante_mf1      120    0[BANK1 ] [40]
  2799 ;;  output          3  122[BANK0 ] [40]
  2800 ;;  w3              3   91[COMRAM] [40]
  2801 ;;  w2              3   88[COMRAM] [40]
  2802 ;;  w1              3   85[COMRAM] [40]
  2803 ;;  i               2    0        int 
  2804 ;; Return value:  Size  Location     Type
  2805 ;;                  3   82[COMRAM] int 
  2806 ;; Registers used:
  2807 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2808 ;; Tracked objects:
  2809 ;;		On entry : 0/0
  2810 ;;		On exit  : 0/0
  2811 ;;		Unchanged: 0/0
  2812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2813 ;;      Params:         3       0       0       0       0       0       0       0       0
  2814 ;;      Locals:         9       3     240     240     240     240     240     240       0
  2815 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2816 ;;      Totals:        12       3     240     240     240     240     240     240       0
  2817 ;;Total ram usage:     1455 bytes
  2818 ;; Hardware stack levels used:    1
  2819 ;; Hardware stack levels required when called:    4
  2820 ;; This function calls:
  2821 ;;		_defuzzy
  2822 ;;		_linspace
  2823 ;;		_out_mf
  2824 ;;		_qualified
  2825 ;;		_tri_mf
  2826 ;;		_triangular
  2827 ;; This function is called by:
  2828 ;;		_main
  2829 ;; This function uses a non-reentrant model
  2830 ;;
  2831                           
  2832                           	psect	text17
  2833  0078FC                     __ptext17:
  2834                           	opt stack 0
  2835  0078FC                     _fuzzy_system_single1:
  2836                           	opt stack 26
  2837                           
  2838                           ;fuzzy.c: 277: double ante_mf1[40],cons_mf1[40];
  2839                           ;fuzzy.c: 278: double ante_mf2[40],cons_mf2[40];
  2840                           ;fuzzy.c: 279: double ante_mf3[40],cons_mf3[40];
  2841                           ;fuzzy.c: 280: double x[40],y[40];
  2842                           ;fuzzy.c: 281: double qualified_cons_mf1[40],qualified_cons_mf2[40],qualified_cons_mf3[4
      +                          0];
  2843                           ;fuzzy.c: 282: double overall_out_mf[40];
  2844                           ;fuzzy.c: 283: double w1,w2,w3;
  2845                           ;fuzzy.c: 284: double output;
  2846                           ;fuzzy.c: 285: int i;
  2847                           ;fuzzy.c: 286: linspace(x,-2,2,40);
  2848                           
  2849                           ;incstack = 0
  2850  0078FC  0106               	movlb	6	; () banked
  2851  0078FE  0E06               	movlw	high fuzzy_system_single1@x
  2852  007900  6E38               	movwf	linspace@x+1,c
  2853  007902  0106               	movlb	6	; () banked
  2854  007904  0E00               	movlw	low fuzzy_system_single1@x
  2855  007906  6E37               	movwf	linspace@x,c
  2856  007908  0E00               	movlw	0
  2857  00790A  6E39               	movwf	linspace@start,c
  2858  00790C  0E00               	movlw	0
  2859  00790E  6E3A               	movwf	linspace@start+1,c
  2860  007910  0EC0               	movlw	192
  2861  007912  6E3B               	movwf	linspace@start+2,c
  2862  007914  0E00               	movlw	0
  2863  007916  6E3C               	movwf	linspace@end,c
  2864  007918  0E00               	movlw	0
  2865  00791A  6E3D               	movwf	linspace@end+1,c
  2866  00791C  0E40               	movlw	64
  2867  00791E  6E3E               	movwf	linspace@end+2,c
  2868  007920  0E00               	movlw	0
  2869  007922  6E40               	movwf	linspace@size+1,c
  2870  007924  0E28               	movlw	40
  2871  007926  6E3F               	movwf	linspace@size,c
  2872  007928  ECC5  F037         	call	_linspace	;wreg free
  2873                           
  2874                           ;fuzzy.c: 287: linspace(y,0,100,40);
  2875  00792C  0106               	movlb	6	; () banked
  2876  00792E  0E06               	movlw	high fuzzy_system_single1@y
  2877  007930  6E38               	movwf	linspace@x+1,c
  2878  007932  0106               	movlb	6	; () banked
  2879  007934  0E78               	movlw	low fuzzy_system_single1@y
  2880  007936  6E37               	movwf	linspace@x,c
  2881  007938  0E00               	movlw	0
  2882  00793A  6E39               	movwf	linspace@start,c
  2883  00793C  0E00               	movlw	0
  2884  00793E  6E3A               	movwf	linspace@start+1,c
  2885  007940  0E00               	movlw	0
  2886  007942  6E3B               	movwf	linspace@start+2,c
  2887  007944  0E00               	movlw	0
  2888  007946  6E3C               	movwf	linspace@end,c
  2889  007948  0EC8               	movlw	200
  2890  00794A  6E3D               	movwf	linspace@end+1,c
  2891  00794C  0E42               	movlw	66
  2892  00794E  6E3E               	movwf	linspace@end+2,c
  2893  007950  0E00               	movlw	0
  2894  007952  6E40               	movwf	linspace@size+1,c
  2895  007954  0E28               	movlw	40
  2896  007956  6E3F               	movwf	linspace@size,c
  2897  007958  ECC5  F037         	call	_linspace	;wreg free
  2898                           
  2899                           ;fuzzy.c: 290: tri_mf(ante_mf1,x,-3.6, -2, -0.4);
  2900  00795C  0101               	movlb	1	; () banked
  2901  00795E  0E01               	movlw	high fuzzy_system_single1@ante_mf1
  2902  007960  6E47               	movwf	tri_mf@t_value+1,c
  2903  007962  0101               	movlb	1	; () banked
  2904  007964  0E00               	movlw	low fuzzy_system_single1@ante_mf1
  2905  007966  6E46               	movwf	tri_mf@t_value,c
  2906  007968  0106               	movlb	6	; () banked
  2907  00796A  0E06               	movlw	high fuzzy_system_single1@x
  2908  00796C  6E49               	movwf	tri_mf@x+1,c
  2909  00796E  0106               	movlb	6	; () banked
  2910  007970  0E00               	movlw	low fuzzy_system_single1@x
  2911  007972  6E48               	movwf	tri_mf@x,c
  2912  007974  0E66               	movlw	102
  2913  007976  6E4A               	movwf	tri_mf@a,c
  2914  007978  0E66               	movlw	102
  2915  00797A  6E4B               	movwf	tri_mf@a+1,c
  2916  00797C  0EC0               	movlw	192
  2917  00797E  6E4C               	movwf	tri_mf@a+2,c
  2918  007980  0E00               	movlw	0
  2919  007982  6E4D               	movwf	tri_mf@b,c
  2920  007984  0E00               	movlw	0
  2921  007986  6E4E               	movwf	tri_mf@b+1,c
  2922  007988  0EC0               	movlw	192
  2923  00798A  6E4F               	movwf	tri_mf@b+2,c
  2924  00798C  0ECD               	movlw	205
  2925  00798E  6E50               	movwf	tri_mf@c,c
  2926  007990  0ECC               	movlw	204
  2927  007992  6E51               	movwf	tri_mf@c+1,c
  2928  007994  0EBE               	movlw	190
  2929  007996  6E52               	movwf	tri_mf@c+2,c
  2930  007998  EC46  F038         	call	_tri_mf	;wreg free
  2931                           
  2932                           ;fuzzy.c: 291: tri_mf(ante_mf2,x,-1.6, 0, 1.6);
  2933  00799C  0101               	movlb	1	; () banked
  2934  00799E  0E01               	movlw	high fuzzy_system_single1@ante_mf2
  2935  0079A0  6E47               	movwf	tri_mf@t_value+1,c
  2936  0079A2  0101               	movlb	1	; () banked
  2937  0079A4  0E78               	movlw	low fuzzy_system_single1@ante_mf2
  2938  0079A6  6E46               	movwf	tri_mf@t_value,c
  2939  0079A8  0106               	movlb	6	; () banked
  2940  0079AA  0E06               	movlw	high fuzzy_system_single1@x
  2941  0079AC  6E49               	movwf	tri_mf@x+1,c
  2942  0079AE  0106               	movlb	6	; () banked
  2943  0079B0  0E00               	movlw	low fuzzy_system_single1@x
  2944  0079B2  6E48               	movwf	tri_mf@x,c
  2945  0079B4  0ECD               	movlw	205
  2946  0079B6  6E4A               	movwf	tri_mf@a,c
  2947  0079B8  0ECC               	movlw	204
  2948  0079BA  6E4B               	movwf	tri_mf@a+1,c
  2949  0079BC  0EBF               	movlw	191
  2950  0079BE  6E4C               	movwf	tri_mf@a+2,c
  2951  0079C0  0E00               	movlw	0
  2952  0079C2  6E4D               	movwf	tri_mf@b,c
  2953  0079C4  0E00               	movlw	0
  2954  0079C6  6E4E               	movwf	tri_mf@b+1,c
  2955  0079C8  0E00               	movlw	0
  2956  0079CA  6E4F               	movwf	tri_mf@b+2,c
  2957  0079CC  0ECD               	movlw	205
  2958  0079CE  6E50               	movwf	tri_mf@c,c
  2959  0079D0  0ECC               	movlw	204
  2960  0079D2  6E51               	movwf	tri_mf@c+1,c
  2961  0079D4  0E3F               	movlw	63
  2962  0079D6  6E52               	movwf	tri_mf@c+2,c
  2963  0079D8  EC46  F038         	call	_tri_mf	;wreg free
  2964                           
  2965                           ;fuzzy.c: 292: tri_mf(ante_mf3,x,0.4, 2, 3.6);
  2966  0079DC  0102               	movlb	2	; () banked
  2967  0079DE  0E02               	movlw	high fuzzy_system_single1@ante_mf3
  2968  0079E0  6E47               	movwf	tri_mf@t_value+1,c
  2969  0079E2  0102               	movlb	2	; () banked
  2970  0079E4  0E78               	movlw	low fuzzy_system_single1@ante_mf3
  2971  0079E6  6E46               	movwf	tri_mf@t_value,c
  2972  0079E8  0106               	movlb	6	; () banked
  2973  0079EA  0E06               	movlw	high fuzzy_system_single1@x
  2974  0079EC  6E49               	movwf	tri_mf@x+1,c
  2975  0079EE  0106               	movlb	6	; () banked
  2976  0079F0  0E00               	movlw	low fuzzy_system_single1@x
  2977  0079F2  6E48               	movwf	tri_mf@x,c
  2978  0079F4  0ECD               	movlw	205
  2979  0079F6  6E4A               	movwf	tri_mf@a,c
  2980  0079F8  0ECC               	movlw	204
  2981  0079FA  6E4B               	movwf	tri_mf@a+1,c
  2982  0079FC  0E3E               	movlw	62
  2983  0079FE  6E4C               	movwf	tri_mf@a+2,c
  2984  007A00  0E00               	movlw	0
  2985  007A02  6E4D               	movwf	tri_mf@b,c
  2986  007A04  0E00               	movlw	0
  2987  007A06  6E4E               	movwf	tri_mf@b+1,c
  2988  007A08  0E40               	movlw	64
  2989  007A0A  6E4F               	movwf	tri_mf@b+2,c
  2990  007A0C  0E66               	movlw	102
  2991  007A0E  6E50               	movwf	tri_mf@c,c
  2992  007A10  0E66               	movlw	102
  2993  007A12  6E51               	movwf	tri_mf@c+1,c
  2994  007A14  0E40               	movlw	64
  2995  007A16  6E52               	movwf	tri_mf@c+2,c
  2996  007A18  EC46  F038         	call	_tri_mf	;wreg free
  2997                           
  2998                           ;fuzzy.c: 295: tri_mf(cons_mf1,y,-40, 0, 40);
  2999  007A1C  0103               	movlb	3	; () banked
  3000  007A1E  0E03               	movlw	high fuzzy_system_single1@cons_mf1
  3001  007A20  6E47               	movwf	tri_mf@t_value+1,c
  3002  007A22  0103               	movlb	3	; () banked
  3003  007A24  0E00               	movlw	low fuzzy_system_single1@cons_mf1
  3004  007A26  6E46               	movwf	tri_mf@t_value,c
  3005  007A28  0106               	movlb	6	; () banked
  3006  007A2A  0E06               	movlw	high fuzzy_system_single1@y
  3007  007A2C  6E49               	movwf	tri_mf@x+1,c
  3008  007A2E  0106               	movlb	6	; () banked
  3009  007A30  0E78               	movlw	low fuzzy_system_single1@y
  3010  007A32  6E48               	movwf	tri_mf@x,c
  3011  007A34  0E00               	movlw	0
  3012  007A36  6E4A               	movwf	tri_mf@a,c
  3013  007A38  0E20               	movlw	32
  3014  007A3A  6E4B               	movwf	tri_mf@a+1,c
  3015  007A3C  0EC2               	movlw	194
  3016  007A3E  6E4C               	movwf	tri_mf@a+2,c
  3017  007A40  0E00               	movlw	0
  3018  007A42  6E4D               	movwf	tri_mf@b,c
  3019  007A44  0E00               	movlw	0
  3020  007A46  6E4E               	movwf	tri_mf@b+1,c
  3021  007A48  0E00               	movlw	0
  3022  007A4A  6E4F               	movwf	tri_mf@b+2,c
  3023  007A4C  0E00               	movlw	0
  3024  007A4E  6E50               	movwf	tri_mf@c,c
  3025  007A50  0E20               	movlw	32
  3026  007A52  6E51               	movwf	tri_mf@c+1,c
  3027  007A54  0E42               	movlw	66
  3028  007A56  6E52               	movwf	tri_mf@c+2,c
  3029  007A58  EC46  F038         	call	_tri_mf	;wreg free
  3030                           
  3031                           ;fuzzy.c: 296: tri_mf(cons_mf2,y,10, 50, 90);
  3032  007A5C  0102               	movlb	2	; () banked
  3033  007A5E  0E02               	movlw	high fuzzy_system_single1@cons_mf2
  3034  007A60  6E47               	movwf	tri_mf@t_value+1,c
  3035  007A62  0102               	movlb	2	; () banked
  3036  007A64  0E00               	movlw	low fuzzy_system_single1@cons_mf2
  3037  007A66  6E46               	movwf	tri_mf@t_value,c
  3038  007A68  0106               	movlb	6	; () banked
  3039  007A6A  0E06               	movlw	high fuzzy_system_single1@y
  3040  007A6C  6E49               	movwf	tri_mf@x+1,c
  3041  007A6E  0106               	movlb	6	; () banked
  3042  007A70  0E78               	movlw	low fuzzy_system_single1@y
  3043  007A72  6E48               	movwf	tri_mf@x,c
  3044  007A74  0E00               	movlw	0
  3045  007A76  6E4A               	movwf	tri_mf@a,c
  3046  007A78  0E20               	movlw	32
  3047  007A7A  6E4B               	movwf	tri_mf@a+1,c
  3048  007A7C  0E41               	movlw	65
  3049  007A7E  6E4C               	movwf	tri_mf@a+2,c
  3050  007A80  0E00               	movlw	0
  3051  007A82  6E4D               	movwf	tri_mf@b,c
  3052  007A84  0E48               	movlw	72
  3053  007A86  6E4E               	movwf	tri_mf@b+1,c
  3054  007A88  0E42               	movlw	66
  3055  007A8A  6E4F               	movwf	tri_mf@b+2,c
  3056  007A8C  0E00               	movlw	0
  3057  007A8E  6E50               	movwf	tri_mf@c,c
  3058  007A90  0EB4               	movlw	180
  3059  007A92  6E51               	movwf	tri_mf@c+1,c
  3060  007A94  0E42               	movlw	66
  3061  007A96  6E52               	movwf	tri_mf@c+2,c
  3062  007A98  EC46  F038         	call	_tri_mf	;wreg free
  3063                           
  3064                           ;fuzzy.c: 297: tri_mf(cons_mf3,y,60, 100, 140);
  3065  007A9C  0105               	movlb	5	; () banked
  3066  007A9E  0E05               	movlw	high fuzzy_system_single1@cons_mf3
  3067  007AA0  6E47               	movwf	tri_mf@t_value+1,c
  3068  007AA2  0105               	movlb	5	; () banked
  3069  007AA4  0E00               	movlw	low fuzzy_system_single1@cons_mf3
  3070  007AA6  6E46               	movwf	tri_mf@t_value,c
  3071  007AA8  0106               	movlb	6	; () banked
  3072  007AAA  0E06               	movlw	high fuzzy_system_single1@y
  3073  007AAC  6E49               	movwf	tri_mf@x+1,c
  3074  007AAE  0106               	movlb	6	; () banked
  3075  007AB0  0E78               	movlw	low fuzzy_system_single1@y
  3076  007AB2  6E48               	movwf	tri_mf@x,c
  3077  007AB4  0E00               	movlw	0
  3078  007AB6  6E4A               	movwf	tri_mf@a,c
  3079  007AB8  0E70               	movlw	112
  3080  007ABA  6E4B               	movwf	tri_mf@a+1,c
  3081  007ABC  0E42               	movlw	66
  3082  007ABE  6E4C               	movwf	tri_mf@a+2,c
  3083  007AC0  0E00               	movlw	0
  3084  007AC2  6E4D               	movwf	tri_mf@b,c
  3085  007AC4  0EC8               	movlw	200
  3086  007AC6  6E4E               	movwf	tri_mf@b+1,c
  3087  007AC8  0E42               	movlw	66
  3088  007ACA  6E4F               	movwf	tri_mf@b+2,c
  3089  007ACC  0E00               	movlw	0
  3090  007ACE  6E50               	movwf	tri_mf@c,c
  3091  007AD0  0E0C               	movlw	12
  3092  007AD2  6E51               	movwf	tri_mf@c+1,c
  3093  007AD4  0E43               	movlw	67
  3094  007AD6  6E52               	movwf	tri_mf@c+2,c
  3095  007AD8  EC46  F038         	call	_tri_mf	;wreg free
  3096                           
  3097                           ;fuzzy.c: 301: w1=triangular(-3.6, -2, -0.4,input);
  3098  007ADC  0E66               	movlw	102
  3099  007ADE  6E37               	movwf	triangular@a,c
  3100  007AE0  0E66               	movlw	102
  3101  007AE2  6E38               	movwf	triangular@a+1,c
  3102  007AE4  0EC0               	movlw	192
  3103  007AE6  6E39               	movwf	triangular@a+2,c
  3104  007AE8  0E00               	movlw	0
  3105  007AEA  6E3A               	movwf	triangular@b,c
  3106  007AEC  0E00               	movlw	0
  3107  007AEE  6E3B               	movwf	triangular@b+1,c
  3108  007AF0  0EC0               	movlw	192
  3109  007AF2  6E3C               	movwf	triangular@b+2,c
  3110  007AF4  0ECD               	movlw	205
  3111  007AF6  6E3D               	movwf	triangular@c,c
  3112  007AF8  0ECC               	movlw	204
  3113  007AFA  6E3E               	movwf	triangular@c+1,c
  3114  007AFC  0EBE               	movlw	190
  3115  007AFE  6E3F               	movwf	triangular@c+2,c
  3116  007B00  C053  F040         	movff	fuzzy_system_single1@input,triangular@x
  3117  007B04  C054  F041         	movff	fuzzy_system_single1@input+1,triangular@x+1
  3118  007B08  C055  F042         	movff	fuzzy_system_single1@input+2,triangular@x+2
  3119  007B0C  EC5E  F03A         	call	_triangular	;wreg free
  3120  007B10  C037  F056         	movff	?_triangular,fuzzy_system_single1@w1
  3121  007B14  C038  F057         	movff	?_triangular+1,fuzzy_system_single1@w1+1
  3122  007B18  C039  F058         	movff	?_triangular+2,fuzzy_system_single1@w1+2
  3123                           
  3124                           ;fuzzy.c: 302: w2=triangular(-1.6, 0, 1.6,input);
  3125  007B1C  0ECD               	movlw	205
  3126  007B1E  6E37               	movwf	triangular@a,c
  3127  007B20  0ECC               	movlw	204
  3128  007B22  6E38               	movwf	triangular@a+1,c
  3129  007B24  0EBF               	movlw	191
  3130  007B26  6E39               	movwf	triangular@a+2,c
  3131  007B28  0E00               	movlw	0
  3132  007B2A  6E3A               	movwf	triangular@b,c
  3133  007B2C  0E00               	movlw	0
  3134  007B2E  6E3B               	movwf	triangular@b+1,c
  3135  007B30  0E00               	movlw	0
  3136  007B32  6E3C               	movwf	triangular@b+2,c
  3137  007B34  0ECD               	movlw	205
  3138  007B36  6E3D               	movwf	triangular@c,c
  3139  007B38  0ECC               	movlw	204
  3140  007B3A  6E3E               	movwf	triangular@c+1,c
  3141  007B3C  0E3F               	movlw	63
  3142  007B3E  6E3F               	movwf	triangular@c+2,c
  3143  007B40  C053  F040         	movff	fuzzy_system_single1@input,triangular@x
  3144  007B44  C054  F041         	movff	fuzzy_system_single1@input+1,triangular@x+1
  3145  007B48  C055  F042         	movff	fuzzy_system_single1@input+2,triangular@x+2
  3146  007B4C  EC5E  F03A         	call	_triangular	;wreg free
  3147  007B50  C037  F059         	movff	?_triangular,fuzzy_system_single1@w2
  3148  007B54  C038  F05A         	movff	?_triangular+1,fuzzy_system_single1@w2+1
  3149  007B58  C039  F05B         	movff	?_triangular+2,fuzzy_system_single1@w2+2
  3150                           
  3151                           ;fuzzy.c: 303: w3=triangular(0.4, 2, 3.6,input);
  3152  007B5C  0ECD               	movlw	205
  3153  007B5E  6E37               	movwf	triangular@a,c
  3154  007B60  0ECC               	movlw	204
  3155  007B62  6E38               	movwf	triangular@a+1,c
  3156  007B64  0E3E               	movlw	62
  3157  007B66  6E39               	movwf	triangular@a+2,c
  3158  007B68  0E00               	movlw	0
  3159  007B6A  6E3A               	movwf	triangular@b,c
  3160  007B6C  0E00               	movlw	0
  3161  007B6E  6E3B               	movwf	triangular@b+1,c
  3162  007B70  0E40               	movlw	64
  3163  007B72  6E3C               	movwf	triangular@b+2,c
  3164  007B74  0E66               	movlw	102
  3165  007B76  6E3D               	movwf	triangular@c,c
  3166  007B78  0E66               	movlw	102
  3167  007B7A  6E3E               	movwf	triangular@c+1,c
  3168  007B7C  0E40               	movlw	64
  3169  007B7E  6E3F               	movwf	triangular@c+2,c
  3170  007B80  C053  F040         	movff	fuzzy_system_single1@input,triangular@x
  3171  007B84  C054  F041         	movff	fuzzy_system_single1@input+1,triangular@x+1
  3172  007B88  C055  F042         	movff	fuzzy_system_single1@input+2,triangular@x+2
  3173  007B8C  EC5E  F03A         	call	_triangular	;wreg free
  3174  007B90  C037  F05C         	movff	?_triangular,fuzzy_system_single1@w3
  3175  007B94  C038  F05D         	movff	?_triangular+1,fuzzy_system_single1@w3+1
  3176  007B98  C039  F05E         	movff	?_triangular+2,fuzzy_system_single1@w3+2
  3177                           
  3178                           ;fuzzy.c: 304: qualified(qualified_cons_mf1,cons_mf3,w1);
  3179  007B9C  0103               	movlb	3	; () banked
  3180  007B9E  0E03               	movlw	high fuzzy_system_single1@qualified_cons_mf1
  3181  007BA0  6E11               	movwf	qualified@y+1,c
  3182  007BA2  0103               	movlb	3	; () banked
  3183  007BA4  0E78               	movlw	low fuzzy_system_single1@qualified_cons_mf1
  3184  007BA6  6E10               	movwf	qualified@y,c
  3185  007BA8  0105               	movlb	5	; () banked
  3186  007BAA  0E05               	movlw	high fuzzy_system_single1@cons_mf3
  3187  007BAC  6E13               	movwf	qualified@x+1,c
  3188  007BAE  0105               	movlb	5	; () banked
  3189  007BB0  0E00               	movlw	low fuzzy_system_single1@cons_mf3
  3190  007BB2  6E12               	movwf	qualified@x,c
  3191  007BB4  C056  F014         	movff	fuzzy_system_single1@w1,qualified@w
  3192  007BB8  C057  F015         	movff	fuzzy_system_single1@w1+1,qualified@w+1
  3193  007BBC  C058  F016         	movff	fuzzy_system_single1@w1+2,qualified@w+2
  3194  007BC0  ECDB  F036         	call	_qualified	;wreg free
  3195                           
  3196                           ;fuzzy.c: 305: qualified(qualified_cons_mf2,cons_mf3,w2);
  3197  007BC4  0104               	movlb	4	; () banked
  3198  007BC6  0E04               	movlw	high fuzzy_system_single1@qualified_cons_mf2
  3199  007BC8  6E11               	movwf	qualified@y+1,c
  3200  007BCA  0104               	movlb	4	; () banked
  3201  007BCC  0E78               	movlw	low fuzzy_system_single1@qualified_cons_mf2
  3202  007BCE  6E10               	movwf	qualified@y,c
  3203  007BD0  0105               	movlb	5	; () banked
  3204  007BD2  0E05               	movlw	high fuzzy_system_single1@cons_mf3
  3205  007BD4  6E13               	movwf	qualified@x+1,c
  3206  007BD6  0105               	movlb	5	; () banked
  3207  007BD8  0E00               	movlw	low fuzzy_system_single1@cons_mf3
  3208  007BDA  6E12               	movwf	qualified@x,c
  3209  007BDC  C059  F014         	movff	fuzzy_system_single1@w2,qualified@w
  3210  007BE0  C05A  F015         	movff	fuzzy_system_single1@w2+1,qualified@w+1
  3211  007BE4  C05B  F016         	movff	fuzzy_system_single1@w2+2,qualified@w+2
  3212  007BE8  ECDB  F036         	call	_qualified	;wreg free
  3213                           
  3214                           ;fuzzy.c: 306: qualified(qualified_cons_mf3,cons_mf1,w3);
  3215  007BEC  0104               	movlb	4	; () banked
  3216  007BEE  0E04               	movlw	high fuzzy_system_single1@qualified_cons_mf3
  3217  007BF0  6E11               	movwf	qualified@y+1,c
  3218  007BF2  0104               	movlb	4	; () banked
  3219  007BF4  0E00               	movlw	low fuzzy_system_single1@qualified_cons_mf3
  3220  007BF6  6E10               	movwf	qualified@y,c
  3221  007BF8  0103               	movlb	3	; () banked
  3222  007BFA  0E03               	movlw	high fuzzy_system_single1@cons_mf1
  3223  007BFC  6E13               	movwf	qualified@x+1,c
  3224  007BFE  0103               	movlb	3	; () banked
  3225  007C00  0E00               	movlw	low fuzzy_system_single1@cons_mf1
  3226  007C02  6E12               	movwf	qualified@x,c
  3227  007C04  C05C  F014         	movff	fuzzy_system_single1@w3,qualified@w
  3228  007C08  C05D  F015         	movff	fuzzy_system_single1@w3+1,qualified@w+1
  3229  007C0C  C05E  F016         	movff	fuzzy_system_single1@w3+2,qualified@w+2
  3230  007C10  ECDB  F036         	call	_qualified	;wreg free
  3231                           
  3232                           ;fuzzy.c: 307: out_mf(overall_out_mf,qualified_cons_mf1,qualified_cons_mf2,qualified_con
      +                          s_mf3);
  3233  007C14  0105               	movlb	5	; () banked
  3234  007C16  0E05               	movlw	high fuzzy_system_single1@overall_out_mf
  3235  007C18  6E11               	movwf	out_mf@result+1,c
  3236  007C1A  0105               	movlb	5	; () banked
  3237  007C1C  0E78               	movlw	low fuzzy_system_single1@overall_out_mf
  3238  007C1E  6E10               	movwf	out_mf@result,c
  3239  007C20  0103               	movlb	3	; () banked
  3240  007C22  0E03               	movlw	high fuzzy_system_single1@qualified_cons_mf1
  3241  007C24  6E13               	movwf	out_mf@x+1,c
  3242  007C26  0103               	movlb	3	; () banked
  3243  007C28  0E78               	movlw	low fuzzy_system_single1@qualified_cons_mf1
  3244  007C2A  6E12               	movwf	out_mf@x,c
  3245  007C2C  0104               	movlb	4	; () banked
  3246  007C2E  0E04               	movlw	high fuzzy_system_single1@qualified_cons_mf2
  3247  007C30  6E15               	movwf	out_mf@y+1,c
  3248  007C32  0104               	movlb	4	; () banked
  3249  007C34  0E78               	movlw	low fuzzy_system_single1@qualified_cons_mf2
  3250  007C36  6E14               	movwf	out_mf@y,c
  3251  007C38  0104               	movlb	4	; () banked
  3252  007C3A  0E04               	movlw	high fuzzy_system_single1@qualified_cons_mf3
  3253  007C3C  6E17               	movwf	out_mf@z+1,c
  3254  007C3E  0104               	movlb	4	; () banked
  3255  007C40  0E00               	movlw	low fuzzy_system_single1@qualified_cons_mf3
  3256  007C42  6E16               	movwf	out_mf@z,c
  3257  007C44  EC51  F03B         	call	_out_mf	;wreg free
  3258                           
  3259                           ;fuzzy.c: 308: output= defuzzy(y,overall_out_mf);
  3260  007C48  0106               	movlb	6	; () banked
  3261  007C4A  0E06               	movlw	high fuzzy_system_single1@y
  3262  007C4C  6E38               	movwf	defuzzy@x+1,c
  3263  007C4E  0106               	movlb	6	; () banked
  3264  007C50  0E78               	movlw	low fuzzy_system_single1@y
  3265  007C52  6E37               	movwf	defuzzy@x,c
  3266  007C54  0105               	movlb	5	; () banked
  3267  007C56  0E05               	movlw	high fuzzy_system_single1@overall_out_mf
  3268  007C58  6E3A               	movwf	defuzzy@mf+1,c
  3269  007C5A  0105               	movlb	5	; () banked
  3270  007C5C  0E78               	movlw	low fuzzy_system_single1@overall_out_mf
  3271  007C5E  6E39               	movwf	defuzzy@mf,c
  3272  007C60  ECD7  F038         	call	_defuzzy	;wreg free
  3273  007C64  C037  F0DA         	movff	?_defuzzy,fuzzy_system_single1@output
  3274  007C68  C038  F0DB         	movff	?_defuzzy+1,fuzzy_system_single1@output+1
  3275  007C6C  C039  F0DC         	movff	?_defuzzy+2,fuzzy_system_single1@output+2
  3276                           
  3277                           ;fuzzy.c: 309: return output;
  3278  007C70  C0DA  F053         	movff	fuzzy_system_single1@output,?_fuzzy_system_single1
  3279  007C74  C0DB  F054         	movff	fuzzy_system_single1@output+1,?_fuzzy_system_single1+1
  3280  007C78  C0DC  F055         	movff	fuzzy_system_single1@output+2,?_fuzzy_system_single1+2
  3281  007C7C  0012               	return	
  3282  007C7E                     __end_of_fuzzy_system_single1:
  3283                           	opt stack 0
  3284                           tblptru	equ	0xFF8
  3285                           tblptrh	equ	0xFF7
  3286                           tblptrl	equ	0xFF6
  3287                           tablat	equ	0xFF5
  3288                           wreg	equ	0xFE8
  3289                           status	equ	0xFD8
  3290                           
  3291 ;; *************** function _tri_mf *****************
  3292 ;; Defined at:
  3293 ;;		line 64 in file "fuzzy.c"
  3294 ;; Parameters:    Size  Location     Type
  3295 ;;  t_value         2   69[COMRAM] PTR 
  3296 ;;		 -> fuzzy_system_single1@cons_mf3(120), fuzzy_system_single1@cons_mf2(120), fuzzy_system_single1@cons_mf1(120), fuzz
      +y_system_single1@ante_mf3(120), 
  3297 ;;		 -> fuzzy_system_single1@ante_mf2(120), fuzzy_system_single1@ante_mf1(120), fuzzy_system_single2@cons_mf3(120), fuzz
      +y_system_single2@cons_mf2(120), 
  3298 ;;		 -> fuzzy_system_single2@cons_mf1(120), fuzzy_system_single2@ante_mf3(120), fuzzy_system_single2@ante_mf2(120), fuzz
      +y_system_single2@ante_mf1(120), 
  3299 ;;  x               2   71[COMRAM] PTR 
  3300 ;;		 -> fuzzy_system_single1@y(120), fuzzy_system_single1@x(120), fuzzy_system_single2@y(120), fuzzy_system_single2@x(12
      +0), 
  3301 ;;  a               3   73[COMRAM] PTR 
  3302 ;;  b               3   76[COMRAM] PTR 
  3303 ;;  c               3   79[COMRAM] PTR 
  3304 ;; Auto vars:     Size  Location     Type
  3305 ;;  temp          120    0[BANK0 ] [40]
  3306 ;;  i               2  120[BANK0 ] int 
  3307 ;; Return value:  Size  Location     Type
  3308 ;;		None               void
  3309 ;; Registers used:
  3310 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3311 ;; Tracked objects:
  3312 ;;		On entry : 0/0
  3313 ;;		On exit  : 0/0
  3314 ;;		Unchanged: 0/0
  3315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3316 ;;      Params:        13       0       0       0       0       0       0       0       0
  3317 ;;      Locals:         0     122       0       0       0       0       0       0       0
  3318 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3319 ;;      Totals:        13     122       0       0       0       0       0       0       0
  3320 ;;Total ram usage:      135 bytes
  3321 ;; Hardware stack levels used:    1
  3322 ;; Hardware stack levels required when called:    3
  3323 ;; This function calls:
  3324 ;;		___wmul
  3325 ;;		_triangular
  3326 ;; This function is called by:
  3327 ;;		_fuzzy_system_single2
  3328 ;;		_fuzzy_system_single1
  3329 ;; This function uses a non-reentrant model
  3330 ;;
  3331                           
  3332                           	psect	text18
  3333  00708C                     __ptext18:
  3334                           	opt stack 0
  3335  00708C                     _tri_mf:
  3336                           	opt stack 26
  3337                           
  3338                           ;fuzzy.c: 66: int i;
  3339                           ;fuzzy.c: 67: double temp[40];
  3340                           ;fuzzy.c: 68: for(i=0; i<40; i++)
  3341                           
  3342                           ;incstack = 0
  3343  00708C  0E00               	movlw	0
  3344  00708E  0100               	movlb	0	; () banked
  3345  007090  6FD9               	movwf	(tri_mf@i+1)& (0+255),b
  3346  007092  0E00               	movlw	0
  3347  007094  0100               	movlb	0	; () banked
  3348  007096  6FD8               	movwf	tri_mf@i& (0+255),b
  3349  007098                     
  3350                           ; BSR set to: 0
  3351  007098  0100               	movlb	0	; () banked
  3352  00709A  51D9               	movf	(tri_mf@i+1)& (0+255),w,b
  3353  00709C  0A80               	xorlw	128
  3354  00709E  0F80               	addlw	-128
  3355  0070A0  0E28               	movlw	40
  3356  0070A2  B4D8               	btfsc	status,2,c
  3357  0070A4  5DD8               	subwf	tri_mf@i& (0+255),w,b
  3358  0070A6  B0D8               	btfsc	status,0,c
  3359  0070A8  D02D               	goto	l2267
  3360                           
  3361                           ; BSR set to: 0
  3362                           ;fuzzy.c: 69: temp[i]= x[i];
  3363                           
  3364                           ; BSR set to: 0
  3365                           
  3366                           ; BSR set to: 0
  3367  0070AA  C0D8  F001         	movff	tri_mf@i,___wmul@multiplier
  3368  0070AE  C0D9  F002         	movff	tri_mf@i+1,___wmul@multiplier+1
  3369  0070B2  0E00               	movlw	0
  3370  0070B4  6E04               	movwf	___wmul@multiplicand+1,c
  3371  0070B6  0E03               	movlw	3
  3372  0070B8  6E03               	movwf	___wmul@multiplicand,c
  3373  0070BA  EC2D  F033         	call	___wmul	;wreg free
  3374  0070BE  5001               	movf	?___wmul,w,c
  3375  0070C0  2448               	addwf	tri_mf@x,w,c
  3376  0070C2  6ED9               	movwf	fsr2l,c
  3377  0070C4  5002               	movf	?___wmul+1,w,c
  3378  0070C6  2049               	addwfc	tri_mf@x+1,w,c
  3379  0070C8  6EDA               	movwf	fsr2h,c
  3380  0070CA  C0D8  F001         	movff	tri_mf@i,___wmul@multiplier
  3381  0070CE  C0D9  F002         	movff	tri_mf@i+1,___wmul@multiplier+1
  3382  0070D2  0E00               	movlw	0
  3383  0070D4  6E04               	movwf	___wmul@multiplicand+1,c
  3384  0070D6  0E03               	movlw	3
  3385  0070D8  6E03               	movwf	___wmul@multiplicand,c
  3386  0070DA  EC2D  F033         	call	___wmul	;wreg free
  3387  0070DE  0100               	movlb	0	; () banked
  3388  0070E0  0E60               	movlw	low tri_mf@temp
  3389  0070E2  2401               	addwf	?___wmul,w,c
  3390  0070E4  6EE1               	movwf	fsr1l,c
  3391  0070E6  0100               	movlb	0	; () banked
  3392  0070E8  0E00               	movlw	high tri_mf@temp
  3393  0070EA  2002               	addwfc	?___wmul+1,w,c
  3394  0070EC  6EE2               	movwf	fsr1h,c
  3395  0070EE  CFDE FFE6          	movff	postinc2,postinc1
  3396  0070F2  CFDE FFE6          	movff	postinc2,postinc1
  3397  0070F6  CFDE FFE5          	movff	postinc2,postdec1
  3398  0070FA  52E5               	movf	postdec1,f,c
  3399                           
  3400                           ; BSR set to: 0
  3401  0070FC  0100               	movlb	0	; () banked
  3402  0070FE  4BD8               	infsnz	tri_mf@i& (0+255),f,b
  3403  007100  2BD9               	incf	(tri_mf@i+1)& (0+255),f,b
  3404  007102  D7CA               	goto	L6
  3405  007104                     l2267:
  3406                           
  3407                           ; BSR set to: 0
  3408                           ;fuzzy.c: 70: for(i=0; i<40; i++)
  3409  007104  0E00               	movlw	0
  3410  007106  0100               	movlb	0	; () banked
  3411  007108  6FD9               	movwf	(tri_mf@i+1)& (0+255),b
  3412  00710A  0E00               	movlw	0
  3413  00710C  0100               	movlb	0	; () banked
  3414  00710E  6FD8               	movwf	tri_mf@i& (0+255),b
  3415  007110                     
  3416                           ; BSR set to: 0
  3417  007110  0100               	movlb	0	; () banked
  3418  007112  51D9               	movf	(tri_mf@i+1)& (0+255),w,b
  3419  007114  0A80               	xorlw	128
  3420  007116  0F80               	addlw	-128
  3421  007118  0E28               	movlw	40
  3422  00711A  B4D8               	btfsc	status,2,c
  3423  00711C  5DD8               	subwf	tri_mf@i& (0+255),w,b
  3424  00711E  B0D8               	btfsc	status,0,c
  3425  007120  D045               	goto	l97
  3426                           
  3427                           ; BSR set to: 0
  3428                           ;fuzzy.c: 71: t_value[i]= triangular(a,b,c,x[i]);
  3429                           
  3430                           ; BSR set to: 0
  3431                           
  3432                           ; BSR set to: 0
  3433  007122  C0D8  F001         	movff	tri_mf@i,___wmul@multiplier
  3434  007126  C0D9  F002         	movff	tri_mf@i+1,___wmul@multiplier+1
  3435  00712A  0E00               	movlw	0
  3436  00712C  6E04               	movwf	___wmul@multiplicand+1,c
  3437  00712E  0E03               	movlw	3
  3438  007130  6E03               	movwf	___wmul@multiplicand,c
  3439  007132  EC2D  F033         	call	___wmul	;wreg free
  3440  007136  5001               	movf	?___wmul,w,c
  3441  007138  2446               	addwf	tri_mf@t_value,w,c
  3442  00713A  6ED9               	movwf	fsr2l,c
  3443  00713C  5002               	movf	?___wmul+1,w,c
  3444  00713E  2047               	addwfc	tri_mf@t_value+1,w,c
  3445  007140  6EDA               	movwf	fsr2h,c
  3446  007142  C04A  F037         	movff	tri_mf@a,triangular@a
  3447  007146  C04B  F038         	movff	tri_mf@a+1,triangular@a+1
  3448  00714A  C04C  F039         	movff	tri_mf@a+2,triangular@a+2
  3449  00714E  C04D  F03A         	movff	tri_mf@b,triangular@b
  3450  007152  C04E  F03B         	movff	tri_mf@b+1,triangular@b+1
  3451  007156  C04F  F03C         	movff	tri_mf@b+2,triangular@b+2
  3452  00715A  C050  F03D         	movff	tri_mf@c,triangular@c
  3453  00715E  C051  F03E         	movff	tri_mf@c+1,triangular@c+1
  3454  007162  C052  F03F         	movff	tri_mf@c+2,triangular@c+2
  3455  007166  C0D8  F001         	movff	tri_mf@i,___wmul@multiplier
  3456  00716A  C0D9  F002         	movff	tri_mf@i+1,___wmul@multiplier+1
  3457  00716E  0E00               	movlw	0
  3458  007170  6E04               	movwf	___wmul@multiplicand+1,c
  3459  007172  0E03               	movlw	3
  3460  007174  6E03               	movwf	___wmul@multiplicand,c
  3461  007176  EC2D  F033         	call	___wmul	;wreg free
  3462  00717A  5001               	movf	?___wmul,w,c
  3463  00717C  2448               	addwf	tri_mf@x,w,c
  3464  00717E  6EE1               	movwf	fsr1l,c
  3465  007180  5002               	movf	?___wmul+1,w,c
  3466  007182  2049               	addwfc	tri_mf@x+1,w,c
  3467  007184  6EE2               	movwf	fsr1h,c
  3468  007186  CFE6 F040          	movff	postinc1,triangular@x
  3469  00718A  CFE6 F041          	movff	postinc1,triangular@x+1
  3470  00718E  CFE5 F042          	movff	postdec1,triangular@x+2
  3471  007192  EC5E  F03A         	call	_triangular	;wreg free
  3472  007196  C037  FFDE         	movff	?_triangular,postinc2
  3473  00719A  C038  FFDE         	movff	?_triangular+1,postinc2
  3474  00719E  C039  FFDD         	movff	?_triangular+2,postdec2
  3475  0071A2  52DD               	movf	postdec2,f,c
  3476  0071A4  0100               	movlb	0	; () banked
  3477  0071A6  4BD8               	infsnz	tri_mf@i& (0+255),f,b
  3478  0071A8  2BD9               	incf	(tri_mf@i+1)& (0+255),f,b
  3479  0071AA  D7B2               	goto	L7
  3480  0071AC                     l97:
  3481                           
  3482                           ; BSR set to: 0
  3483  0071AC  0012               	return	
  3484  0071AE                     __end_of_tri_mf:
  3485                           	opt stack 0
  3486                           tblptru	equ	0xFF8
  3487                           tblptrh	equ	0xFF7
  3488                           tblptrl	equ	0xFF6
  3489                           tablat	equ	0xFF5
  3490                           wreg	equ	0xFE8
  3491                           postinc1	equ	0xFE6
  3492                           postdec1	equ	0xFE5
  3493                           fsr1h	equ	0xFE2
  3494                           fsr1l	equ	0xFE1
  3495                           postinc2	equ	0xFDE
  3496                           postdec2	equ	0xFDD
  3497                           fsr2h	equ	0xFDA
  3498                           fsr2l	equ	0xFD9
  3499                           status	equ	0xFD8
  3500                           
  3501 ;; *************** function _triangular *****************
  3502 ;; Defined at:
  3503 ;;		line 46 in file "fuzzy.c"
  3504 ;; Parameters:    Size  Location     Type
  3505 ;;  a               3   54[COMRAM] int 
  3506 ;;  b               3   57[COMRAM] int 
  3507 ;;  c               3   60[COMRAM] int 
  3508 ;;  x               3   63[COMRAM] int 
  3509 ;; Auto vars:     Size  Location     Type
  3510 ;;  ux              3   66[COMRAM] int 
  3511 ;; Return value:  Size  Location     Type
  3512 ;;                  3   54[COMRAM] int 
  3513 ;; Registers used:
  3514 ;;		wreg, status,2, status,0, cstack
  3515 ;; Tracked objects:
  3516 ;;		On entry : 0/0
  3517 ;;		On exit  : 0/0
  3518 ;;		Unchanged: 0/0
  3519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3520 ;;      Params:        12       0       0       0       0       0       0       0       0
  3521 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3522 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3523 ;;      Totals:        15       0       0       0       0       0       0       0       0
  3524 ;;Total ram usage:       15 bytes
  3525 ;; Hardware stack levels used:    1
  3526 ;; Hardware stack levels required when called:    2
  3527 ;; This function calls:
  3528 ;;		___ftadd
  3529 ;;		___ftdiv
  3530 ;;		___ftge
  3531 ;;		___ftneg
  3532 ;; This function is called by:
  3533 ;;		_tri_mf
  3534 ;;		_fuzzy_system_single2
  3535 ;;		_fuzzy_system_single1
  3536 ;; This function uses a non-reentrant model
  3537 ;;
  3538                           
  3539                           	psect	text19
  3540  0074BC                     __ptext19:
  3541                           	opt stack 0
  3542  0074BC                     _triangular:
  3543                           	opt stack 27
  3544                           
  3545                           ;fuzzy.c: 48: double ux=0;
  3546                           
  3547                           ; BSR set to: 0
  3548                           ;incstack = 0
  3549  0074BC  0E00               	movlw	0
  3550  0074BE  6E43               	movwf	triangular@ux,c
  3551  0074C0  0E00               	movlw	0
  3552  0074C2  6E44               	movwf	triangular@ux+1,c
  3553  0074C4  0E00               	movlw	0
  3554  0074C6  6E45               	movwf	triangular@ux+2,c
  3555                           
  3556                           ;fuzzy.c: 49: if(x<=a){
  3557  0074C8  C037  F007         	movff	triangular@a,___ftge@ff1
  3558  0074CC  C038  F008         	movff	triangular@a+1,___ftge@ff1+1
  3559  0074D0  C039  F009         	movff	triangular@a+2,___ftge@ff1+2
  3560  0074D4  C040  F00A         	movff	triangular@x,___ftge@ff2
  3561  0074D8  C041  F00B         	movff	triangular@x+1,___ftge@ff2+1
  3562  0074DC  C042  F00C         	movff	triangular@x+2,___ftge@ff2+2
  3563  0074E0  EC4D  F034         	call	___ftge	;wreg free
  3564  0074E4  A0D8               	btfss	status,0,c
  3565  0074E6  D006               	goto	l2035
  3566                           
  3567                           ;fuzzy.c: 50: ux=0;
  3568  0074E8  0E00               	movlw	0
  3569  0074EA  6E43               	movwf	triangular@ux,c
  3570  0074EC  0E00               	movlw	0
  3571  0074EE  6E44               	movwf	triangular@ux+1,c
  3572  0074F0  0E00               	movlw	0
  3573  0074F2  6E45               	movwf	triangular@ux+2,c
  3574  0074F4                     l2035:
  3575                           
  3576                           ;fuzzy.c: 51: }
  3577                           ;fuzzy.c: 52: if(x>a && x<b){
  3578  0074F4  C037  F007         	movff	triangular@a,___ftge@ff1
  3579  0074F8  C038  F008         	movff	triangular@a+1,___ftge@ff1+1
  3580  0074FC  C039  F009         	movff	triangular@a+2,___ftge@ff1+2
  3581  007500  C040  F00A         	movff	triangular@x,___ftge@ff2
  3582  007504  C041  F00B         	movff	triangular@x+1,___ftge@ff2+1
  3583  007508  C042  F00C         	movff	triangular@x+2,___ftge@ff2+2
  3584  00750C  EC4D  F034         	call	___ftge	;wreg free
  3585  007510  B0D8               	btfsc	status,0,c
  3586  007512  D050               	goto	l2041
  3587  007514  C040  F007         	movff	triangular@x,___ftge@ff1
  3588  007518  C041  F008         	movff	triangular@x+1,___ftge@ff1+1
  3589  00751C  C042  F009         	movff	triangular@x+2,___ftge@ff1+2
  3590  007520  C03A  F00A         	movff	triangular@b,___ftge@ff2
  3591  007524  C03B  F00B         	movff	triangular@b+1,___ftge@ff2+1
  3592  007528  C03C  F00C         	movff	triangular@b+2,___ftge@ff2+2
  3593  00752C  EC4D  F034         	call	___ftge	;wreg free
  3594  007530  B0D8               	btfsc	status,0,c
  3595  007532  D040               	goto	l2041
  3596                           
  3597                           ;fuzzy.c: 53: ux=(x-a)/(b-a);
  3598  007534  C040  F01F         	movff	triangular@x,___ftadd@f2
  3599  007538  C041  F020         	movff	triangular@x+1,___ftadd@f2+1
  3600  00753C  C042  F021         	movff	triangular@x+2,___ftadd@f2+2
  3601  007540  C037  F001         	movff	triangular@a,___ftneg@f1
  3602  007544  C038  F002         	movff	triangular@a+1,___ftneg@f1+1
  3603  007548  C039  F003         	movff	triangular@a+2,___ftneg@f1+2
  3604  00754C  EC40  F033         	call	___ftneg	;wreg free
  3605  007550  C001  F01C         	movff	?___ftneg,___ftadd@f1
  3606  007554  C002  F01D         	movff	?___ftneg+1,___ftadd@f1+1
  3607  007558  C003  F01E         	movff	?___ftneg+2,___ftadd@f1+2
  3608  00755C  EC88  F039         	call	___ftadd	;wreg free
  3609  007560  C01C  F028         	movff	?___ftadd,___ftdiv@f1
  3610  007564  C01D  F029         	movff	?___ftadd+1,___ftdiv@f1+1
  3611  007568  C01E  F02A         	movff	?___ftadd+2,___ftdiv@f1+2
  3612  00756C  C03A  F01F         	movff	triangular@b,___ftadd@f2
  3613  007570  C03B  F020         	movff	triangular@b+1,___ftadd@f2+1
  3614  007574  C03C  F021         	movff	triangular@b+2,___ftadd@f2+2
  3615  007578  C037  F001         	movff	triangular@a,___ftneg@f1
  3616  00757C  C038  F002         	movff	triangular@a+1,___ftneg@f1+1
  3617  007580  C039  F003         	movff	triangular@a+2,___ftneg@f1+2
  3618  007584  EC40  F033         	call	___ftneg	;wreg free
  3619  007588  C001  F01C         	movff	?___ftneg,___ftadd@f1
  3620  00758C  C002  F01D         	movff	?___ftneg+1,___ftadd@f1+1
  3621  007590  C003  F01E         	movff	?___ftneg+2,___ftadd@f1+2
  3622  007594  EC88  F039         	call	___ftadd	;wreg free
  3623  007598  C01C  F02B         	movff	?___ftadd,___ftdiv@f2
  3624  00759C  C01D  F02C         	movff	?___ftadd+1,___ftdiv@f2+1
  3625  0075A0  C01E  F02D         	movff	?___ftadd+2,___ftdiv@f2+2
  3626  0075A4  ECFE  F035         	call	___ftdiv	;wreg free
  3627  0075A8  C028  F043         	movff	?___ftdiv,triangular@ux
  3628  0075AC  C029  F044         	movff	?___ftdiv+1,triangular@ux+1
  3629  0075B0  C02A  F045         	movff	?___ftdiv+2,triangular@ux+2
  3630  0075B4                     l2041:
  3631                           
  3632                           ;fuzzy.c: 54: }
  3633                           ;fuzzy.c: 55: if(x==b){
  3634  0075B4  503C               	movf	triangular@b+2,w,c
  3635  0075B6  1842               	xorwf	triangular@x+2,w,c
  3636  0075B8  E105               	bnz	u1915
  3637  0075BA  503B               	movf	triangular@b+1,w,c
  3638  0075BC  1841               	xorwf	triangular@x+1,w,c
  3639  0075BE  E102               	bnz	u1915
  3640  0075C0  503A               	movf	triangular@b,w,c
  3641  0075C2  1840               	xorwf	triangular@x,w,c
  3642  0075C4                     u1915:
  3643  0075C4  A4D8               	btfss	status,2,c
  3644  0075C6  D006               	goto	l2045
  3645                           
  3646                           ;fuzzy.c: 56: ux=1;
  3647  0075C8  0E00               	movlw	0
  3648  0075CA  6E43               	movwf	triangular@ux,c
  3649  0075CC  0E80               	movlw	128
  3650  0075CE  6E44               	movwf	triangular@ux+1,c
  3651  0075D0  0E3F               	movlw	63
  3652  0075D2  6E45               	movwf	triangular@ux+2,c
  3653  0075D4                     l2045:
  3654                           
  3655                           ;fuzzy.c: 57: }
  3656                           ;fuzzy.c: 58: if(x>b && x<c){
  3657  0075D4  C03A  F007         	movff	triangular@b,___ftge@ff1
  3658  0075D8  C03B  F008         	movff	triangular@b+1,___ftge@ff1+1
  3659  0075DC  C03C  F009         	movff	triangular@b+2,___ftge@ff1+2
  3660  0075E0  C040  F00A         	movff	triangular@x,___ftge@ff2
  3661  0075E4  C041  F00B         	movff	triangular@x+1,___ftge@ff2+1
  3662  0075E8  C042  F00C         	movff	triangular@x+2,___ftge@ff2+2
  3663  0075EC  EC4D  F034         	call	___ftge	;wreg free
  3664  0075F0  B0D8               	btfsc	status,0,c
  3665  0075F2  D050               	goto	l2051
  3666  0075F4  C040  F007         	movff	triangular@x,___ftge@ff1
  3667  0075F8  C041  F008         	movff	triangular@x+1,___ftge@ff1+1
  3668  0075FC  C042  F009         	movff	triangular@x+2,___ftge@ff1+2
  3669  007600  C03D  F00A         	movff	triangular@c,___ftge@ff2
  3670  007604  C03E  F00B         	movff	triangular@c+1,___ftge@ff2+1
  3671  007608  C03F  F00C         	movff	triangular@c+2,___ftge@ff2+2
  3672  00760C  EC4D  F034         	call	___ftge	;wreg free
  3673  007610  B0D8               	btfsc	status,0,c
  3674  007612  D040               	goto	l2051
  3675                           
  3676                           ;fuzzy.c: 59: ux = (c-x)/(c-b);
  3677  007614  C03D  F01F         	movff	triangular@c,___ftadd@f2
  3678  007618  C03E  F020         	movff	triangular@c+1,___ftadd@f2+1
  3679  00761C  C03F  F021         	movff	triangular@c+2,___ftadd@f2+2
  3680  007620  C040  F001         	movff	triangular@x,___ftneg@f1
  3681  007624  C041  F002         	movff	triangular@x+1,___ftneg@f1+1
  3682  007628  C042  F003         	movff	triangular@x+2,___ftneg@f1+2
  3683  00762C  EC40  F033         	call	___ftneg	;wreg free
  3684  007630  C001  F01C         	movff	?___ftneg,___ftadd@f1
  3685  007634  C002  F01D         	movff	?___ftneg+1,___ftadd@f1+1
  3686  007638  C003  F01E         	movff	?___ftneg+2,___ftadd@f1+2
  3687  00763C  EC88  F039         	call	___ftadd	;wreg free
  3688  007640  C01C  F028         	movff	?___ftadd,___ftdiv@f1
  3689  007644  C01D  F029         	movff	?___ftadd+1,___ftdiv@f1+1
  3690  007648  C01E  F02A         	movff	?___ftadd+2,___ftdiv@f1+2
  3691  00764C  C03D  F01F         	movff	triangular@c,___ftadd@f2
  3692  007650  C03E  F020         	movff	triangular@c+1,___ftadd@f2+1
  3693  007654  C03F  F021         	movff	triangular@c+2,___ftadd@f2+2
  3694  007658  C03A  F001         	movff	triangular@b,___ftneg@f1
  3695  00765C  C03B  F002         	movff	triangular@b+1,___ftneg@f1+1
  3696  007660  C03C  F003         	movff	triangular@b+2,___ftneg@f1+2
  3697  007664  EC40  F033         	call	___ftneg	;wreg free
  3698  007668  C001  F01C         	movff	?___ftneg,___ftadd@f1
  3699  00766C  C002  F01D         	movff	?___ftneg+1,___ftadd@f1+1
  3700  007670  C003  F01E         	movff	?___ftneg+2,___ftadd@f1+2
  3701  007674  EC88  F039         	call	___ftadd	;wreg free
  3702  007678  C01C  F02B         	movff	?___ftadd,___ftdiv@f2
  3703  00767C  C01D  F02C         	movff	?___ftadd+1,___ftdiv@f2+1
  3704  007680  C01E  F02D         	movff	?___ftadd+2,___ftdiv@f2+2
  3705  007684  ECFE  F035         	call	___ftdiv	;wreg free
  3706  007688  C028  F043         	movff	?___ftdiv,triangular@ux
  3707  00768C  C029  F044         	movff	?___ftdiv+1,triangular@ux+1
  3708  007690  C02A  F045         	movff	?___ftdiv+2,triangular@ux+2
  3709  007694                     l2051:
  3710                           
  3711                           ;fuzzy.c: 60: }
  3712                           ;fuzzy.c: 61: return ux;
  3713  007694  C043  F037         	movff	triangular@ux,?_triangular
  3714  007698  C044  F038         	movff	triangular@ux+1,?_triangular+1
  3715  00769C  C045  F039         	movff	triangular@ux+2,?_triangular+2
  3716  0076A0  0012               	return	
  3717  0076A2                     __end_of_triangular:
  3718                           	opt stack 0
  3719                           tblptru	equ	0xFF8
  3720                           tblptrh	equ	0xFF7
  3721                           tblptrl	equ	0xFF6
  3722                           tablat	equ	0xFF5
  3723                           wreg	equ	0xFE8
  3724                           postinc1	equ	0xFE6
  3725                           postdec1	equ	0xFE5
  3726                           fsr1h	equ	0xFE2
  3727                           fsr1l	equ	0xFE1
  3728                           postinc2	equ	0xFDE
  3729                           postdec2	equ	0xFDD
  3730                           fsr2h	equ	0xFDA
  3731                           fsr2l	equ	0xFD9
  3732                           status	equ	0xFD8
  3733                           
  3734 ;; *************** function ___ftneg *****************
  3735 ;; Defined at:
  3736 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\ftneg.c"
  3737 ;; Parameters:    Size  Location     Type
  3738 ;;  f1              3    0[COMRAM] float 
  3739 ;; Auto vars:     Size  Location     Type
  3740 ;;		None
  3741 ;; Return value:  Size  Location     Type
  3742 ;;                  3    0[COMRAM] float 
  3743 ;; Registers used:
  3744 ;;		wreg, status,2, status,0
  3745 ;; Tracked objects:
  3746 ;;		On entry : 0/0
  3747 ;;		On exit  : 0/0
  3748 ;;		Unchanged: 0/0
  3749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3750 ;;      Params:         3       0       0       0       0       0       0       0       0
  3751 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3752 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3753 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3754 ;;Total ram usage:        3 bytes
  3755 ;; Hardware stack levels used:    1
  3756 ;; This function calls:
  3757 ;;		Nothing
  3758 ;; This function is called by:
  3759 ;;		_triangular
  3760 ;;		_trapezoidal
  3761 ;; This function uses a non-reentrant model
  3762 ;;
  3763                           
  3764                           	psect	text20
  3765  006680                     __ptext20:
  3766                           	opt stack 0
  3767  006680                     ___ftneg:
  3768                           	opt stack 28
  3769                           
  3770                           ;incstack = 0
  3771  006680  0E7F               	movlw	127
  3772  006682  1403               	andwf	___ftneg@f1+2,w,c
  3773  006684  1002               	iorwf	___ftneg@f1+1,w,c
  3774  006686  1001               	iorwf	___ftneg@f1,w,c
  3775  006688  B4D8               	btfsc	status,2,c
  3776  00668A  D006               	goto	l706
  3777  00668C  0E00               	movlw	0
  3778  00668E  1A01               	xorwf	___ftneg@f1,f,c
  3779  006690  0E00               	movlw	0
  3780  006692  1A02               	xorwf	___ftneg@f1+1,f,c
  3781  006694  0E80               	movlw	128
  3782  006696  1A03               	xorwf	___ftneg@f1+2,f,c
  3783  006698                     l706:
  3784  006698  C001  F001         	movff	___ftneg@f1,?___ftneg
  3785  00669C  C002  F002         	movff	___ftneg@f1+1,?___ftneg+1
  3786  0066A0  C003  F003         	movff	___ftneg@f1+2,?___ftneg+2
  3787  0066A4  0012               	return	
  3788  0066A6                     __end_of___ftneg:
  3789                           	opt stack 0
  3790                           tblptru	equ	0xFF8
  3791                           tblptrh	equ	0xFF7
  3792                           tblptrl	equ	0xFF6
  3793                           tablat	equ	0xFF5
  3794                           wreg	equ	0xFE8
  3795                           postinc1	equ	0xFE6
  3796                           postdec1	equ	0xFE5
  3797                           fsr1h	equ	0xFE2
  3798                           fsr1l	equ	0xFE1
  3799                           postinc2	equ	0xFDE
  3800                           postdec2	equ	0xFDD
  3801                           fsr2h	equ	0xFDA
  3802                           fsr2l	equ	0xFD9
  3803                           status	equ	0xFD8
  3804                           
  3805 ;; *************** function _qualified *****************
  3806 ;; Defined at:
  3807 ;;		line 108 in file "fuzzy.c"
  3808 ;; Parameters:    Size  Location     Type
  3809 ;;  y               2   15[COMRAM] PTR 
  3810 ;;		 -> fuzzy_system_single1@qualified_cons_mf3(120), fuzzy_system_single1@qualified_cons_mf2(120), fuzzy_system_single1
      +@qualified_cons_mf1(120), fuzzy_system_single2@qualified_cons_mf3(120), 
  3811 ;;		 -> fuzzy_system_single2@qualified_cons_mf2(120), fuzzy_system_single2@qualified_cons_mf1(120), fuzzy_system_single@
      +qualified_cons_mf3(120), fuzzy_system_single@qualified_cons_mf2(120), 
  3812 ;;		 -> fuzzy_system_single@qualified_cons_mf1(120), fuzzy_system@qualified_cons_mf3(120), fuzzy_system@qualified_cons_m
      +f2(120), fuzzy_system@qualified_cons_mf1(120), 
  3813 ;;  x               2   17[COMRAM] PTR 
  3814 ;;		 -> fuzzy_system_single1@cons_mf3(120), fuzzy_system_single1@cons_mf1(120), fuzzy_system_single2@cons_mf3(120), fuzz
      +y_system_single2@cons_mf1(120), 
  3815 ;;		 -> fuzzy_system_single@cons_mf3(120), fuzzy_system_single@cons_mf2(120), fuzzy_system_single@cons_mf1(120), fuzzy_s
      +ystem@cons_mf3(120), 
  3816 ;;		 -> fuzzy_system@cons_mf2(120), fuzzy_system@cons_mf1(120), 
  3817 ;;  w               3   19[COMRAM] PTR 
  3818 ;; Auto vars:     Size  Location     Type
  3819 ;;  min             3   22[COMRAM] PTR 
  3820 ;;  i               2   25[COMRAM] int 
  3821 ;; Return value:  Size  Location     Type
  3822 ;;		None               void
  3823 ;; Registers used:
  3824 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3825 ;; Tracked objects:
  3826 ;;		On entry : 0/0
  3827 ;;		On exit  : 0/0
  3828 ;;		Unchanged: 0/0
  3829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3830 ;;      Params:         7       0       0       0       0       0       0       0       0
  3831 ;;      Locals:         5       0       0       0       0       0       0       0       0
  3832 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3833 ;;      Totals:        12       0       0       0       0       0       0       0       0
  3834 ;;Total ram usage:       12 bytes
  3835 ;; Hardware stack levels used:    1
  3836 ;; Hardware stack levels required when called:    1
  3837 ;; This function calls:
  3838 ;;		___ftge
  3839 ;;		___wmul
  3840 ;; This function is called by:
  3841 ;;		_fuzzy_system_single2
  3842 ;;		_fuzzy_system_single1
  3843 ;;		_fuzzy_system
  3844 ;;		_fuzzy_system_single
  3845 ;; This function uses a non-reentrant model
  3846 ;;
  3847                           
  3848                           	psect	text21
  3849  006DB6                     __ptext21:
  3850                           	opt stack 0
  3851  006DB6                     _qualified:
  3852                           	opt stack 28
  3853                           
  3854                           ;fuzzy.c: 110: double min;
  3855                           ;fuzzy.c: 111: int i;
  3856                           ;fuzzy.c: 112: min=w;
  3857                           
  3858                           ;incstack = 0
  3859  006DB6  C014  F017         	movff	qualified@w,qualified@min
  3860  006DBA  C015  F018         	movff	qualified@w+1,qualified@min+1
  3861  006DBE  C016  F019         	movff	qualified@w+2,qualified@min+2
  3862                           
  3863                           ;fuzzy.c: 113: for(i=0;i<40;i++){
  3864  006DC2  0E00               	movlw	0
  3865  006DC4  6E1B               	movwf	qualified@i+1,c
  3866  006DC6  0E00               	movlw	0
  3867  006DC8  6E1A               	movwf	qualified@i,c
  3868  006DCA  501B               	movf	qualified@i+1,w,c
  3869  006DCC  0A80               	xorlw	128
  3870  006DCE  0F80               	addlw	-128
  3871  006DD0  0E28               	movlw	40
  3872  006DD2  B4D8               	btfsc	status,2,c
  3873  006DD4  5C1A               	subwf	qualified@i,w,c
  3874  006DD6  B0D8               	btfsc	status,0,c
  3875  006DD8  D061               	goto	l119
  3876                           
  3877                           ;fuzzy.c: 114: if (x[i] < w)
  3878  006DDA  C01A  F001         	movff	qualified@i,___wmul@multiplier
  3879  006DDE  C01B  F002         	movff	qualified@i+1,___wmul@multiplier+1
  3880  006DE2  0E00               	movlw	0
  3881  006DE4  6E04               	movwf	___wmul@multiplicand+1,c
  3882  006DE6  0E03               	movlw	3
  3883  006DE8  6E03               	movwf	___wmul@multiplicand,c
  3884  006DEA  EC2D  F033         	call	___wmul	;wreg free
  3885  006DEE  5001               	movf	?___wmul,w,c
  3886  006DF0  2412               	addwf	qualified@x,w,c
  3887  006DF2  6ED9               	movwf	fsr2l,c
  3888  006DF4  5002               	movf	?___wmul+1,w,c
  3889  006DF6  2013               	addwfc	qualified@x+1,w,c
  3890  006DF8  6EDA               	movwf	fsr2h,c
  3891  006DFA  CFDE F007          	movff	postinc2,___ftge@ff1
  3892  006DFE  CFDE F008          	movff	postinc2,___ftge@ff1+1
  3893  006E02  CFDD F009          	movff	postdec2,___ftge@ff1+2
  3894  006E06  C014  F00A         	movff	qualified@w,___ftge@ff2
  3895  006E0A  C015  F00B         	movff	qualified@w+1,___ftge@ff2+1
  3896  006E0E  C016  F00C         	movff	qualified@w+2,___ftge@ff2+2
  3897  006E12  EC4D  F034         	call	___ftge	;wreg free
  3898  006E16  B0D8               	btfsc	status,0,c
  3899  006E18  D028               	goto	l2319
  3900                           
  3901                           ;fuzzy.c: 115: y[i] = x[i];
  3902  006E1A  C01A  F001         	movff	qualified@i,___wmul@multiplier
  3903  006E1E  C01B  F002         	movff	qualified@i+1,___wmul@multiplier+1
  3904  006E22  0E00               	movlw	0
  3905  006E24  6E04               	movwf	___wmul@multiplicand+1,c
  3906  006E26  0E03               	movlw	3
  3907  006E28  6E03               	movwf	___wmul@multiplicand,c
  3908  006E2A  EC2D  F033         	call	___wmul	;wreg free
  3909  006E2E  5001               	movf	?___wmul,w,c
  3910  006E30  2412               	addwf	qualified@x,w,c
  3911  006E32  6ED9               	movwf	fsr2l,c
  3912  006E34  5002               	movf	?___wmul+1,w,c
  3913  006E36  2013               	addwfc	qualified@x+1,w,c
  3914  006E38  6EDA               	movwf	fsr2h,c
  3915  006E3A  C01A  F001         	movff	qualified@i,___wmul@multiplier
  3916  006E3E  C01B  F002         	movff	qualified@i+1,___wmul@multiplier+1
  3917  006E42  0E00               	movlw	0
  3918  006E44  6E04               	movwf	___wmul@multiplicand+1,c
  3919  006E46  0E03               	movlw	3
  3920  006E48  6E03               	movwf	___wmul@multiplicand,c
  3921  006E4A  EC2D  F033         	call	___wmul	;wreg free
  3922  006E4E  5001               	movf	?___wmul,w,c
  3923  006E50  2410               	addwf	qualified@y,w,c
  3924  006E52  6EE1               	movwf	fsr1l,c
  3925  006E54  5002               	movf	?___wmul+1,w,c
  3926  006E56  2011               	addwfc	qualified@y+1,w,c
  3927  006E58  6EE2               	movwf	fsr1h,c
  3928  006E5A  CFDE FFE6          	movff	postinc2,postinc1
  3929  006E5E  CFDE FFE6          	movff	postinc2,postinc1
  3930  006E62  CFDE FFE5          	movff	postinc2,postdec1
  3931  006E66  52E5               	movf	postdec1,f,c
  3932  006E68  D016               	goto	l2321
  3933  006E6A                     l2319:
  3934                           
  3935                           ;fuzzy.c: 116: else
  3936                           ;fuzzy.c: 117: y[i] = w;
  3937  006E6A  C01A  F001         	movff	qualified@i,___wmul@multiplier
  3938  006E6E  C01B  F002         	movff	qualified@i+1,___wmul@multiplier+1
  3939  006E72  0E00               	movlw	0
  3940  006E74  6E04               	movwf	___wmul@multiplicand+1,c
  3941  006E76  0E03               	movlw	3
  3942  006E78  6E03               	movwf	___wmul@multiplicand,c
  3943  006E7A  EC2D  F033         	call	___wmul	;wreg free
  3944  006E7E  5001               	movf	?___wmul,w,c
  3945  006E80  2410               	addwf	qualified@y,w,c
  3946  006E82  6ED9               	movwf	fsr2l,c
  3947  006E84  5002               	movf	?___wmul+1,w,c
  3948  006E86  2011               	addwfc	qualified@y+1,w,c
  3949  006E88  6EDA               	movwf	fsr2h,c
  3950  006E8A  C014  FFDE         	movff	qualified@w,postinc2
  3951  006E8E  C015  FFDE         	movff	qualified@w+1,postinc2
  3952  006E92  C016  FFDD         	movff	qualified@w+2,postdec2
  3953  006E96                     l2321:
  3954  006E96  4A1A               	infsnz	qualified@i,f,c
  3955  006E98  2A1B               	incf	qualified@i+1,f,c
  3956  006E9A  D797               	goto	L8
  3957  006E9C                     l119:
  3958  006E9C  0012               	return	
  3959  006E9E                     __end_of_qualified:
  3960                           	opt stack 0
  3961                           tblptru	equ	0xFF8
  3962                           tblptrh	equ	0xFF7
  3963                           tblptrl	equ	0xFF6
  3964                           tablat	equ	0xFF5
  3965                           wreg	equ	0xFE8
  3966                           postinc1	equ	0xFE6
  3967                           postdec1	equ	0xFE5
  3968                           fsr1h	equ	0xFE2
  3969                           fsr1l	equ	0xFE1
  3970                           postinc2	equ	0xFDE
  3971                           postdec2	equ	0xFDD
  3972                           fsr2h	equ	0xFDA
  3973                           fsr2l	equ	0xFD9
  3974                           status	equ	0xFD8
  3975                           
  3976 ;; *************** function _out_mf *****************
  3977 ;; Defined at:
  3978 ;;		line 123 in file "fuzzy.c"
  3979 ;; Parameters:    Size  Location     Type
  3980 ;;  result          2   15[COMRAM] PTR 
  3981 ;;		 -> fuzzy_system_single1@overall_out_mf(120), fuzzy_system_single2@overall_out_mf(120), fuzzy_system_single@overall_
      +out_mf(120), fuzzy_system@overall_out_mf(120), 
  3982 ;;  x               2   17[COMRAM] PTR 
  3983 ;;		 -> fuzzy_system_single1@qualified_cons_mf1(120), fuzzy_system_single2@qualified_cons_mf1(120), fuzzy_system_single@
      +qualified_cons_mf1(120), fuzzy_system@qualified_cons_mf1(120), 
  3984 ;;  y               2   19[COMRAM] PTR 
  3985 ;;		 -> fuzzy_system_single1@qualified_cons_mf2(120), fuzzy_system_single2@qualified_cons_mf2(120), fuzzy_system_single@
      +qualified_cons_mf2(120), fuzzy_system@qualified_cons_mf2(120), 
  3986 ;;  z               2   21[COMRAM] PTR 
  3987 ;;		 -> fuzzy_system_single1@qualified_cons_mf3(120), fuzzy_system_single2@qualified_cons_mf3(120), fuzzy_system_single@
      +qualified_cons_mf3(120), fuzzy_system@qualified_cons_mf3(120), 
  3988 ;; Auto vars:     Size  Location     Type
  3989 ;;  i               2   23[COMRAM] int 
  3990 ;; Return value:  Size  Location     Type
  3991 ;;		None               void
  3992 ;; Registers used:
  3993 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3994 ;; Tracked objects:
  3995 ;;		On entry : 0/0
  3996 ;;		On exit  : 0/0
  3997 ;;		Unchanged: 0/0
  3998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3999 ;;      Params:         8       0       0       0       0       0       0       0       0
  4000 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4001 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4002 ;;      Totals:        10       0       0       0       0       0       0       0       0
  4003 ;;Total ram usage:       10 bytes
  4004 ;; Hardware stack levels used:    1
  4005 ;; Hardware stack levels required when called:    1
  4006 ;; This function calls:
  4007 ;;		___ftge
  4008 ;;		___wmul
  4009 ;; This function is called by:
  4010 ;;		_fuzzy_system_single2
  4011 ;;		_fuzzy_system_single1
  4012 ;;		_fuzzy_system
  4013 ;;		_fuzzy_system_single
  4014 ;; This function uses a non-reentrant model
  4015 ;;
  4016                           
  4017                           	psect	text22
  4018  0076A2                     __ptext22:
  4019                           	opt stack 0
  4020  0076A2                     _out_mf:
  4021                           	opt stack 28
  4022                           
  4023                           ;fuzzy.c: 125: int i;
  4024                           ;fuzzy.c: 126: for(i=0; i<40;i++){
  4025                           
  4026                           ;incstack = 0
  4027  0076A2  0E00               	movlw	0
  4028  0076A4  6E19               	movwf	out_mf@i+1,c
  4029  0076A6  0E00               	movlw	0
  4030  0076A8  6E18               	movwf	out_mf@i,c
  4031  0076AA  5019               	movf	out_mf@i+1,w,c
  4032  0076AC  0A80               	xorlw	128
  4033  0076AE  0F80               	addlw	-128
  4034  0076B0  0E28               	movlw	40
  4035  0076B2  B4D8               	btfsc	status,2,c
  4036  0076B4  5C18               	subwf	out_mf@i,w,c
  4037  0076B6  B0D8               	btfsc	status,0,c
  4038  0076B8  D120               	goto	l128
  4039                           
  4040                           ;fuzzy.c: 127: if(x[i] > y[i] && x[i] > z[i])
  4041  0076BA  C018  F001         	movff	out_mf@i,___wmul@multiplier
  4042  0076BE  C019  F002         	movff	out_mf@i+1,___wmul@multiplier+1
  4043  0076C2  0E00               	movlw	0
  4044  0076C4  6E04               	movwf	___wmul@multiplicand+1,c
  4045  0076C6  0E03               	movlw	3
  4046  0076C8  6E03               	movwf	___wmul@multiplicand,c
  4047  0076CA  EC2D  F033         	call	___wmul	;wreg free
  4048  0076CE  5001               	movf	?___wmul,w,c
  4049  0076D0  2414               	addwf	out_mf@y,w,c
  4050  0076D2  6ED9               	movwf	fsr2l,c
  4051  0076D4  5002               	movf	?___wmul+1,w,c
  4052  0076D6  2015               	addwfc	out_mf@y+1,w,c
  4053  0076D8  6EDA               	movwf	fsr2h,c
  4054  0076DA  CFDE F007          	movff	postinc2,___ftge@ff1
  4055  0076DE  CFDE F008          	movff	postinc2,___ftge@ff1+1
  4056  0076E2  CFDD F009          	movff	postdec2,___ftge@ff1+2
  4057  0076E6  C018  F001         	movff	out_mf@i,___wmul@multiplier
  4058  0076EA  C019  F002         	movff	out_mf@i+1,___wmul@multiplier+1
  4059  0076EE  0E00               	movlw	0
  4060  0076F0  6E04               	movwf	___wmul@multiplicand+1,c
  4061  0076F2  0E03               	movlw	3
  4062  0076F4  6E03               	movwf	___wmul@multiplicand,c
  4063  0076F6  EC2D  F033         	call	___wmul	;wreg free
  4064  0076FA  5001               	movf	?___wmul,w,c
  4065  0076FC  2412               	addwf	out_mf@x,w,c
  4066  0076FE  6ED9               	movwf	fsr2l,c
  4067  007700  5002               	movf	?___wmul+1,w,c
  4068  007702  2013               	addwfc	out_mf@x+1,w,c
  4069  007704  6EDA               	movwf	fsr2h,c
  4070  007706  CFDE F00A          	movff	postinc2,___ftge@ff2
  4071  00770A  CFDE F00B          	movff	postinc2,___ftge@ff2+1
  4072  00770E  CFDD F00C          	movff	postdec2,___ftge@ff2+2
  4073  007712  EC4D  F034         	call	___ftge	;wreg free
  4074  007716  B0D8               	btfsc	status,0,c
  4075  007718  D04B               	goto	l2337
  4076  00771A  C018  F001         	movff	out_mf@i,___wmul@multiplier
  4077  00771E  C019  F002         	movff	out_mf@i+1,___wmul@multiplier+1
  4078  007722  0E00               	movlw	0
  4079  007724  6E04               	movwf	___wmul@multiplicand+1,c
  4080  007726  0E03               	movlw	3
  4081  007728  6E03               	movwf	___wmul@multiplicand,c
  4082  00772A  EC2D  F033         	call	___wmul	;wreg free
  4083  00772E  5001               	movf	?___wmul,w,c
  4084  007730  2416               	addwf	out_mf@z,w,c
  4085  007732  6ED9               	movwf	fsr2l,c
  4086  007734  5002               	movf	?___wmul+1,w,c
  4087  007736  2017               	addwfc	out_mf@z+1,w,c
  4088  007738  6EDA               	movwf	fsr2h,c
  4089  00773A  CFDE F007          	movff	postinc2,___ftge@ff1
  4090  00773E  CFDE F008          	movff	postinc2,___ftge@ff1+1
  4091  007742  CFDD F009          	movff	postdec2,___ftge@ff1+2
  4092  007746  C018  F001         	movff	out_mf@i,___wmul@multiplier
  4093  00774A  C019  F002         	movff	out_mf@i+1,___wmul@multiplier+1
  4094  00774E  0E00               	movlw	0
  4095  007750  6E04               	movwf	___wmul@multiplicand+1,c
  4096  007752  0E03               	movlw	3
  4097  007754  6E03               	movwf	___wmul@multiplicand,c
  4098  007756  EC2D  F033         	call	___wmul	;wreg free
  4099  00775A  5001               	movf	?___wmul,w,c
  4100  00775C  2412               	addwf	out_mf@x,w,c
  4101  00775E  6ED9               	movwf	fsr2l,c
  4102  007760  5002               	movf	?___wmul+1,w,c
  4103  007762  2013               	addwfc	out_mf@x+1,w,c
  4104  007764  6EDA               	movwf	fsr2h,c
  4105  007766  CFDE F00A          	movff	postinc2,___ftge@ff2
  4106  00776A  CFDE F00B          	movff	postinc2,___ftge@ff2+1
  4107  00776E  CFDD F00C          	movff	postdec2,___ftge@ff2+2
  4108  007772  EC4D  F034         	call	___ftge	;wreg free
  4109  007776  B0D8               	btfsc	status,0,c
  4110  007778  D01B               	goto	l2337
  4111                           
  4112                           ;fuzzy.c: 128: {
  4113                           ;fuzzy.c: 130: result[i]=x[i];
  4114  00777A  C018  F001         	movff	out_mf@i,___wmul@multiplier
  4115  00777E  C019  F002         	movff	out_mf@i+1,___wmul@multiplier+1
  4116  007782  0E00               	movlw	0
  4117  007784  6E04               	movwf	___wmul@multiplicand+1,c
  4118  007786  0E03               	movlw	3
  4119  007788  6E03               	movwf	___wmul@multiplicand,c
  4120  00778A  EC2D  F033         	call	___wmul	;wreg free
  4121  00778E  5001               	movf	?___wmul,w,c
  4122  007790  2412               	addwf	out_mf@x,w,c
  4123  007792  6ED9               	movwf	fsr2l,c
  4124  007794  5002               	movf	?___wmul+1,w,c
  4125  007796  2013               	addwfc	out_mf@x+1,w,c
  4126  007798  6EDA               	movwf	fsr2h,c
  4127  00779A  C018  F001         	movff	out_mf@i,___wmul@multiplier
  4128  00779E  C019  F002         	movff	out_mf@i+1,___wmul@multiplier+1
  4129  0077A2  0E00               	movlw	0
  4130  0077A4  6E04               	movwf	___wmul@multiplicand+1,c
  4131  0077A6  0E03               	movlw	3
  4132  0077A8  6E03               	movwf	___wmul@multiplicand,c
  4133  0077AA  EC2D  F033         	call	___wmul	;wreg free
  4134  0077AE  D095               	goto	L10
  4135  0077B0                     l2337:
  4136                           
  4137                           ;fuzzy.c: 132: else
  4138                           ;fuzzy.c: 133: {
  4139                           ;fuzzy.c: 134: if( y[i] > x[i] && y[i] > z[i]){
  4140  0077B0  C018  F001         	movff	out_mf@i,___wmul@multiplier
  4141  0077B4  C019  F002         	movff	out_mf@i+1,___wmul@multiplier+1
  4142  0077B8  0E00               	movlw	0
  4143  0077BA  6E04               	movwf	___wmul@multiplicand+1,c
  4144  0077BC  0E03               	movlw	3
  4145  0077BE  6E03               	movwf	___wmul@multiplicand,c
  4146  0077C0  EC2D  F033         	call	___wmul	;wreg free
  4147  0077C4  5001               	movf	?___wmul,w,c
  4148  0077C6  2412               	addwf	out_mf@x,w,c
  4149  0077C8  6ED9               	movwf	fsr2l,c
  4150  0077CA  5002               	movf	?___wmul+1,w,c
  4151  0077CC  2013               	addwfc	out_mf@x+1,w,c
  4152  0077CE  6EDA               	movwf	fsr2h,c
  4153  0077D0  CFDE F007          	movff	postinc2,___ftge@ff1
  4154  0077D4  CFDE F008          	movff	postinc2,___ftge@ff1+1
  4155  0077D8  CFDD F009          	movff	postdec2,___ftge@ff1+2
  4156  0077DC  C018  F001         	movff	out_mf@i,___wmul@multiplier
  4157  0077E0  C019  F002         	movff	out_mf@i+1,___wmul@multiplier+1
  4158  0077E4  0E00               	movlw	0
  4159  0077E6  6E04               	movwf	___wmul@multiplicand+1,c
  4160  0077E8  0E03               	movlw	3
  4161  0077EA  6E03               	movwf	___wmul@multiplicand,c
  4162  0077EC  EC2D  F033         	call	___wmul	;wreg free
  4163  0077F0  5001               	movf	?___wmul,w,c
  4164  0077F2  2414               	addwf	out_mf@y,w,c
  4165  0077F4  6ED9               	movwf	fsr2l,c
  4166  0077F6  5002               	movf	?___wmul+1,w,c
  4167  0077F8  2015               	addwfc	out_mf@y+1,w,c
  4168  0077FA  6EDA               	movwf	fsr2h,c
  4169  0077FC  CFDE F00A          	movff	postinc2,___ftge@ff2
  4170  007800  CFDE F00B          	movff	postinc2,___ftge@ff2+1
  4171  007804  CFDD F00C          	movff	postdec2,___ftge@ff2+2
  4172  007808  EC4D  F034         	call	___ftge	;wreg free
  4173  00780C  B0D8               	btfsc	status,0,c
  4174  00780E  D04B               	goto	l2343
  4175  007810  C018  F001         	movff	out_mf@i,___wmul@multiplier
  4176  007814  C019  F002         	movff	out_mf@i+1,___wmul@multiplier+1
  4177  007818  0E00               	movlw	0
  4178  00781A  6E04               	movwf	___wmul@multiplicand+1,c
  4179  00781C  0E03               	movlw	3
  4180  00781E  6E03               	movwf	___wmul@multiplicand,c
  4181  007820  EC2D  F033         	call	___wmul	;wreg free
  4182  007824  5001               	movf	?___wmul,w,c
  4183  007826  2416               	addwf	out_mf@z,w,c
  4184  007828  6ED9               	movwf	fsr2l,c
  4185  00782A  5002               	movf	?___wmul+1,w,c
  4186  00782C  2017               	addwfc	out_mf@z+1,w,c
  4187  00782E  6EDA               	movwf	fsr2h,c
  4188  007830  CFDE F007          	movff	postinc2,___ftge@ff1
  4189  007834  CFDE F008          	movff	postinc2,___ftge@ff1+1
  4190  007838  CFDD F009          	movff	postdec2,___ftge@ff1+2
  4191  00783C  C018  F001         	movff	out_mf@i,___wmul@multiplier
  4192  007840  C019  F002         	movff	out_mf@i+1,___wmul@multiplier+1
  4193  007844  0E00               	movlw	0
  4194  007846  6E04               	movwf	___wmul@multiplicand+1,c
  4195  007848  0E03               	movlw	3
  4196  00784A  6E03               	movwf	___wmul@multiplicand,c
  4197  00784C  EC2D  F033         	call	___wmul	;wreg free
  4198  007850  5001               	movf	?___wmul,w,c
  4199  007852  2414               	addwf	out_mf@y,w,c
  4200  007854  6ED9               	movwf	fsr2l,c
  4201  007856  5002               	movf	?___wmul+1,w,c
  4202  007858  2015               	addwfc	out_mf@y+1,w,c
  4203  00785A  6EDA               	movwf	fsr2h,c
  4204  00785C  CFDE F00A          	movff	postinc2,___ftge@ff2
  4205  007860  CFDE F00B          	movff	postinc2,___ftge@ff2+1
  4206  007864  CFDD F00C          	movff	postdec2,___ftge@ff2+2
  4207  007868  EC4D  F034         	call	___ftge	;wreg free
  4208  00786C  B0D8               	btfsc	status,0,c
  4209  00786E  D01B               	goto	l2343
  4210                           
  4211                           ;fuzzy.c: 136: result[i]=y[i];
  4212  007870  C018  F001         	movff	out_mf@i,___wmul@multiplier
  4213  007874  C019  F002         	movff	out_mf@i+1,___wmul@multiplier+1
  4214  007878  0E00               	movlw	0
  4215  00787A  6E04               	movwf	___wmul@multiplicand+1,c
  4216  00787C  0E03               	movlw	3
  4217  00787E  6E03               	movwf	___wmul@multiplicand,c
  4218  007880  EC2D  F033         	call	___wmul	;wreg free
  4219  007884  5001               	movf	?___wmul,w,c
  4220  007886  2414               	addwf	out_mf@y,w,c
  4221  007888  6ED9               	movwf	fsr2l,c
  4222  00788A  5002               	movf	?___wmul+1,w,c
  4223  00788C  2015               	addwfc	out_mf@y+1,w,c
  4224  00788E  6EDA               	movwf	fsr2h,c
  4225  007890  C018  F001         	movff	out_mf@i,___wmul@multiplier
  4226  007894  C019  F002         	movff	out_mf@i+1,___wmul@multiplier+1
  4227  007898  0E00               	movlw	0
  4228  00789A  6E04               	movwf	___wmul@multiplicand+1,c
  4229  00789C  0E03               	movlw	3
  4230  00789E  6E03               	movwf	___wmul@multiplicand,c
  4231  0078A0  EC2D  F033         	call	___wmul	;wreg free
  4232  0078A4  D01A               	goto	L10
  4233  0078A6                     l2343:
  4234                           
  4235                           ;fuzzy.c: 138: else
  4236                           ;fuzzy.c: 139: {
  4237                           ;fuzzy.c: 141: result[i]=z[i];
  4238  0078A6  C018  F001         	movff	out_mf@i,___wmul@multiplier
  4239  0078AA  C019  F002         	movff	out_mf@i+1,___wmul@multiplier+1
  4240  0078AE  0E00               	movlw	0
  4241  0078B0  6E04               	movwf	___wmul@multiplicand+1,c
  4242  0078B2  0E03               	movlw	3
  4243  0078B4  6E03               	movwf	___wmul@multiplicand,c
  4244  0078B6  EC2D  F033         	call	___wmul	;wreg free
  4245  0078BA  5001               	movf	?___wmul,w,c
  4246  0078BC  2416               	addwf	out_mf@z,w,c
  4247  0078BE  6ED9               	movwf	fsr2l,c
  4248  0078C0  5002               	movf	?___wmul+1,w,c
  4249  0078C2  2017               	addwfc	out_mf@z+1,w,c
  4250  0078C4  6EDA               	movwf	fsr2h,c
  4251  0078C6  C018  F001         	movff	out_mf@i,___wmul@multiplier
  4252  0078CA  C019  F002         	movff	out_mf@i+1,___wmul@multiplier+1
  4253  0078CE  0E00               	movlw	0
  4254  0078D0  6E04               	movwf	___wmul@multiplicand+1,c
  4255  0078D2  0E03               	movlw	3
  4256  0078D4  6E03               	movwf	___wmul@multiplicand,c
  4257  0078D6  EC2D  F033         	call	___wmul	;wreg free
  4258  0078DA                     L10:
  4259  0078DA  5001               	movf	?___wmul,w,c
  4260  0078DC  2410               	addwf	out_mf@result,w,c
  4261  0078DE  6EE1               	movwf	fsr1l,c
  4262  0078E0  5002               	movf	?___wmul+1,w,c
  4263  0078E2  2011               	addwfc	out_mf@result+1,w,c
  4264  0078E4  6EE2               	movwf	fsr1h,c
  4265  0078E6  CFDE FFE6          	movff	postinc2,postinc1
  4266  0078EA  CFDE FFE6          	movff	postinc2,postinc1
  4267  0078EE  CFDE FFE5          	movff	postinc2,postdec1
  4268  0078F2  52E5               	movf	postdec1,f,c
  4269  0078F4  4A18               	infsnz	out_mf@i,f,c
  4270  0078F6  2A19               	incf	out_mf@i+1,f,c
  4271  0078F8  D6D8               	goto	L11
  4272  0078FA                     l128:
  4273  0078FA  0012               	return	
  4274  0078FC                     __end_of_out_mf:
  4275                           	opt stack 0
  4276                           tblptru	equ	0xFF8
  4277                           tblptrh	equ	0xFF7
  4278                           tblptrl	equ	0xFF6
  4279                           tablat	equ	0xFF5
  4280                           wreg	equ	0xFE8
  4281                           postinc1	equ	0xFE6
  4282                           postdec1	equ	0xFE5
  4283                           fsr1h	equ	0xFE2
  4284                           fsr1l	equ	0xFE1
  4285                           postinc2	equ	0xFDE
  4286                           postdec2	equ	0xFDD
  4287                           fsr2h	equ	0xFDA
  4288                           fsr2l	equ	0xFD9
  4289                           status	equ	0xFD8
  4290                           
  4291 ;; *************** function ___ftge *****************
  4292 ;; Defined at:
  4293 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\ftge.c"
  4294 ;; Parameters:    Size  Location     Type
  4295 ;;  ff1             3    6[COMRAM] float 
  4296 ;;  ff2             3    9[COMRAM] float 
  4297 ;; Auto vars:     Size  Location     Type
  4298 ;;		None
  4299 ;; Return value:  Size  Location     Type
  4300 ;;		None               void
  4301 ;; Registers used:
  4302 ;;		wreg, status,2, status,0
  4303 ;; Tracked objects:
  4304 ;;		On entry : 0/0
  4305 ;;		On exit  : 0/0
  4306 ;;		Unchanged: 0/0
  4307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4308 ;;      Params:         6       0       0       0       0       0       0       0       0
  4309 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4310 ;;      Temps:          3       0       0       0       0       0       0       0       0
  4311 ;;      Totals:         9       0       0       0       0       0       0       0       0
  4312 ;;Total ram usage:        9 bytes
  4313 ;; Hardware stack levels used:    1
  4314 ;; This function calls:
  4315 ;;		Nothing
  4316 ;; This function is called by:
  4317 ;;		_triangular
  4318 ;;		_qualified
  4319 ;;		_out_mf
  4320 ;;		_minimo
  4321 ;;		_maximo
  4322 ;;		_trapezoidal
  4323 ;; This function uses a non-reentrant model
  4324 ;;
  4325                           
  4326                           	psect	text23
  4327  00689A                     __ptext23:
  4328                           	opt stack 0
  4329  00689A                     ___ftge:
  4330                           	opt stack 28
  4331                           
  4332                           ;incstack = 0
  4333  00689A  AE09               	btfss	___ftge@ff1+2,7,c
  4334  00689C  D016               	goto	l2011
  4335  00689E  C007  F00D         	movff	___ftge@ff1,??___ftge
  4336  0068A2  C008  F00E         	movff	___ftge@ff1+1,??___ftge+1
  4337  0068A6  C009  F00F         	movff	___ftge@ff1+2,??___ftge+2
  4338  0068AA  1E0D               	comf	??___ftge,f,c
  4339  0068AC  1E0E               	comf	??___ftge+1,f,c
  4340  0068AE  1E0F               	comf	??___ftge+2,f,c
  4341  0068B0  2A0D               	incf	??___ftge,f,c
  4342  0068B2  0E00               	movlw	0
  4343  0068B4  220E               	addwfc	??___ftge+1,f,c
  4344  0068B6  220F               	addwfc	??___ftge+2,f,c
  4345  0068B8  0E00               	movlw	0
  4346  0068BA  240D               	addwf	??___ftge,w,c
  4347  0068BC  6E07               	movwf	___ftge@ff1,c
  4348  0068BE  0E00               	movlw	0
  4349  0068C0  200E               	addwfc	??___ftge+1,w,c
  4350  0068C2  6E08               	movwf	___ftge@ff1+1,c
  4351  0068C4  0E80               	movlw	128
  4352  0068C6  200F               	addwfc	??___ftge+2,w,c
  4353  0068C8  6E09               	movwf	___ftge@ff1+2,c
  4354  0068CA                     l2011:
  4355  0068CA  AE0C               	btfss	___ftge@ff2+2,7,c
  4356  0068CC  D016               	goto	l2015
  4357  0068CE  C00A  F00D         	movff	___ftge@ff2,??___ftge
  4358  0068D2  C00B  F00E         	movff	___ftge@ff2+1,??___ftge+1
  4359  0068D6  C00C  F00F         	movff	___ftge@ff2+2,??___ftge+2
  4360  0068DA  1E0D               	comf	??___ftge,f,c
  4361  0068DC  1E0E               	comf	??___ftge+1,f,c
  4362  0068DE  1E0F               	comf	??___ftge+2,f,c
  4363  0068E0  2A0D               	incf	??___ftge,f,c
  4364  0068E2  0E00               	movlw	0
  4365  0068E4  220E               	addwfc	??___ftge+1,f,c
  4366  0068E6  220F               	addwfc	??___ftge+2,f,c
  4367  0068E8  0E00               	movlw	0
  4368  0068EA  240D               	addwf	??___ftge,w,c
  4369  0068EC  6E0A               	movwf	___ftge@ff2,c
  4370  0068EE  0E00               	movlw	0
  4371  0068F0  200E               	addwfc	??___ftge+1,w,c
  4372  0068F2  6E0B               	movwf	___ftge@ff2+1,c
  4373  0068F4  0E80               	movlw	128
  4374  0068F6  200F               	addwfc	??___ftge+2,w,c
  4375  0068F8  6E0C               	movwf	___ftge@ff2+2,c
  4376  0068FA                     l2015:
  4377  0068FA  0E00               	movlw	0
  4378  0068FC  1A07               	xorwf	___ftge@ff1,f,c
  4379  0068FE  0E00               	movlw	0
  4380  006900  1A08               	xorwf	___ftge@ff1+1,f,c
  4381  006902  0E80               	movlw	128
  4382  006904  1A09               	xorwf	___ftge@ff1+2,f,c
  4383  006906  0E00               	movlw	0
  4384  006908  1A0A               	xorwf	___ftge@ff2,f,c
  4385  00690A  0E00               	movlw	0
  4386  00690C  1A0B               	xorwf	___ftge@ff2+1,f,c
  4387  00690E  0E80               	movlw	128
  4388  006910  1A0C               	xorwf	___ftge@ff2+2,f,c
  4389  006912  500A               	movf	___ftge@ff2,w,c
  4390  006914  5C07               	subwf	___ftge@ff1,w,c
  4391  006916  500B               	movf	___ftge@ff2+1,w,c
  4392  006918  5808               	subwfb	___ftge@ff1+1,w,c
  4393  00691A  500C               	movf	___ftge@ff2+2,w,c
  4394  00691C  5809               	subwfb	___ftge@ff1+2,w,c
  4395  00691E  B0D8               	btfsc	status,0,c
  4396  006920  D002               	goto	l2021
  4397  006922  90D8               	bcf	status,0,c
  4398  006924  D001               	goto	l690
  4399  006926                     l2021:
  4400  006926  80D8               	bsf	status,0,c
  4401  006928                     l690:
  4402  006928  0012               	return	
  4403  00692A                     __end_of___ftge:
  4404                           	opt stack 0
  4405                           tblptru	equ	0xFF8
  4406                           tblptrh	equ	0xFF7
  4407                           tblptrl	equ	0xFF6
  4408                           tablat	equ	0xFF5
  4409                           wreg	equ	0xFE8
  4410                           postinc1	equ	0xFE6
  4411                           postdec1	equ	0xFE5
  4412                           fsr1h	equ	0xFE2
  4413                           fsr1l	equ	0xFE1
  4414                           postinc2	equ	0xFDE
  4415                           postdec2	equ	0xFDD
  4416                           fsr2h	equ	0xFDA
  4417                           fsr2l	equ	0xFD9
  4418                           status	equ	0xFD8
  4419                           
  4420 ;; *************** function _linspace *****************
  4421 ;; Defined at:
  4422 ;;		line 12 in file "fuzzy.c"
  4423 ;; Parameters:    Size  Location     Type
  4424 ;;  x               2   54[COMRAM] PTR 
  4425 ;;		 -> fuzzy_system_single1@y(120), fuzzy_system_single1@x(120), fuzzy_system_single2@y(120), fuzzy_system_single2@x(12
      +0), 
  4426 ;;		 -> fuzzy_system_single@y(120), fuzzy_system_single@x(120), fuzzy_system@y(120), fuzzy_system@x(120), 
  4427 ;;  start           3   56[COMRAM] PTR 
  4428 ;;  end             3   59[COMRAM] PTR 
  4429 ;;  size            2   62[COMRAM] int 
  4430 ;; Auto vars:     Size  Location     Type
  4431 ;;  i               2   66[COMRAM] int 
  4432 ;; Return value:  Size  Location     Type
  4433 ;;		None               void
  4434 ;; Registers used:
  4435 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4436 ;; Tracked objects:
  4437 ;;		On entry : 0/0
  4438 ;;		On exit  : 0/0
  4439 ;;		Unchanged: 0/0
  4440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4441 ;;      Params:        10       0       0       0       0       0       0       0       0
  4442 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4443 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4444 ;;      Totals:        14       0       0       0       0       0       0       0       0
  4445 ;;Total ram usage:       14 bytes
  4446 ;; Hardware stack levels used:    1
  4447 ;; Hardware stack levels required when called:    2
  4448 ;; This function calls:
  4449 ;;		___awtoft
  4450 ;;		___ftadd
  4451 ;;		___ftdiv
  4452 ;;		___ftmul
  4453 ;;		___wmul
  4454 ;; This function is called by:
  4455 ;;		_fuzzy_system_single2
  4456 ;;		_fuzzy_system_single1
  4457 ;;		_fuzzy_system
  4458 ;;		_fuzzy_system_single
  4459 ;; This function uses a non-reentrant model
  4460 ;;
  4461                           
  4462                           	psect	text24
  4463  006F8A                     __ptext24:
  4464                           	opt stack 0
  4465  006F8A                     _linspace:
  4466                           	opt stack 27
  4467                           
  4468                           ;fuzzy.c: 14: int i;
  4469                           ;fuzzy.c: 15: for (i=0; i<size; i++)
  4470                           
  4471                           ;incstack = 0
  4472  006F8A  0E00               	movlw	0
  4473  006F8C  6E44               	movwf	linspace@i+1,c
  4474  006F8E  0E00               	movlw	0
  4475  006F90  6E43               	movwf	linspace@i,c
  4476  006F92  D071               	goto	l2253
  4477  006F94                     l2249:
  4478                           
  4479                           ;fuzzy.c: 16: x[i] = ( i*end + (size-1-i)*start ) / (size-1);
  4480  006F94  C043  F001         	movff	linspace@i,___wmul@multiplier
  4481  006F98  C044  F002         	movff	linspace@i+1,___wmul@multiplier+1
  4482  006F9C  0E00               	movlw	0
  4483  006F9E  6E04               	movwf	___wmul@multiplicand+1,c
  4484  006FA0  0E03               	movlw	3
  4485  006FA2  6E03               	movwf	___wmul@multiplicand,c
  4486  006FA4  EC2D  F033         	call	___wmul	;wreg free
  4487  006FA8  5001               	movf	?___wmul,w,c
  4488  006FAA  2437               	addwf	linspace@x,w,c
  4489  006FAC  6ED9               	movwf	fsr2l,c
  4490  006FAE  5002               	movf	?___wmul+1,w,c
  4491  006FB0  2038               	addwfc	linspace@x+1,w,c
  4492  006FB2  6EDA               	movwf	fsr2h,c
  4493  006FB4  C039  F010         	movff	linspace@start,___ftmul@f2
  4494  006FB8  C03A  F011         	movff	linspace@start+1,___ftmul@f2+1
  4495  006FBC  C03B  F012         	movff	linspace@start+2,___ftmul@f2+2
  4496  006FC0  0E01               	movlw	1
  4497  006FC2  2443               	addwf	linspace@i,w,c
  4498  006FC4  6E41               	movwf	??_linspace& (0+255),c
  4499  006FC6  0E00               	movlw	0
  4500  006FC8  2044               	addwfc	linspace@i+1,w,c
  4501  006FCA  6E42               	movwf	(??_linspace+1)& (0+255),c
  4502  006FCC  1E41               	comf	??_linspace,f,c
  4503  006FCE  1E42               	comf	??_linspace+1,f,c
  4504  006FD0  4A41               	infsnz	??_linspace,f,c
  4505  006FD2  2A42               	incf	??_linspace+1,f,c
  4506  006FD4  503F               	movf	linspace@size,w,c
  4507  006FD6  2441               	addwf	??_linspace,w,c
  4508  006FD8  6E09               	movwf	___awtoft@c,c
  4509  006FDA  5040               	movf	linspace@size+1,w,c
  4510  006FDC  2042               	addwfc	??_linspace+1,w,c
  4511  006FDE  6E0A               	movwf	___awtoft@c+1,c
  4512  006FE0  ECBF  F033         	call	___awtoft	;wreg free
  4513  006FE4  C009  F00D         	movff	?___awtoft,___ftmul@f1
  4514  006FE8  C00A  F00E         	movff	?___awtoft+1,___ftmul@f1+1
  4515  006FEC  C00B  F00F         	movff	?___awtoft+2,___ftmul@f1+2
  4516  006FF0  EC69  F036         	call	___ftmul	;wreg free
  4517  006FF4  C00D  F01F         	movff	?___ftmul,___ftadd@f2
  4518  006FF8  C00E  F020         	movff	?___ftmul+1,___ftadd@f2+1
  4519  006FFC  C00F  F021         	movff	?___ftmul+2,___ftadd@f2+2
  4520  007000  C03C  F010         	movff	linspace@end,___ftmul@f2
  4521  007004  C03D  F011         	movff	linspace@end+1,___ftmul@f2+1
  4522  007008  C03E  F012         	movff	linspace@end+2,___ftmul@f2+2
  4523  00700C  C043  F009         	movff	linspace@i,___awtoft@c
  4524  007010  C044  F00A         	movff	linspace@i+1,___awtoft@c+1
  4525  007014  ECBF  F033         	call	___awtoft	;wreg free
  4526  007018  C009  F00D         	movff	?___awtoft,___ftmul@f1
  4527  00701C  C00A  F00E         	movff	?___awtoft+1,___ftmul@f1+1
  4528  007020  C00B  F00F         	movff	?___awtoft+2,___ftmul@f1+2
  4529  007024  EC69  F036         	call	___ftmul	;wreg free
  4530  007028  C00D  F01C         	movff	?___ftmul,___ftadd@f1
  4531  00702C  C00E  F01D         	movff	?___ftmul+1,___ftadd@f1+1
  4532  007030  C00F  F01E         	movff	?___ftmul+2,___ftadd@f1+2
  4533  007034  EC88  F039         	call	___ftadd	;wreg free
  4534  007038  C01C  F028         	movff	?___ftadd,___ftdiv@f1
  4535  00703C  C01D  F029         	movff	?___ftadd+1,___ftdiv@f1+1
  4536  007040  C01E  F02A         	movff	?___ftadd+2,___ftdiv@f1+2
  4537  007044  0EFF               	movlw	255
  4538  007046  243F               	addwf	linspace@size,w,c
  4539  007048  6E09               	movwf	___awtoft@c,c
  4540  00704A  0EFF               	movlw	255
  4541  00704C  2040               	addwfc	linspace@size+1,w,c
  4542  00704E  6E0A               	movwf	___awtoft@c+1,c
  4543  007050  ECBF  F033         	call	___awtoft	;wreg free
  4544  007054  C009  F02B         	movff	?___awtoft,___ftdiv@f2
  4545  007058  C00A  F02C         	movff	?___awtoft+1,___ftdiv@f2+1
  4546  00705C  C00B  F02D         	movff	?___awtoft+2,___ftdiv@f2+2
  4547  007060  ECFE  F035         	call	___ftdiv	;wreg free
  4548  007064  C028  FFDE         	movff	?___ftdiv,postinc2
  4549  007068  C029  FFDE         	movff	?___ftdiv+1,postinc2
  4550  00706C  C02A  FFDD         	movff	?___ftdiv+2,postdec2
  4551  007070  52DD               	movf	postdec2,f,c
  4552  007072  4A43               	infsnz	linspace@i,f,c
  4553  007074  2A44               	incf	linspace@i+1,f,c
  4554  007076                     l2253:
  4555  007076  5044               	movf	linspace@i+1,w,c
  4556  007078  0A80               	xorlw	128
  4557  00707A  6E41               	movwf	??_linspace& (0+255),c
  4558  00707C  503F               	movf	linspace@size,w,c
  4559  00707E  5C43               	subwf	linspace@i,w,c
  4560  007080  5040               	movf	linspace@size+1,w,c
  4561  007082  0A80               	xorlw	128
  4562  007084  5841               	subwfb	??_linspace& (0+255),w,c
  4563  007086  B0D8               	btfsc	status,0,c
  4564                           
  4565                           ;fuzzy.c: 17: return;
  4566  007088  0012               	return	
  4567  00708A  D784               	goto	l2249
  4568  00708C                     __end_of_linspace:
  4569                           	opt stack 0
  4570                           tblptru	equ	0xFF8
  4571                           tblptrh	equ	0xFF7
  4572                           tblptrl	equ	0xFF6
  4573                           tablat	equ	0xFF5
  4574                           wreg	equ	0xFE8
  4575                           postinc1	equ	0xFE6
  4576                           postdec1	equ	0xFE5
  4577                           fsr1h	equ	0xFE2
  4578                           fsr1l	equ	0xFE1
  4579                           postinc2	equ	0xFDE
  4580                           postdec2	equ	0xFDD
  4581                           fsr2h	equ	0xFDA
  4582                           fsr2l	equ	0xFD9
  4583                           status	equ	0xFD8
  4584                           
  4585 ;; *************** function ___awtoft *****************
  4586 ;; Defined at:
  4587 ;;		line 32 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\awtoft.c"
  4588 ;; Parameters:    Size  Location     Type
  4589 ;;  c               2    8[COMRAM] int 
  4590 ;; Auto vars:     Size  Location     Type
  4591 ;;  sign            1   11[COMRAM] unsigned char 
  4592 ;; Return value:  Size  Location     Type
  4593 ;;                  3    8[COMRAM] float 
  4594 ;; Registers used:
  4595 ;;		wreg, status,2, status,0, prodl, cstack
  4596 ;; Tracked objects:
  4597 ;;		On entry : 0/0
  4598 ;;		On exit  : 0/0
  4599 ;;		Unchanged: 0/0
  4600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4601 ;;      Params:         3       0       0       0       0       0       0       0       0
  4602 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4603 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4604 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4605 ;;Total ram usage:        4 bytes
  4606 ;; Hardware stack levels used:    1
  4607 ;; Hardware stack levels required when called:    1
  4608 ;; This function calls:
  4609 ;;		___ftpack
  4610 ;; This function is called by:
  4611 ;;		_main
  4612 ;;		_linspace
  4613 ;; This function uses a non-reentrant model
  4614 ;;
  4615                           
  4616                           	psect	text25
  4617  00677E                     __ptext25:
  4618                           	opt stack 0
  4619  00677E                     ___awtoft:
  4620                           	opt stack 27
  4621                           
  4622                           ;incstack = 0
  4623  00677E  0E00               	movlw	0
  4624  006780  6E0C               	movwf	___awtoft@sign,c
  4625  006782  500A               	movf	___awtoft@c+1,w,c
  4626  006784  0A80               	xorlw	128
  4627  006786  6EF3               	movwf	prodl,c
  4628  006788  0E80               	movlw	128
  4629  00678A  5CF3               	subwf	prodl,w,c
  4630  00678C  0E00               	movlw	0
  4631  00678E  B4D8               	btfsc	status,2,c
  4632  006790  5C09               	subwf	___awtoft@c,w,c
  4633  006792  B0D8               	btfsc	status,0,c
  4634  006794  D006               	goto	l2145
  4635  006796  6C09               	negf	___awtoft@c,c
  4636  006798  1E0A               	comf	___awtoft@c+1,f,c
  4637  00679A  B0D8               	btfsc	status,0,c
  4638  00679C  2A0A               	incf	___awtoft@c+1,f,c
  4639  00679E  0E01               	movlw	1
  4640  0067A0  6E0C               	movwf	___awtoft@sign,c
  4641  0067A2                     l2145:
  4642  0067A2  C009  F001         	movff	___awtoft@c,___ftpack@arg
  4643  0067A6  C00A  F002         	movff	___awtoft@c+1,___ftpack@arg+1
  4644  0067AA  6A03               	clrf	___ftpack@arg+2,c
  4645  0067AC  0E8E               	movlw	142
  4646  0067AE  6E04               	movwf	___ftpack@exp,c
  4647  0067B0  C00C  F005         	movff	___awtoft@sign,___ftpack@sign
  4648  0067B4  ECE4  F034         	call	___ftpack	;wreg free
  4649  0067B8  C001  F009         	movff	?___ftpack,?___awtoft
  4650  0067BC  C002  F00A         	movff	?___ftpack+1,?___awtoft+1
  4651  0067C0  C003  F00B         	movff	?___ftpack+2,?___awtoft+2
  4652  0067C4  0012               	return	
  4653  0067C6                     __end_of___awtoft:
  4654                           	opt stack 0
  4655                           tblptru	equ	0xFF8
  4656                           tblptrh	equ	0xFF7
  4657                           tblptrl	equ	0xFF6
  4658                           tablat	equ	0xFF5
  4659                           prodl	equ	0xFF3
  4660                           wreg	equ	0xFE8
  4661                           postinc1	equ	0xFE6
  4662                           postdec1	equ	0xFE5
  4663                           fsr1h	equ	0xFE2
  4664                           fsr1l	equ	0xFE1
  4665                           postinc2	equ	0xFDE
  4666                           postdec2	equ	0xFDD
  4667                           fsr2h	equ	0xFDA
  4668                           fsr2l	equ	0xFD9
  4669                           status	equ	0xFD8
  4670                           
  4671 ;; *************** function _defuzzy *****************
  4672 ;; Defined at:
  4673 ;;		line 147 in file "fuzzy.c"
  4674 ;; Parameters:    Size  Location     Type
  4675 ;;  x               2   54[COMRAM] PTR 
  4676 ;;		 -> fuzzy_system_single1@y(120), fuzzy_system_single2@y(120), fuzzy_system_single@y(120), fuzzy_system@y(120), 
  4677 ;;  mf              2   56[COMRAM] PTR 
  4678 ;;		 -> fuzzy_system_single1@overall_out_mf(120), fuzzy_system_single2@overall_out_mf(120), fuzzy_system_single@overall_
      +out_mf(120), fuzzy_system@overall_out_mf(120), 
  4679 ;; Auto vars:     Size  Location     Type
  4680 ;;  sum2            3   64[COMRAM] PTR 
  4681 ;;  sum1            3   61[COMRAM] PTR 
  4682 ;;  out             3   58[COMRAM] PTR 
  4683 ;;  i               2   67[COMRAM] int 
  4684 ;; Return value:  Size  Location     Type
  4685 ;;                  3   54[COMRAM] int 
  4686 ;; Registers used:
  4687 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4688 ;; Tracked objects:
  4689 ;;		On entry : 0/0
  4690 ;;		On exit  : 0/0
  4691 ;;		Unchanged: 0/0
  4692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4693 ;;      Params:         4       0       0       0       0       0       0       0       0
  4694 ;;      Locals:        11       0       0       0       0       0       0       0       0
  4695 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4696 ;;      Totals:        15       0       0       0       0       0       0       0       0
  4697 ;;Total ram usage:       15 bytes
  4698 ;; Hardware stack levels used:    1
  4699 ;; Hardware stack levels required when called:    2
  4700 ;; This function calls:
  4701 ;;		___ftadd
  4702 ;;		___ftdiv
  4703 ;;		___ftmul
  4704 ;;		___wmul
  4705 ;; This function is called by:
  4706 ;;		_fuzzy_system_single2
  4707 ;;		_fuzzy_system_single1
  4708 ;;		_fuzzy_system
  4709 ;;		_fuzzy_system_single
  4710 ;; This function uses a non-reentrant model
  4711 ;;
  4712                           
  4713                           	psect	text26
  4714  0071AE                     __ptext26:
  4715                           	opt stack 0
  4716  0071AE                     _defuzzy:
  4717                           	opt stack 27
  4718                           
  4719                           ;fuzzy.c: 149: double sum1=0, sum2=0,out=0;
  4720                           
  4721                           ;incstack = 0
  4722  0071AE  0E00               	movlw	0
  4723  0071B0  6E3E               	movwf	defuzzy@sum1,c
  4724  0071B2  0E00               	movlw	0
  4725  0071B4  6E3F               	movwf	defuzzy@sum1+1,c
  4726  0071B6  0E00               	movlw	0
  4727  0071B8  6E40               	movwf	defuzzy@sum1+2,c
  4728  0071BA  0E00               	movlw	0
  4729  0071BC  6E41               	movwf	defuzzy@sum2,c
  4730  0071BE  0E00               	movlw	0
  4731  0071C0  6E42               	movwf	defuzzy@sum2+1,c
  4732  0071C2  0E00               	movlw	0
  4733  0071C4  6E43               	movwf	defuzzy@sum2+2,c
  4734  0071C6  0E00               	movlw	0
  4735  0071C8  6E3B               	movwf	defuzzy@out,c
  4736  0071CA  0E00               	movlw	0
  4737  0071CC  6E3C               	movwf	defuzzy@out+1,c
  4738  0071CE  0E00               	movlw	0
  4739  0071D0  6E3D               	movwf	defuzzy@out+2,c
  4740                           
  4741                           ;fuzzy.c: 150: int i;
  4742                           ;fuzzy.c: 151: for(i=0;i<40; i++)
  4743  0071D2  0E00               	movlw	0
  4744  0071D4  6E45               	movwf	defuzzy@i+1,c
  4745  0071D6  0E00               	movlw	0
  4746  0071D8  6E44               	movwf	defuzzy@i,c
  4747  0071DA  5045               	movf	defuzzy@i+1,w,c
  4748  0071DC  0A80               	xorlw	128
  4749  0071DE  0F80               	addlw	-128
  4750  0071E0  0E28               	movlw	40
  4751  0071E2  B4D8               	btfsc	status,2,c
  4752  0071E4  5C44               	subwf	defuzzy@i,w,c
  4753  0071E6  B0D8               	btfsc	status,0,c
  4754  0071E8  D045               	goto	l2361
  4755                           
  4756                           ;fuzzy.c: 152: sum1+=x[i]*mf[i];
  4757  0071EA  C03E  F01C         	movff	defuzzy@sum1,___ftadd@f1
  4758  0071EE  C03F  F01D         	movff	defuzzy@sum1+1,___ftadd@f1+1
  4759  0071F2  C040  F01E         	movff	defuzzy@sum1+2,___ftadd@f1+2
  4760  0071F6  C044  F001         	movff	defuzzy@i,___wmul@multiplier
  4761  0071FA  C045  F002         	movff	defuzzy@i+1,___wmul@multiplier+1
  4762  0071FE  0E00               	movlw	0
  4763  007200  6E04               	movwf	___wmul@multiplicand+1,c
  4764  007202  0E03               	movlw	3
  4765  007204  6E03               	movwf	___wmul@multiplicand,c
  4766  007206  EC2D  F033         	call	___wmul	;wreg free
  4767  00720A  5001               	movf	?___wmul,w,c
  4768  00720C  2439               	addwf	defuzzy@mf,w,c
  4769  00720E  6ED9               	movwf	fsr2l,c
  4770  007210  5002               	movf	?___wmul+1,w,c
  4771  007212  203A               	addwfc	defuzzy@mf+1,w,c
  4772  007214  6EDA               	movwf	fsr2h,c
  4773  007216  CFDE F010          	movff	postinc2,___ftmul@f2
  4774  00721A  CFDE F011          	movff	postinc2,___ftmul@f2+1
  4775  00721E  CFDD F012          	movff	postdec2,___ftmul@f2+2
  4776  007222  C044  F001         	movff	defuzzy@i,___wmul@multiplier
  4777  007226  C045  F002         	movff	defuzzy@i+1,___wmul@multiplier+1
  4778  00722A  0E00               	movlw	0
  4779  00722C  6E04               	movwf	___wmul@multiplicand+1,c
  4780  00722E  0E03               	movlw	3
  4781  007230  6E03               	movwf	___wmul@multiplicand,c
  4782  007232  EC2D  F033         	call	___wmul	;wreg free
  4783  007236  5001               	movf	?___wmul,w,c
  4784  007238  2437               	addwf	defuzzy@x,w,c
  4785  00723A  6ED9               	movwf	fsr2l,c
  4786  00723C  5002               	movf	?___wmul+1,w,c
  4787  00723E  2038               	addwfc	defuzzy@x+1,w,c
  4788  007240  6EDA               	movwf	fsr2h,c
  4789  007242  CFDE F00D          	movff	postinc2,___ftmul@f1
  4790  007246  CFDE F00E          	movff	postinc2,___ftmul@f1+1
  4791  00724A  CFDD F00F          	movff	postdec2,___ftmul@f1+2
  4792  00724E  EC69  F036         	call	___ftmul	;wreg free
  4793  007252  C00D  F01F         	movff	?___ftmul,___ftadd@f2
  4794  007256  C00E  F020         	movff	?___ftmul+1,___ftadd@f2+1
  4795  00725A  C00F  F021         	movff	?___ftmul+2,___ftadd@f2+2
  4796  00725E  EC88  F039         	call	___ftadd	;wreg free
  4797  007262  C01C  F03E         	movff	?___ftadd,defuzzy@sum1
  4798  007266  C01D  F03F         	movff	?___ftadd+1,defuzzy@sum1+1
  4799  00726A  C01E  F040         	movff	?___ftadd+2,defuzzy@sum1+2
  4800  00726E  4A44               	infsnz	defuzzy@i,f,c
  4801  007270  2A45               	incf	defuzzy@i+1,f,c
  4802  007272  D7B3               	goto	L12
  4803  007274                     l2361:
  4804                           
  4805                           ;fuzzy.c: 153: for(i=0;i<40; i++)
  4806  007274  0E00               	movlw	0
  4807  007276  6E45               	movwf	defuzzy@i+1,c
  4808  007278  0E00               	movlw	0
  4809  00727A  6E44               	movwf	defuzzy@i,c
  4810  00727C  5045               	movf	defuzzy@i+1,w,c
  4811  00727E  0A80               	xorlw	128
  4812  007280  0F80               	addlw	-128
  4813  007282  0E28               	movlw	40
  4814  007284  B4D8               	btfsc	status,2,c
  4815  007286  5C44               	subwf	defuzzy@i,w,c
  4816  007288  B0D8               	btfsc	status,0,c
  4817  00728A  D027               	goto	l2373
  4818                           
  4819                           ;fuzzy.c: 154: sum2+=mf[i];
  4820  00728C  C041  F01C         	movff	defuzzy@sum2,___ftadd@f1
  4821  007290  C042  F01D         	movff	defuzzy@sum2+1,___ftadd@f1+1
  4822  007294  C043  F01E         	movff	defuzzy@sum2+2,___ftadd@f1+2
  4823  007298  C044  F001         	movff	defuzzy@i,___wmul@multiplier
  4824  00729C  C045  F002         	movff	defuzzy@i+1,___wmul@multiplier+1
  4825  0072A0  0E00               	movlw	0
  4826  0072A2  6E04               	movwf	___wmul@multiplicand+1,c
  4827  0072A4  0E03               	movlw	3
  4828  0072A6  6E03               	movwf	___wmul@multiplicand,c
  4829  0072A8  EC2D  F033         	call	___wmul	;wreg free
  4830  0072AC  5001               	movf	?___wmul,w,c
  4831  0072AE  2439               	addwf	defuzzy@mf,w,c
  4832  0072B0  6ED9               	movwf	fsr2l,c
  4833  0072B2  5002               	movf	?___wmul+1,w,c
  4834  0072B4  203A               	addwfc	defuzzy@mf+1,w,c
  4835  0072B6  6EDA               	movwf	fsr2h,c
  4836  0072B8  CFDE F01F          	movff	postinc2,___ftadd@f2
  4837  0072BC  CFDE F020          	movff	postinc2,___ftadd@f2+1
  4838  0072C0  CFDD F021          	movff	postdec2,___ftadd@f2+2
  4839  0072C4  EC88  F039         	call	___ftadd	;wreg free
  4840  0072C8  C01C  F041         	movff	?___ftadd,defuzzy@sum2
  4841  0072CC  C01D  F042         	movff	?___ftadd+1,defuzzy@sum2+1
  4842  0072D0  C01E  F043         	movff	?___ftadd+2,defuzzy@sum2+2
  4843  0072D4  4A44               	infsnz	defuzzy@i,f,c
  4844  0072D6  2A45               	incf	defuzzy@i+1,f,c
  4845  0072D8  D7D1               	goto	L13
  4846  0072DA                     l2373:
  4847                           
  4848                           ;fuzzy.c: 155: out=sum1/sum2;
  4849  0072DA  C03E  F028         	movff	defuzzy@sum1,___ftdiv@f1
  4850  0072DE  C03F  F029         	movff	defuzzy@sum1+1,___ftdiv@f1+1
  4851  0072E2  C040  F02A         	movff	defuzzy@sum1+2,___ftdiv@f1+2
  4852  0072E6  C041  F02B         	movff	defuzzy@sum2,___ftdiv@f2
  4853  0072EA  C042  F02C         	movff	defuzzy@sum2+1,___ftdiv@f2+1
  4854  0072EE  C043  F02D         	movff	defuzzy@sum2+2,___ftdiv@f2+2
  4855  0072F2  ECFE  F035         	call	___ftdiv	;wreg free
  4856  0072F6  C028  F03B         	movff	?___ftdiv,defuzzy@out
  4857  0072FA  C029  F03C         	movff	?___ftdiv+1,defuzzy@out+1
  4858  0072FE  C02A  F03D         	movff	?___ftdiv+2,defuzzy@out+2
  4859                           
  4860                           ;fuzzy.c: 156: return out;
  4861  007302  C03B  F037         	movff	defuzzy@out,?_defuzzy
  4862  007306  C03C  F038         	movff	defuzzy@out+1,?_defuzzy+1
  4863  00730A  C03D  F039         	movff	defuzzy@out+2,?_defuzzy+2
  4864  00730E  0012               	return	
  4865  007310                     __end_of_defuzzy:
  4866                           	opt stack 0
  4867                           tblptru	equ	0xFF8
  4868                           tblptrh	equ	0xFF7
  4869                           tblptrl	equ	0xFF6
  4870                           tablat	equ	0xFF5
  4871                           prodl	equ	0xFF3
  4872                           wreg	equ	0xFE8
  4873                           postinc1	equ	0xFE6
  4874                           postdec1	equ	0xFE5
  4875                           fsr1h	equ	0xFE2
  4876                           fsr1l	equ	0xFE1
  4877                           postinc2	equ	0xFDE
  4878                           postdec2	equ	0xFDD
  4879                           fsr2h	equ	0xFDA
  4880                           fsr2l	equ	0xFD9
  4881                           status	equ	0xFD8
  4882                           
  4883 ;; *************** function ___wmul *****************
  4884 ;; Defined at:
  4885 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\Umul16.c"
  4886 ;; Parameters:    Size  Location     Type
  4887 ;;  multiplier      2    0[COMRAM] unsigned int 
  4888 ;;  multiplicand    2    2[COMRAM] unsigned int 
  4889 ;; Auto vars:     Size  Location     Type
  4890 ;;  product         2    4[COMRAM] unsigned int 
  4891 ;; Return value:  Size  Location     Type
  4892 ;;                  2    0[COMRAM] unsigned int 
  4893 ;; Registers used:
  4894 ;;		wreg, status,2, status,0, prodl, prodh
  4895 ;; Tracked objects:
  4896 ;;		On entry : 0/0
  4897 ;;		On exit  : 0/0
  4898 ;;		Unchanged: 0/0
  4899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4900 ;;      Params:         4       0       0       0       0       0       0       0       0
  4901 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4902 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4903 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4904 ;;Total ram usage:        6 bytes
  4905 ;; Hardware stack levels used:    1
  4906 ;; This function calls:
  4907 ;;		Nothing
  4908 ;; This function is called by:
  4909 ;;		_linspace
  4910 ;;		_tri_mf
  4911 ;;		_qualified
  4912 ;;		_out_mf
  4913 ;;		_defuzzy
  4914 ;;		_minimo
  4915 ;;		_maximo
  4916 ;;		_trap_mf
  4917 ;;		_fuzzy_system
  4918 ;; This function uses a non-reentrant model
  4919 ;;
  4920                           
  4921                           	psect	text27
  4922  00665A                     __ptext27:
  4923                           	opt stack 0
  4924  00665A                     ___wmul:
  4925                           	opt stack 28
  4926                           
  4927                           ;incstack = 0
  4928  00665A  5001               	movf	___wmul@multiplier,w,c
  4929  00665C  0203               	mulwf	___wmul@multiplicand,c
  4930  00665E  CFF3 F005          	movff	prodl,___wmul@product
  4931  006662  CFF4 F006          	movff	prodh,___wmul@product+1
  4932  006666  5001               	movf	___wmul@multiplier,w,c
  4933  006668  0204               	mulwf	___wmul@multiplicand+1,c
  4934  00666A  50F3               	movf	prodl,w,c
  4935  00666C  2606               	addwf	___wmul@product+1,f,c
  4936  00666E  5002               	movf	___wmul@multiplier+1,w,c
  4937  006670  0203               	mulwf	___wmul@multiplicand,c
  4938  006672  50F3               	movf	prodl,w,c
  4939  006674  2606               	addwf	___wmul@product+1,f,c
  4940  006676  C005  F001         	movff	___wmul@product,?___wmul
  4941  00667A  C006  F002         	movff	___wmul@product+1,?___wmul+1
  4942  00667E  0012               	return	
  4943  006680                     __end_of___wmul:
  4944                           	opt stack 0
  4945                           tblptru	equ	0xFF8
  4946                           tblptrh	equ	0xFF7
  4947                           tblptrl	equ	0xFF6
  4948                           tablat	equ	0xFF5
  4949                           prodh	equ	0xFF4
  4950                           prodl	equ	0xFF3
  4951                           wreg	equ	0xFE8
  4952                           postinc1	equ	0xFE6
  4953                           postdec1	equ	0xFE5
  4954                           fsr1h	equ	0xFE2
  4955                           fsr1l	equ	0xFE1
  4956                           postinc2	equ	0xFDE
  4957                           postdec2	equ	0xFDD
  4958                           fsr2h	equ	0xFDA
  4959                           fsr2l	equ	0xFD9
  4960                           status	equ	0xFD8
  4961                           
  4962 ;; *************** function ___ftmul *****************
  4963 ;; Defined at:
  4964 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\ftmul.c"
  4965 ;; Parameters:    Size  Location     Type
  4966 ;;  f1              3   12[COMRAM] float 
  4967 ;;  f2              3   15[COMRAM] float 
  4968 ;; Auto vars:     Size  Location     Type
  4969 ;;  f3_as_produc    3   22[COMRAM] unsigned um
  4970 ;;  sign            1   26[COMRAM] unsigned char 
  4971 ;;  cntr            1   25[COMRAM] unsigned char 
  4972 ;;  exp             1   21[COMRAM] unsigned char 
  4973 ;; Return value:  Size  Location     Type
  4974 ;;                  3   12[COMRAM] float 
  4975 ;; Registers used:
  4976 ;;		wreg, status,2, status,0, cstack
  4977 ;; Tracked objects:
  4978 ;;		On entry : 0/0
  4979 ;;		On exit  : 0/0
  4980 ;;		Unchanged: 0/0
  4981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4982 ;;      Params:         6       0       0       0       0       0       0       0       0
  4983 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4984 ;;      Temps:          3       0       0       0       0       0       0       0       0
  4985 ;;      Totals:        15       0       0       0       0       0       0       0       0
  4986 ;;Total ram usage:       15 bytes
  4987 ;; Hardware stack levels used:    1
  4988 ;; Hardware stack levels required when called:    1
  4989 ;; This function calls:
  4990 ;;		___ftpack
  4991 ;; This function is called by:
  4992 ;;		_linspace
  4993 ;;		_defuzzy
  4994 ;;		_PWM_DutyCycle1
  4995 ;;		_PWM_DutyCycle2
  4996 ;; This function uses a non-reentrant model
  4997 ;;
  4998                           
  4999                           	psect	text28
  5000  006CD2                     __ptext28:
  5001                           	opt stack 0
  5002  006CD2                     ___ftmul:
  5003                           	opt stack 27
  5004                           
  5005                           ;incstack = 0
  5006  006CD2  C00F  F013         	movff	___ftmul@f1+2,??___ftmul
  5007  006CD6  6A14               	clrf	(??___ftmul+1)& (0+255),c
  5008  006CD8  6A15               	clrf	(??___ftmul+2)& (0+255),c
  5009  006CDA  340E               	rlcf	___ftmul@f1+1,w,c
  5010  006CDC  3613               	rlcf	??___ftmul& (0+255),f,c
  5011  006CDE  E301               	bnc	u1981
  5012  006CE0  8014               	bsf	(??___ftmul+1)& (0+255),0,c
  5013  006CE2                     u1981:
  5014  006CE2  5013               	movf	??___ftmul,w,c
  5015  006CE4  6E16               	movwf	___ftmul@exp,c
  5016  006CE6  6616               	tstfsz	___ftmul@exp& (0+255),c
  5017  006CE8  D001               	goto	l2095
  5018  006CEA  D00C               	goto	u2010
  5019  006CEC                     l2095:
  5020  006CEC  C012  F013         	movff	___ftmul@f2+2,??___ftmul
  5021  006CF0  6A14               	clrf	(??___ftmul+1)& (0+255),c
  5022  006CF2  6A15               	clrf	(??___ftmul+2)& (0+255),c
  5023  006CF4  3411               	rlcf	___ftmul@f2+1,w,c
  5024  006CF6  3613               	rlcf	??___ftmul& (0+255),f,c
  5025  006CF8  E301               	bnc	u2001
  5026  006CFA  8014               	bsf	(??___ftmul+1)& (0+255),0,c
  5027  006CFC                     u2001:
  5028  006CFC  5013               	movf	??___ftmul,w,c
  5029  006CFE  6E1B               	movwf	___ftmul@sign,c
  5030  006D00  661B               	tstfsz	___ftmul@sign& (0+255),c
  5031  006D02  D007               	goto	l2101
  5032  006D04                     u2010:
  5033  006D04  0E00               	movlw	0
  5034  006D06  6E0D               	movwf	?___ftmul,c
  5035  006D08  0E00               	movlw	0
  5036  006D0A  6E0E               	movwf	?___ftmul+1,c
  5037  006D0C  0E00               	movlw	0
  5038  006D0E  6E0F               	movwf	?___ftmul+2,c
  5039  006D10  D051               	goto	l696
  5040  006D12                     l2101:
  5041  006D12  501B               	movf	___ftmul@sign,w,c
  5042  006D14  0F7B               	addlw	123
  5043  006D16  2616               	addwf	___ftmul@exp,f,c
  5044  006D18  C00F  F01B         	movff	___ftmul@f1+2,___ftmul@sign
  5045  006D1C  5012               	movf	___ftmul@f2+2,w,c
  5046  006D1E  1A1B               	xorwf	___ftmul@sign,f,c
  5047  006D20  0E80               	movlw	128
  5048  006D22  161B               	andwf	___ftmul@sign,f,c
  5049  006D24  8E0E               	bsf	___ftmul@f1+1,7,c
  5050  006D26  8E11               	bsf	___ftmul@f2+1,7,c
  5051  006D28  0EFF               	movlw	255
  5052  006D2A  1610               	andwf	___ftmul@f2,f,c
  5053  006D2C  0EFF               	movlw	255
  5054  006D2E  1611               	andwf	___ftmul@f2+1,f,c
  5055  006D30  0E00               	movlw	0
  5056  006D32  1612               	andwf	___ftmul@f2+2,f,c
  5057  006D34  0E00               	movlw	0
  5058  006D36  6E17               	movwf	___ftmul@f3_as_product,c
  5059  006D38  0E00               	movlw	0
  5060  006D3A  6E18               	movwf	___ftmul@f3_as_product+1,c
  5061  006D3C  0E00               	movlw	0
  5062  006D3E  6E19               	movwf	___ftmul@f3_as_product+2,c
  5063  006D40  0E07               	movlw	7
  5064  006D42  6E1A               	movwf	___ftmul@cntr,c
  5065  006D44                     l2115:
  5066  006D44  A00D               	btfss	___ftmul@f1,0,c
  5067  006D46  D006               	goto	l2119
  5068  006D48  5010               	movf	___ftmul@f2,w,c
  5069  006D4A  2617               	addwf	___ftmul@f3_as_product,f,c
  5070  006D4C  5011               	movf	___ftmul@f2+1,w,c
  5071  006D4E  2218               	addwfc	___ftmul@f3_as_product+1,f,c
  5072  006D50  5012               	movf	___ftmul@f2+2,w,c
  5073  006D52  2219               	addwfc	___ftmul@f3_as_product+2,f,c
  5074  006D54                     l2119:
  5075  006D54  90D8               	bcf	status,0,c
  5076  006D56  320F               	rrcf	___ftmul@f1+2,f,c
  5077  006D58  320E               	rrcf	___ftmul@f1+1,f,c
  5078  006D5A  320D               	rrcf	___ftmul@f1,f,c
  5079  006D5C  90D8               	bcf	status,0,c
  5080  006D5E  3610               	rlcf	___ftmul@f2,f,c
  5081  006D60  3611               	rlcf	___ftmul@f2+1,f,c
  5082  006D62  3612               	rlcf	___ftmul@f2+2,f,c
  5083  006D64  2E1A               	decfsz	___ftmul@cntr,f,c
  5084  006D66  D7EE               	goto	l2115
  5085  006D68  0E09               	movlw	9
  5086  006D6A  6E1A               	movwf	___ftmul@cntr,c
  5087  006D6C                     l2125:
  5088  006D6C  A00D               	btfss	___ftmul@f1,0,c
  5089  006D6E  D006               	goto	l2129
  5090  006D70  5010               	movf	___ftmul@f2,w,c
  5091  006D72  2617               	addwf	___ftmul@f3_as_product,f,c
  5092  006D74  5011               	movf	___ftmul@f2+1,w,c
  5093  006D76  2218               	addwfc	___ftmul@f3_as_product+1,f,c
  5094  006D78  5012               	movf	___ftmul@f2+2,w,c
  5095  006D7A  2219               	addwfc	___ftmul@f3_as_product+2,f,c
  5096  006D7C                     l2129:
  5097  006D7C  90D8               	bcf	status,0,c
  5098  006D7E  320F               	rrcf	___ftmul@f1+2,f,c
  5099  006D80  320E               	rrcf	___ftmul@f1+1,f,c
  5100  006D82  320D               	rrcf	___ftmul@f1,f,c
  5101  006D84  90D8               	bcf	status,0,c
  5102  006D86  3219               	rrcf	___ftmul@f3_as_product+2,f,c
  5103  006D88  3218               	rrcf	___ftmul@f3_as_product+1,f,c
  5104  006D8A  3217               	rrcf	___ftmul@f3_as_product,f,c
  5105  006D8C  2E1A               	decfsz	___ftmul@cntr,f,c
  5106  006D8E  D7EE               	goto	l2125
  5107  006D90  C017  F001         	movff	___ftmul@f3_as_product,___ftpack@arg
  5108  006D94  C018  F002         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  5109  006D98  C019  F003         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  5110  006D9C  C016  F004         	movff	___ftmul@exp,___ftpack@exp
  5111  006DA0  C01B  F005         	movff	___ftmul@sign,___ftpack@sign
  5112  006DA4  ECE4  F034         	call	___ftpack	;wreg free
  5113  006DA8  C001  F00D         	movff	?___ftpack,?___ftmul
  5114  006DAC  C002  F00E         	movff	?___ftpack+1,?___ftmul+1
  5115  006DB0  C003  F00F         	movff	?___ftpack+2,?___ftmul+2
  5116  006DB4                     l696:
  5117  006DB4  0012               	return	
  5118  006DB6                     __end_of___ftmul:
  5119                           	opt stack 0
  5120                           tblptru	equ	0xFF8
  5121                           tblptrh	equ	0xFF7
  5122                           tblptrl	equ	0xFF6
  5123                           tablat	equ	0xFF5
  5124                           prodh	equ	0xFF4
  5125                           prodl	equ	0xFF3
  5126                           wreg	equ	0xFE8
  5127                           postinc1	equ	0xFE6
  5128                           postdec1	equ	0xFE5
  5129                           fsr1h	equ	0xFE2
  5130                           fsr1l	equ	0xFE1
  5131                           postinc2	equ	0xFDE
  5132                           postdec2	equ	0xFDD
  5133                           fsr2h	equ	0xFDA
  5134                           fsr2l	equ	0xFD9
  5135                           status	equ	0xFD8
  5136                           
  5137 ;; *************** function ___ftdiv *****************
  5138 ;; Defined at:
  5139 ;;		line 49 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\ftdiv.c"
  5140 ;; Parameters:    Size  Location     Type
  5141 ;;  f1              3   39[COMRAM] float 
  5142 ;;  f2              3   42[COMRAM] float 
  5143 ;; Auto vars:     Size  Location     Type
  5144 ;;  f3              3   49[COMRAM] float 
  5145 ;;  sign            1   53[COMRAM] unsigned char 
  5146 ;;  exp             1   52[COMRAM] unsigned char 
  5147 ;;  cntr            1   48[COMRAM] unsigned char 
  5148 ;; Return value:  Size  Location     Type
  5149 ;;                  3   39[COMRAM] float 
  5150 ;; Registers used:
  5151 ;;		wreg, status,2, status,0, cstack
  5152 ;; Tracked objects:
  5153 ;;		On entry : 0/0
  5154 ;;		On exit  : 0/0
  5155 ;;		Unchanged: 0/0
  5156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5157 ;;      Params:         6       0       0       0       0       0       0       0       0
  5158 ;;      Locals:         6       0       0       0       0       0       0       0       0
  5159 ;;      Temps:          3       0       0       0       0       0       0       0       0
  5160 ;;      Totals:        15       0       0       0       0       0       0       0       0
  5161 ;;Total ram usage:       15 bytes
  5162 ;; Hardware stack levels used:    1
  5163 ;; Hardware stack levels required when called:    1
  5164 ;; This function calls:
  5165 ;;		___ftpack
  5166 ;; This function is called by:
  5167 ;;		_linspace
  5168 ;;		_triangular
  5169 ;;		_defuzzy
  5170 ;;		_trapezoidal
  5171 ;; This function uses a non-reentrant model
  5172 ;;
  5173                           
  5174                           	psect	text29
  5175  006BFC                     __ptext29:
  5176                           	opt stack 0
  5177  006BFC                     ___ftdiv:
  5178                           	opt stack 27
  5179                           
  5180                           ;incstack = 0
  5181  006BFC  C02A  F02E         	movff	___ftdiv@f1+2,??___ftdiv
  5182  006C00  6A2F               	clrf	(??___ftdiv+1)& (0+255),c
  5183  006C02  6A30               	clrf	(??___ftdiv+2)& (0+255),c
  5184  006C04  3429               	rlcf	___ftdiv@f1+1,w,c
  5185  006C06  362E               	rlcf	??___ftdiv& (0+255),f,c
  5186  006C08  E301               	bnc	u1791
  5187  006C0A  802F               	bsf	(??___ftdiv+1)& (0+255),0,c
  5188  006C0C                     u1791:
  5189  006C0C  502E               	movf	??___ftdiv,w,c
  5190  006C0E  6E35               	movwf	___ftdiv@exp,c
  5191  006C10  6635               	tstfsz	___ftdiv@exp& (0+255),c
  5192  006C12  D001               	goto	l1967
  5193  006C14  D00C               	goto	u1820
  5194  006C16                     l1967:
  5195  006C16  C02D  F02E         	movff	___ftdiv@f2+2,??___ftdiv
  5196  006C1A  6A2F               	clrf	(??___ftdiv+1)& (0+255),c
  5197  006C1C  6A30               	clrf	(??___ftdiv+2)& (0+255),c
  5198  006C1E  342C               	rlcf	___ftdiv@f2+1,w,c
  5199  006C20  362E               	rlcf	??___ftdiv& (0+255),f,c
  5200  006C22  E301               	bnc	u1811
  5201  006C24  802F               	bsf	(??___ftdiv+1)& (0+255),0,c
  5202  006C26                     u1811:
  5203  006C26  502E               	movf	??___ftdiv,w,c
  5204  006C28  6E36               	movwf	___ftdiv@sign,c
  5205  006C2A  6636               	tstfsz	___ftdiv@sign& (0+255),c
  5206  006C2C  D007               	goto	l1973
  5207  006C2E                     u1820:
  5208  006C2E  0E00               	movlw	0
  5209  006C30  6E28               	movwf	?___ftdiv,c
  5210  006C32  0E00               	movlw	0
  5211  006C34  6E29               	movwf	?___ftdiv+1,c
  5212  006C36  0E00               	movlw	0
  5213  006C38  6E2A               	movwf	?___ftdiv+2,c
  5214  006C3A  D04A               	goto	l681
  5215  006C3C                     l1973:
  5216  006C3C  0E00               	movlw	0
  5217  006C3E  6E32               	movwf	___ftdiv@f3,c
  5218  006C40  0E00               	movlw	0
  5219  006C42  6E33               	movwf	___ftdiv@f3+1,c
  5220  006C44  0E00               	movlw	0
  5221  006C46  6E34               	movwf	___ftdiv@f3+2,c
  5222  006C48  5036               	movf	___ftdiv@sign,w,c
  5223  006C4A  0F89               	addlw	137
  5224  006C4C  5E35               	subwf	___ftdiv@exp,f,c
  5225  006C4E  C02A  F036         	movff	___ftdiv@f1+2,___ftdiv@sign
  5226  006C52  502D               	movf	___ftdiv@f2+2,w,c
  5227  006C54  1A36               	xorwf	___ftdiv@sign,f,c
  5228  006C56  0E80               	movlw	128
  5229  006C58  1636               	andwf	___ftdiv@sign,f,c
  5230  006C5A  8E29               	bsf	___ftdiv@f1+1,7,c
  5231  006C5C  0EFF               	movlw	255
  5232  006C5E  1628               	andwf	___ftdiv@f1,f,c
  5233  006C60  0EFF               	movlw	255
  5234  006C62  1629               	andwf	___ftdiv@f1+1,f,c
  5235  006C64  0E00               	movlw	0
  5236  006C66  162A               	andwf	___ftdiv@f1+2,f,c
  5237  006C68  8E2C               	bsf	___ftdiv@f2+1,7,c
  5238  006C6A  0EFF               	movlw	255
  5239  006C6C  162B               	andwf	___ftdiv@f2,f,c
  5240  006C6E  0EFF               	movlw	255
  5241  006C70  162C               	andwf	___ftdiv@f2+1,f,c
  5242  006C72  0E00               	movlw	0
  5243  006C74  162D               	andwf	___ftdiv@f2+2,f,c
  5244  006C76  0E18               	movlw	24
  5245  006C78  6E31               	movwf	___ftdiv@cntr,c
  5246  006C7A                     l1993:
  5247  006C7A  90D8               	bcf	status,0,c
  5248  006C7C  3632               	rlcf	___ftdiv@f3,f,c
  5249  006C7E  3633               	rlcf	___ftdiv@f3+1,f,c
  5250  006C80  3634               	rlcf	___ftdiv@f3+2,f,c
  5251  006C82  502B               	movf	___ftdiv@f2,w,c
  5252  006C84  5C28               	subwf	___ftdiv@f1,w,c
  5253  006C86  502C               	movf	___ftdiv@f2+1,w,c
  5254  006C88  5829               	subwfb	___ftdiv@f1+1,w,c
  5255  006C8A  502D               	movf	___ftdiv@f2+2,w,c
  5256  006C8C  582A               	subwfb	___ftdiv@f1+2,w,c
  5257  006C8E  A0D8               	btfss	status,0,c
  5258  006C90  D007               	goto	l684
  5259  006C92  502B               	movf	___ftdiv@f2,w,c
  5260  006C94  5E28               	subwf	___ftdiv@f1,f,c
  5261  006C96  502C               	movf	___ftdiv@f2+1,w,c
  5262  006C98  5A29               	subwfb	___ftdiv@f1+1,f,c
  5263  006C9A  502D               	movf	___ftdiv@f2+2,w,c
  5264  006C9C  5A2A               	subwfb	___ftdiv@f1+2,f,c
  5265  006C9E  8032               	bsf	___ftdiv@f3,0,c
  5266  006CA0                     l684:
  5267  006CA0  90D8               	bcf	status,0,c
  5268  006CA2  3628               	rlcf	___ftdiv@f1,f,c
  5269  006CA4  3629               	rlcf	___ftdiv@f1+1,f,c
  5270  006CA6  362A               	rlcf	___ftdiv@f1+2,f,c
  5271  006CA8  2E31               	decfsz	___ftdiv@cntr,f,c
  5272  006CAA  D7E7               	goto	l1993
  5273  006CAC  C032  F001         	movff	___ftdiv@f3,___ftpack@arg
  5274  006CB0  C033  F002         	movff	___ftdiv@f3+1,___ftpack@arg+1
  5275  006CB4  C034  F003         	movff	___ftdiv@f3+2,___ftpack@arg+2
  5276  006CB8  C035  F004         	movff	___ftdiv@exp,___ftpack@exp
  5277  006CBC  C036  F005         	movff	___ftdiv@sign,___ftpack@sign
  5278  006CC0  ECE4  F034         	call	___ftpack	;wreg free
  5279  006CC4  C001  F028         	movff	?___ftpack,?___ftdiv
  5280  006CC8  C002  F029         	movff	?___ftpack+1,?___ftdiv+1
  5281  006CCC  C003  F02A         	movff	?___ftpack+2,?___ftdiv+2
  5282  006CD0                     l681:
  5283  006CD0  0012               	return	
  5284  006CD2                     __end_of___ftdiv:
  5285                           	opt stack 0
  5286                           tblptru	equ	0xFF8
  5287                           tblptrh	equ	0xFF7
  5288                           tblptrl	equ	0xFF6
  5289                           tablat	equ	0xFF5
  5290                           prodh	equ	0xFF4
  5291                           prodl	equ	0xFF3
  5292                           wreg	equ	0xFE8
  5293                           postinc1	equ	0xFE6
  5294                           postdec1	equ	0xFE5
  5295                           fsr1h	equ	0xFE2
  5296                           fsr1l	equ	0xFE1
  5297                           postinc2	equ	0xFDE
  5298                           postdec2	equ	0xFDD
  5299                           fsr2h	equ	0xFDA
  5300                           fsr2l	equ	0xFD9
  5301                           status	equ	0xFD8
  5302                           
  5303 ;; *************** function ___ftadd *****************
  5304 ;; Defined at:
  5305 ;;		line 86 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\ftadd.c"
  5306 ;; Parameters:    Size  Location     Type
  5307 ;;  f1              3   27[COMRAM] float 
  5308 ;;  f2              3   30[COMRAM] float 
  5309 ;; Auto vars:     Size  Location     Type
  5310 ;;  exp1            1   38[COMRAM] unsigned char 
  5311 ;;  exp2            1   37[COMRAM] unsigned char 
  5312 ;;  sign            1   36[COMRAM] unsigned char 
  5313 ;; Return value:  Size  Location     Type
  5314 ;;                  3   27[COMRAM] float 
  5315 ;; Registers used:
  5316 ;;		wreg, status,2, status,0, cstack
  5317 ;; Tracked objects:
  5318 ;;		On entry : 0/0
  5319 ;;		On exit  : 0/0
  5320 ;;		Unchanged: 0/0
  5321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5322 ;;      Params:         6       0       0       0       0       0       0       0       0
  5323 ;;      Locals:         3       0       0       0       0       0       0       0       0
  5324 ;;      Temps:          3       0       0       0       0       0       0       0       0
  5325 ;;      Totals:        12       0       0       0       0       0       0       0       0
  5326 ;;Total ram usage:       12 bytes
  5327 ;; Hardware stack levels used:    1
  5328 ;; Hardware stack levels required when called:    1
  5329 ;; This function calls:
  5330 ;;		___ftpack
  5331 ;; This function is called by:
  5332 ;;		_linspace
  5333 ;;		_triangular
  5334 ;;		_defuzzy
  5335 ;;		_trapezoidal
  5336 ;; This function uses a non-reentrant model
  5337 ;;
  5338                           
  5339                           	psect	text30
  5340  007310                     __ptext30:
  5341                           	opt stack 0
  5342  007310                     ___ftadd:
  5343                           	opt stack 27
  5344                           
  5345                           ;incstack = 0
  5346  007310  C01E  F022         	movff	___ftadd@f1+2,??___ftadd
  5347  007314  6A23               	clrf	(??___ftadd+1)& (0+255),c
  5348  007316  6A24               	clrf	(??___ftadd+2)& (0+255),c
  5349  007318  341D               	rlcf	___ftadd@f1+1,w,c
  5350  00731A  3622               	rlcf	??___ftadd& (0+255),f,c
  5351  00731C  E301               	bnc	u1581
  5352  00731E  8023               	bsf	(??___ftadd+1)& (0+255),0,c
  5353  007320                     u1581:
  5354  007320  5022               	movf	??___ftadd,w,c
  5355  007322  6E27               	movwf	___ftadd@exp1,c
  5356  007324  C021  F022         	movff	___ftadd@f2+2,??___ftadd
  5357  007328  6A23               	clrf	(??___ftadd+1)& (0+255),c
  5358  00732A  6A24               	clrf	(??___ftadd+2)& (0+255),c
  5359  00732C  3420               	rlcf	___ftadd@f2+1,w,c
  5360  00732E  3622               	rlcf	??___ftadd& (0+255),f,c
  5361  007330  E301               	bnc	u1591
  5362  007332  8023               	bsf	(??___ftadd+1)& (0+255),0,c
  5363  007334                     u1591:
  5364  007334  5022               	movf	??___ftadd,w,c
  5365  007336  6E26               	movwf	___ftadd@exp2,c
  5366  007338  5027               	movf	___ftadd@exp1,w,c
  5367  00733A  B4D8               	btfsc	status,2,c
  5368  00733C  D00C               	goto	l649
  5369  00733E  5026               	movf	___ftadd@exp2,w,c
  5370  007340  5C27               	subwf	___ftadd@exp1,w,c
  5371  007342  B0D8               	btfsc	status,0,c
  5372  007344  D00F               	goto	l1899
  5373  007346  5027               	movf	___ftadd@exp1,w,c
  5374  007348  0800               	sublw	0
  5375  00734A  2426               	addwf	___ftadd@exp2,w,c
  5376  00734C  6E22               	movwf	??___ftadd& (0+255),c
  5377  00734E  0E19               	movlw	25
  5378  007350  5C22               	subwf	??___ftadd,w,c
  5379  007352  A0D8               	btfss	status,0,c
  5380  007354  D007               	goto	l1899
  5381  007356                     l649:
  5382  007356  C01F  F01C         	movff	___ftadd@f2,?___ftadd
  5383  00735A  C020  F01D         	movff	___ftadd@f2+1,?___ftadd+1
  5384  00735E  C021  F01E         	movff	___ftadd@f2+2,?___ftadd+2
  5385  007362  D0AB               	goto	l650
  5386  007364                     l1899:
  5387  007364  5026               	movf	___ftadd@exp2,w,c
  5388  007366  B4D8               	btfsc	status,2,c
  5389  007368  D00C               	goto	l653
  5390  00736A  5027               	movf	___ftadd@exp1,w,c
  5391  00736C  5C26               	subwf	___ftadd@exp2,w,c
  5392  00736E  B0D8               	btfsc	status,0,c
  5393  007370  D00F               	goto	l1905
  5394  007372  5026               	movf	___ftadd@exp2,w,c
  5395  007374  0800               	sublw	0
  5396  007376  2427               	addwf	___ftadd@exp1,w,c
  5397  007378  6E22               	movwf	??___ftadd& (0+255),c
  5398  00737A  0E19               	movlw	25
  5399  00737C  5C22               	subwf	??___ftadd,w,c
  5400  00737E  A0D8               	btfss	status,0,c
  5401  007380  D007               	goto	l1905
  5402  007382                     l653:
  5403  007382  C01C  F01C         	movff	___ftadd@f1,?___ftadd
  5404  007386  C01D  F01D         	movff	___ftadd@f1+1,?___ftadd+1
  5405  00738A  C01E  F01E         	movff	___ftadd@f1+2,?___ftadd+2
  5406  00738E  D095               	goto	l650
  5407  007390                     l1905:
  5408  007390  0E06               	movlw	6
  5409  007392  6E25               	movwf	___ftadd@sign,c
  5410  007394  BE1E               	btfsc	___ftadd@f1+2,7,c
  5411  007396  8E25               	bsf	___ftadd@sign,7,c
  5412  007398  BE21               	btfsc	___ftadd@f2+2,7,c
  5413  00739A  8C25               	bsf	___ftadd@sign,6,c
  5414  00739C  8E1D               	bsf	___ftadd@f1+1,7,c
  5415  00739E  0EFF               	movlw	255
  5416  0073A0  161C               	andwf	___ftadd@f1,f,c
  5417  0073A2  0EFF               	movlw	255
  5418  0073A4  161D               	andwf	___ftadd@f1+1,f,c
  5419  0073A6  0E00               	movlw	0
  5420  0073A8  161E               	andwf	___ftadd@f1+2,f,c
  5421  0073AA  8E20               	bsf	___ftadd@f2+1,7,c
  5422  0073AC  0EFF               	movlw	255
  5423  0073AE  161F               	andwf	___ftadd@f2,f,c
  5424  0073B0  0EFF               	movlw	255
  5425  0073B2  1620               	andwf	___ftadd@f2+1,f,c
  5426  0073B4  0E00               	movlw	0
  5427  0073B6  1621               	andwf	___ftadd@f2+2,f,c
  5428  0073B8  5026               	movf	___ftadd@exp2,w,c
  5429  0073BA  5C27               	subwf	___ftadd@exp1,w,c
  5430  0073BC  B0D8               	btfsc	status,0,c
  5431  0073BE  D01A               	goto	l1931
  5432  0073C0                     l1921:
  5433  0073C0  90D8               	bcf	status,0,c
  5434  0073C2  361F               	rlcf	___ftadd@f2,f,c
  5435  0073C4  3620               	rlcf	___ftadd@f2+1,f,c
  5436  0073C6  3621               	rlcf	___ftadd@f2+2,f,c
  5437  0073C8  0626               	decf	___ftadd@exp2,f,c
  5438  0073CA  5026               	movf	___ftadd@exp2,w,c
  5439  0073CC  1827               	xorwf	___ftadd@exp1,w,c
  5440  0073CE  B4D8               	btfsc	status,2,c
  5441  0073D0  D00D               	goto	l1929
  5442  0073D2  0625               	decf	___ftadd@sign,f,c
  5443  0073D4  C025  F022         	movff	___ftadd@sign,??___ftadd
  5444  0073D8  0E07               	movlw	7
  5445  0073DA  1622               	andwf	??___ftadd,f,c
  5446  0073DC  B4D8               	btfsc	status,2,c
  5447  0073DE  D006               	goto	l1929
  5448  0073E0  D7EF               	goto	l1921
  5449  0073E2                     l1927:
  5450  0073E2  90D8               	bcf	status,0,c
  5451  0073E4  321E               	rrcf	___ftadd@f1+2,f,c
  5452  0073E6  321D               	rrcf	___ftadd@f1+1,f,c
  5453  0073E8  321C               	rrcf	___ftadd@f1,f,c
  5454  0073EA  2A27               	incf	___ftadd@exp1,f,c
  5455  0073EC                     l1929:
  5456  0073EC  5026               	movf	___ftadd@exp2,w,c
  5457  0073EE  6227               	cpfseq	___ftadd@exp1,c
  5458  0073F0  D7F8               	goto	l1927
  5459  0073F2  D01D               	goto	l664
  5460  0073F4                     l1931:
  5461  0073F4  5027               	movf	___ftadd@exp1,w,c
  5462  0073F6  5C26               	subwf	___ftadd@exp2,w,c
  5463  0073F8  B0D8               	btfsc	status,0,c
  5464  0073FA  D019               	goto	l664
  5465  0073FC                     l1933:
  5466  0073FC  90D8               	bcf	status,0,c
  5467  0073FE  361C               	rlcf	___ftadd@f1,f,c
  5468  007400  361D               	rlcf	___ftadd@f1+1,f,c
  5469  007402  361E               	rlcf	___ftadd@f1+2,f,c
  5470  007404  0627               	decf	___ftadd@exp1,f,c
  5471  007406  5026               	movf	___ftadd@exp2,w,c
  5472  007408  1827               	xorwf	___ftadd@exp1,w,c
  5473  00740A  B4D8               	btfsc	status,2,c
  5474  00740C  D00D               	goto	l1941
  5475  00740E  0625               	decf	___ftadd@sign,f,c
  5476  007410  C025  F022         	movff	___ftadd@sign,??___ftadd
  5477  007414  0E07               	movlw	7
  5478  007416  1622               	andwf	??___ftadd,f,c
  5479  007418  B4D8               	btfsc	status,2,c
  5480  00741A  D006               	goto	l1941
  5481  00741C  D7EF               	goto	l1933
  5482  00741E                     l1939:
  5483  00741E  90D8               	bcf	status,0,c
  5484  007420  3221               	rrcf	___ftadd@f2+2,f,c
  5485  007422  3220               	rrcf	___ftadd@f2+1,f,c
  5486  007424  321F               	rrcf	___ftadd@f2,f,c
  5487  007426  2A26               	incf	___ftadd@exp2,f,c
  5488  007428                     l1941:
  5489  007428  5026               	movf	___ftadd@exp2,w,c
  5490  00742A  6227               	cpfseq	___ftadd@exp1,c
  5491  00742C  D7F8               	goto	l1939
  5492  00742E                     l664:
  5493  00742E  AE25               	btfss	___ftadd@sign,7,c
  5494  007430  D00C               	goto	l673
  5495  007432  0EFF               	movlw	255
  5496  007434  1A1C               	xorwf	___ftadd@f1,f,c
  5497  007436  0EFF               	movlw	255
  5498  007438  1A1D               	xorwf	___ftadd@f1+1,f,c
  5499  00743A  0EFF               	movlw	255
  5500  00743C  1A1E               	xorwf	___ftadd@f1+2,f,c
  5501  00743E  0E01               	movlw	1
  5502  007440  261C               	addwf	___ftadd@f1,f,c
  5503  007442  0E00               	movlw	0
  5504  007444  221D               	addwfc	___ftadd@f1+1,f,c
  5505  007446  0E00               	movlw	0
  5506  007448  221E               	addwfc	___ftadd@f1+2,f,c
  5507  00744A                     l673:
  5508  00744A  AC25               	btfss	___ftadd@sign,6,c
  5509  00744C  D00C               	goto	l1947
  5510  00744E  0EFF               	movlw	255
  5511  007450  1A1F               	xorwf	___ftadd@f2,f,c
  5512  007452  0EFF               	movlw	255
  5513  007454  1A20               	xorwf	___ftadd@f2+1,f,c
  5514  007456  0EFF               	movlw	255
  5515  007458  1A21               	xorwf	___ftadd@f2+2,f,c
  5516  00745A  0E01               	movlw	1
  5517  00745C  261F               	addwf	___ftadd@f2,f,c
  5518  00745E  0E00               	movlw	0
  5519  007460  2220               	addwfc	___ftadd@f2+1,f,c
  5520  007462  0E00               	movlw	0
  5521  007464  2221               	addwfc	___ftadd@f2+2,f,c
  5522  007466                     l1947:
  5523  007466  0E00               	movlw	0
  5524  007468  6E25               	movwf	___ftadd@sign,c
  5525  00746A  501C               	movf	___ftadd@f1,w,c
  5526  00746C  261F               	addwf	___ftadd@f2,f,c
  5527  00746E  501D               	movf	___ftadd@f1+1,w,c
  5528  007470  2220               	addwfc	___ftadd@f2+1,f,c
  5529  007472  501E               	movf	___ftadd@f1+2,w,c
  5530  007474  2221               	addwfc	___ftadd@f2+2,f,c
  5531  007476  AE21               	btfss	___ftadd@f2+2,7,c
  5532  007478  D00E               	goto	l1957
  5533  00747A  0EFF               	movlw	255
  5534  00747C  1A1F               	xorwf	___ftadd@f2,f,c
  5535  00747E  0EFF               	movlw	255
  5536  007480  1A20               	xorwf	___ftadd@f2+1,f,c
  5537  007482  0EFF               	movlw	255
  5538  007484  1A21               	xorwf	___ftadd@f2+2,f,c
  5539  007486  0E01               	movlw	1
  5540  007488  261F               	addwf	___ftadd@f2,f,c
  5541  00748A  0E00               	movlw	0
  5542  00748C  2220               	addwfc	___ftadd@f2+1,f,c
  5543  00748E  0E00               	movlw	0
  5544  007490  2221               	addwfc	___ftadd@f2+2,f,c
  5545  007492  0E01               	movlw	1
  5546  007494  6E25               	movwf	___ftadd@sign,c
  5547  007496                     l1957:
  5548  007496  C01F  F001         	movff	___ftadd@f2,___ftpack@arg
  5549  00749A  C020  F002         	movff	___ftadd@f2+1,___ftpack@arg+1
  5550  00749E  C021  F003         	movff	___ftadd@f2+2,___ftpack@arg+2
  5551  0074A2  C027  F004         	movff	___ftadd@exp1,___ftpack@exp
  5552  0074A6  C025  F005         	movff	___ftadd@sign,___ftpack@sign
  5553  0074AA  ECE4  F034         	call	___ftpack	;wreg free
  5554  0074AE  C001  F01C         	movff	?___ftpack,?___ftadd
  5555  0074B2  C002  F01D         	movff	?___ftpack+1,?___ftadd+1
  5556  0074B6  C003  F01E         	movff	?___ftpack+2,?___ftadd+2
  5557  0074BA                     l650:
  5558  0074BA  0012               	return	
  5559  0074BC                     __end_of___ftadd:
  5560                           	opt stack 0
  5561                           tblptru	equ	0xFF8
  5562                           tblptrh	equ	0xFF7
  5563                           tblptrl	equ	0xFF6
  5564                           tablat	equ	0xFF5
  5565                           prodh	equ	0xFF4
  5566                           prodl	equ	0xFF3
  5567                           wreg	equ	0xFE8
  5568                           postinc1	equ	0xFE6
  5569                           postdec1	equ	0xFE5
  5570                           fsr1h	equ	0xFE2
  5571                           fsr1l	equ	0xFE1
  5572                           postinc2	equ	0xFDE
  5573                           postdec2	equ	0xFDD
  5574                           fsr2h	equ	0xFDA
  5575                           fsr2l	equ	0xFD9
  5576                           status	equ	0xFD8
  5577                           
  5578 ;; *************** function ___ftpack *****************
  5579 ;; Defined at:
  5580 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\float.c"
  5581 ;; Parameters:    Size  Location     Type
  5582 ;;  arg             3    0[COMRAM] unsigned um
  5583 ;;  exp             1    3[COMRAM] unsigned char 
  5584 ;;  sign            1    4[COMRAM] unsigned char 
  5585 ;; Auto vars:     Size  Location     Type
  5586 ;;		None
  5587 ;; Return value:  Size  Location     Type
  5588 ;;                  3    0[COMRAM] float 
  5589 ;; Registers used:
  5590 ;;		wreg, status,2, status,0
  5591 ;; Tracked objects:
  5592 ;;		On entry : 0/0
  5593 ;;		On exit  : 0/0
  5594 ;;		Unchanged: 0/0
  5595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5596 ;;      Params:         5       0       0       0       0       0       0       0       0
  5597 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5598 ;;      Temps:          3       0       0       0       0       0       0       0       0
  5599 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5600 ;;Total ram usage:        8 bytes
  5601 ;; Hardware stack levels used:    1
  5602 ;; This function calls:
  5603 ;;		Nothing
  5604 ;; This function is called by:
  5605 ;;		___awtoft
  5606 ;;		___ftadd
  5607 ;;		___ftdiv
  5608 ;;		___ftmul
  5609 ;;		___lbtoft
  5610 ;; This function uses a non-reentrant model
  5611 ;;
  5612                           
  5613                           	psect	text31
  5614  0069C8                     __ptext31:
  5615                           	opt stack 0
  5616  0069C8                     ___ftpack:
  5617                           	opt stack 27
  5618                           
  5619                           ;incstack = 0
  5620  0069C8  5004               	movf	___ftpack@exp,w,c
  5621  0069CA  B4D8               	btfsc	status,2,c
  5622  0069CC  D005               	goto	l1861
  5623  0069CE  5001               	movf	___ftpack@arg,w,c
  5624  0069D0  1002               	iorwf	___ftpack@arg+1,w,c
  5625  0069D2  1003               	iorwf	___ftpack@arg+2,w,c
  5626  0069D4  A4D8               	btfss	status,2,c
  5627  0069D6  D00C               	goto	l1867
  5628  0069D8                     l1861:
  5629  0069D8  0E00               	movlw	0
  5630  0069DA  6E01               	movwf	?___ftpack,c
  5631  0069DC  0E00               	movlw	0
  5632  0069DE  6E02               	movwf	?___ftpack+1,c
  5633  0069E0  0E00               	movlw	0
  5634  0069E2  6E03               	movwf	?___ftpack+2,c
  5635  0069E4  D044               	goto	l612
  5636  0069E6                     l1865:
  5637  0069E6  2A04               	incf	___ftpack@exp,f,c
  5638  0069E8  90D8               	bcf	status,0,c
  5639  0069EA  3203               	rrcf	___ftpack@arg+2,f,c
  5640  0069EC  3202               	rrcf	___ftpack@arg+1,f,c
  5641  0069EE  3201               	rrcf	___ftpack@arg,f,c
  5642  0069F0                     l1867:
  5643  0069F0  0E00               	movlw	0
  5644  0069F2  1401               	andwf	___ftpack@arg,w,c
  5645  0069F4  6E06               	movwf	??___ftpack& (0+255),c
  5646  0069F6  0E00               	movlw	0
  5647  0069F8  1402               	andwf	___ftpack@arg+1,w,c
  5648  0069FA  6E07               	movwf	(??___ftpack+1)& (0+255),c
  5649  0069FC  0EFE               	movlw	254
  5650  0069FE  1403               	andwf	___ftpack@arg+2,w,c
  5651  006A00  6E08               	movwf	(??___ftpack+2)& (0+255),c
  5652  006A02  5006               	movf	??___ftpack,w,c
  5653  006A04  1007               	iorwf	??___ftpack+1,w,c
  5654  006A06  1008               	iorwf	??___ftpack+2,w,c
  5655  006A08  B4D8               	btfsc	status,2,c
  5656  006A0A  D00C               	goto	l1873
  5657  006A0C  D7EC               	goto	l1865
  5658  006A0E                     l1869:
  5659  006A0E  2A04               	incf	___ftpack@exp,f,c
  5660  006A10  0E01               	movlw	1
  5661  006A12  2601               	addwf	___ftpack@arg,f,c
  5662  006A14  0E00               	movlw	0
  5663  006A16  2202               	addwfc	___ftpack@arg+1,f,c
  5664  006A18  0E00               	movlw	0
  5665  006A1A  2203               	addwfc	___ftpack@arg+2,f,c
  5666  006A1C  90D8               	bcf	status,0,c
  5667  006A1E  3203               	rrcf	___ftpack@arg+2,f,c
  5668  006A20  3202               	rrcf	___ftpack@arg+1,f,c
  5669  006A22  3201               	rrcf	___ftpack@arg,f,c
  5670  006A24                     l1873:
  5671  006A24  0E00               	movlw	0
  5672  006A26  1401               	andwf	___ftpack@arg,w,c
  5673  006A28  6E06               	movwf	??___ftpack& (0+255),c
  5674  006A2A  0E00               	movlw	0
  5675  006A2C  1402               	andwf	___ftpack@arg+1,w,c
  5676  006A2E  6E07               	movwf	(??___ftpack+1)& (0+255),c
  5677  006A30  0EFF               	movlw	255
  5678  006A32  1403               	andwf	___ftpack@arg+2,w,c
  5679  006A34  6E08               	movwf	(??___ftpack+2)& (0+255),c
  5680  006A36  5006               	movf	??___ftpack,w,c
  5681  006A38  1007               	iorwf	??___ftpack+1,w,c
  5682  006A3A  1008               	iorwf	??___ftpack+2,w,c
  5683  006A3C  B4D8               	btfsc	status,2,c
  5684  006A3E  D006               	goto	l1877
  5685  006A40  D7E6               	goto	l1869
  5686  006A42                     l1875:
  5687  006A42  0604               	decf	___ftpack@exp,f,c
  5688  006A44  90D8               	bcf	status,0,c
  5689  006A46  3601               	rlcf	___ftpack@arg,f,c
  5690  006A48  3602               	rlcf	___ftpack@arg+1,f,c
  5691  006A4A  3603               	rlcf	___ftpack@arg+2,f,c
  5692  006A4C                     l1877:
  5693  006A4C  AE02               	btfss	___ftpack@arg+1,7,c
  5694  006A4E  D7F9               	goto	l1875
  5695  006A50  A004               	btfss	___ftpack@exp,0,c
  5696  006A52  9E02               	bcf	___ftpack@arg+1,7,c
  5697  006A54  90D8               	bcf	status,0,c
  5698  006A56  3204               	rrcf	___ftpack@exp,f,c
  5699  006A58  5004               	movf	___ftpack@exp,w,c
  5700  006A5A  1203               	iorwf	___ftpack@arg+2,f,c
  5701  006A5C  5005               	movf	___ftpack@sign,w,c
  5702  006A5E  A4D8               	btfss	status,2,c
  5703  006A60  8E03               	bsf	___ftpack@arg+2,7,c
  5704  006A62  C001  F001         	movff	___ftpack@arg,?___ftpack
  5705  006A66  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  5706  006A6A  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  5707  006A6E                     l612:
  5708  006A6E  0012               	return	
  5709  006A70                     __end_of___ftpack:
  5710                           	opt stack 0
  5711  0000                     tblptru	equ	0xFF8
  5712                           tblptrh	equ	0xFF7
  5713                           tblptrl	equ	0xFF6
  5714                           tablat	equ	0xFF5
  5715                           prodh	equ	0xFF4
  5716                           prodl	equ	0xFF3
  5717                           wreg	equ	0xFE8
  5718                           postinc1	equ	0xFE6
  5719                           postdec1	equ	0xFE5
  5720                           fsr1h	equ	0xFE2
  5721                           fsr1l	equ	0xFE1
  5722                           postinc2	equ	0xFDE
  5723                           postdec2	equ	0xFDD
  5724                           fsr2h	equ	0xFDA
  5725                           fsr2l	equ	0xFD9
  5726                           status	equ	0xFD8
  5727                           tblptru	equ	0xFF8
  5728                           tblptrh	equ	0xFF7
  5729                           tblptrl	equ	0xFF6
  5730                           tablat	equ	0xFF5
  5731                           prodh	equ	0xFF4
  5732                           prodl	equ	0xFF3
  5733                           wreg	equ	0xFE8
  5734                           postinc1	equ	0xFE6
  5735                           postdec1	equ	0xFE5
  5736                           fsr1h	equ	0xFE2
  5737                           fsr1l	equ	0xFE1
  5738                           postinc2	equ	0xFDE
  5739                           postdec2	equ	0xFDD
  5740                           fsr2h	equ	0xFDA
  5741                           fsr2l	equ	0xFD9
  5742                           status	equ	0xFD8
  5743                           
  5744                           	psect	rparam
  5745  0000                     tblptru	equ	0xFF8
  5746                           tblptrh	equ	0xFF7
  5747                           tblptrl	equ	0xFF6
  5748                           tablat	equ	0xFF5
  5749                           prodh	equ	0xFF4
  5750                           prodl	equ	0xFF3
  5751                           wreg	equ	0xFE8
  5752                           postinc1	equ	0xFE6
  5753                           postdec1	equ	0xFE5
  5754                           fsr1h	equ	0xFE2
  5755                           fsr1l	equ	0xFE1
  5756                           postinc2	equ	0xFDE
  5757                           postdec2	equ	0xFDD
  5758                           fsr2h	equ	0xFDA
  5759                           fsr2l	equ	0xFD9
  5760                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     94      95
    BANK0           160    143     149
    BANK1           256    240     240
    BANK2           256    240     240
    BANK3           256    240     240
    BANK4           256    240     240
    BANK5           256    240     240
    BANK6           256    240     240
    BANK7           256      0       0

Pointer List with Targets:

    defuzzy@mf	PTR  size(2) Largest target is 120
		 -> fuzzy_system_single1@overall_out_mf(BANK5[120]), fuzzy_system_single2@overall_out_mf(BANK5[120]), fuzzy_system_single@overall_out_mf(BANK0[120]), fuzzy_system@overall_out_mf(BANK0[120]), 

    defuzzy@x	PTR  size(2) Largest target is 120
		 -> fuzzy_system_single1@y(BANK6[120]), fuzzy_system_single2@y(BANK6[120]), fuzzy_system_single@y(BANK0[120]), fuzzy_system@y(BANK0[120]), 

    out_mf@result	PTR  size(2) Largest target is 120
		 -> fuzzy_system_single1@overall_out_mf(BANK5[120]), fuzzy_system_single2@overall_out_mf(BANK5[120]), fuzzy_system_single@overall_out_mf(BANK0[120]), fuzzy_system@overall_out_mf(BANK0[120]), 

    out_mf@z	PTR  size(2) Largest target is 120
		 -> fuzzy_system_single1@qualified_cons_mf3(BANK4[120]), fuzzy_system_single2@qualified_cons_mf3(BANK4[120]), fuzzy_system_single@qualified_cons_mf3(BANK0[120]), fuzzy_system@qualified_cons_mf3(BANK0[120]), 

    out_mf@y	PTR  size(2) Largest target is 120
		 -> fuzzy_system_single1@qualified_cons_mf2(BANK4[120]), fuzzy_system_single2@qualified_cons_mf2(BANK4[120]), fuzzy_system_single@qualified_cons_mf2(BANK0[120]), fuzzy_system@qualified_cons_mf2(BANK0[120]), 

    out_mf@x	PTR  size(2) Largest target is 120
		 -> fuzzy_system_single1@qualified_cons_mf1(BANK3[120]), fuzzy_system_single2@qualified_cons_mf1(BANK3[120]), fuzzy_system_single@qualified_cons_mf1(BANK0[120]), fuzzy_system@qualified_cons_mf1(BANK0[120]), 

    qualified@y	PTR  size(2) Largest target is 120
		 -> fuzzy_system_single1@qualified_cons_mf3(BANK4[120]), fuzzy_system_single1@qualified_cons_mf2(BANK4[120]), fuzzy_system_single1@qualified_cons_mf1(BANK3[120]), fuzzy_system_single2@qualified_cons_mf3(BANK4[120]), 
		 -> fuzzy_system_single2@qualified_cons_mf2(BANK4[120]), fuzzy_system_single2@qualified_cons_mf1(BANK3[120]), fuzzy_system_single@qualified_cons_mf3(BANK0[120]), fuzzy_system_single@qualified_cons_mf2(BANK0[120]), 
		 -> fuzzy_system_single@qualified_cons_mf1(BANK0[120]), fuzzy_system@qualified_cons_mf3(BANK0[120]), fuzzy_system@qualified_cons_mf2(BANK0[120]), fuzzy_system@qualified_cons_mf1(BANK0[120]), 

    qualified@x	PTR  size(2) Largest target is 120
		 -> fuzzy_system_single1@cons_mf3(BANK5[120]), fuzzy_system_single1@cons_mf1(BANK3[120]), fuzzy_system_single2@cons_mf3(BANK5[120]), fuzzy_system_single2@cons_mf1(BANK3[120]), 
		 -> fuzzy_system_single@cons_mf3(BANK0[120]), fuzzy_system_single@cons_mf2(BANK0[120]), fuzzy_system_single@cons_mf1(BANK0[120]), fuzzy_system@cons_mf3(BANK0[120]), 
		 -> fuzzy_system@cons_mf2(BANK0[120]), fuzzy_system@cons_mf1(BANK0[120]), 

    tri_mf@t_value	PTR  size(2) Largest target is 120
		 -> fuzzy_system_single1@cons_mf3(BANK5[120]), fuzzy_system_single1@cons_mf2(BANK2[120]), fuzzy_system_single1@cons_mf1(BANK3[120]), fuzzy_system_single1@ante_mf3(BANK2[120]), 
		 -> fuzzy_system_single1@ante_mf2(BANK1[120]), fuzzy_system_single1@ante_mf1(BANK1[120]), fuzzy_system_single2@cons_mf3(BANK5[120]), fuzzy_system_single2@cons_mf2(BANK2[120]), 
		 -> fuzzy_system_single2@cons_mf1(BANK3[120]), fuzzy_system_single2@ante_mf3(BANK2[120]), fuzzy_system_single2@ante_mf2(BANK1[120]), fuzzy_system_single2@ante_mf1(BANK1[120]), 

    tri_mf@x	PTR  size(2) Largest target is 120
		 -> fuzzy_system_single1@y(BANK6[120]), fuzzy_system_single1@x(BANK6[120]), fuzzy_system_single2@y(BANK6[120]), fuzzy_system_single2@x(BANK6[120]), 

    linspace@x	PTR  size(2) Largest target is 120
		 -> fuzzy_system_single1@y(BANK6[120]), fuzzy_system_single1@x(BANK6[120]), fuzzy_system_single2@y(BANK6[120]), fuzzy_system_single2@x(BANK6[120]), 
		 -> fuzzy_system_single@y(BANK0[120]), fuzzy_system_single@x(BANK0[120]), fuzzy_system@y(BANK0[120]), fuzzy_system@x(BANK0[120]), 


Critical Paths under _main in COMRAM

    _main->_fuzzy_system_single1
    _main->_fuzzy_system_single2
    _mcu_init->_PWM_DutyCycle1
    _mcu_init->_PWM_DutyCycle2
    _PWM_init2->_OpenPWM2
    _PWM_init1->_OpenPWM1
    _go_back->_PWM_DutyCycle1
    _go_back->_PWM_DutyCycle2
    _PWM_DutyCycle2->___fttol
    _PWM_DutyCycle1->___fttol
    ___lbtoft->___ftpack
    ___fttol->___ftmul
    _fuzzy_system_single2->_tri_mf
    _fuzzy_system_single1->_tri_mf
    _tri_mf->_triangular
    _triangular->___ftdiv
    _qualified->___ftge
    _out_mf->___ftge
    ___ftge->___wmul
    _linspace->___ftdiv
    ___awtoft->___ftpack
    _defuzzy->___ftdiv
    ___ftmul->___awtoft
    ___ftmul->___lbtoft
    ___ftdiv->___ftadd
    ___ftadd->___ftmul

Critical Paths under _main in BANK0

    _main->_fuzzy_system_single1
    _main->_fuzzy_system_single2
    _fuzzy_system_single2->_tri_mf
    _fuzzy_system_single1->_tri_mf

Critical Paths under _main in BANK1

    _main->_fuzzy_system_single1
    _main->_fuzzy_system_single2

Critical Paths under _main in BANK2

    _main->_fuzzy_system_single1
    _main->_fuzzy_system_single2

Critical Paths under _main in BANK3

    _main->_fuzzy_system_single1
    _main->_fuzzy_system_single2

Critical Paths under _main in BANK4

    _main->_fuzzy_system_single1
    _main->_fuzzy_system_single2

Critical Paths under _main in BANK5

    _main->_fuzzy_system_single1
    _main->_fuzzy_system_single2

Critical Paths under _main in BANK6

    _main->_fuzzy_system_single1
    _main->_fuzzy_system_single2

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                18    18      0  183513
                                            125 BANK0     18    18      0
                     _PWM_DutyCycle1
                           ___awtoft
                            ___fttol
               _fuzzy_system_single1
               _fuzzy_system_single2
                      _getCNY70Value
                            _go_back
                           _mcu_init
                      _motor_forward
 ---------------------------------------------------------------------------------
 (1) _motor_forward                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _mcu_init                                             3     3      0   10113
                                             51 COMRAM     3     3      0
                     _PWM_DutyCycle1
                     _PWM_DutyCycle2
                          _PWM_init1
                          _PWM_init2
 ---------------------------------------------------------------------------------
 (2) _PWM_init2                                            1     1      0      68
                                              3 COMRAM     1     1      0
                           _OpenPWM2
 ---------------------------------------------------------------------------------
 (3) _OpenPWM2                                             4     4      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _PWM_init1                                            1     1      0      44
                                              1 COMRAM     1     1      0
                           _OpenPWM1
 ---------------------------------------------------------------------------------
 (3) _OpenPWM1                                             1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _go_back                                              2     1      1   10097
                                             51 COMRAM     2     1      1
                     _PWM_DutyCycle1
                     _PWM_DutyCycle2
                  _motor_Backforward
 ---------------------------------------------------------------------------------
 (2) _motor_Backforward                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM_DutyCycle2                                       9     9      0    5000
                                             42 COMRAM     9     9      0
                          _SetDCPWM2
                            ___ftmul
                            ___fttol
                           ___lbtoft
 ---------------------------------------------------------------------------------
 (3) _SetDCPWM2                                            6     4      2     121
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) _PWM_DutyCycle1                                       9     9      0    5000
                                             42 COMRAM     9     9      0
                          _SetDCPWM1
                            ___ftmul
                            ___fttol
                           ___lbtoft
 ---------------------------------------------------------------------------------
 (3) ___lbtoft                                             4     1      3    1746
                                              8 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             15    11      4     464
                                             27 COMRAM    15    11      4
                            ___ftmul (ARG)
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) _SetDCPWM1                                            6     4      2     121
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _getCNY70Value                                        2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _fuzzy_system_single2                              1457  1454      3   77811
                                             82 COMRAM    12     9      3
                                            122 BANK0      3     3      0
                                              0 BANK1    240   240      0
                                              0 BANK2    240   240      0
                                              0 BANK3    240   240      0
                                              0 BANK4    240   240      0
                                              0 BANK5    240   240      0
                                              0 BANK6    240   240      0
                            _defuzzy
                           _linspace
                             _out_mf
                          _qualified
                             _tri_mf
                         _triangular
 ---------------------------------------------------------------------------------
 (1) _fuzzy_system_single1                              1457  1454      3   77811
                                             82 COMRAM    12     9      3
                                            122 BANK0      3     3      0
                                              0 BANK1    240   240      0
                                              0 BANK2    240   240      0
                                              0 BANK3    240   240      0
                                              0 BANK4    240   240      0
                                              0 BANK5    240   240      0
                                              0 BANK6    240   240      0
                            _defuzzy
                           _linspace
                             _out_mf
                          _qualified
                             _tri_mf
                         _triangular
 ---------------------------------------------------------------------------------
 (2) _tri_mf                                             135   122     13   18615
                                             69 COMRAM    13     0     13
                                              0 BANK0    122   122      0
                             ___wmul
                         _triangular
 ---------------------------------------------------------------------------------
 (2) _triangular                                          15     3     12   10912
                                             54 COMRAM    15     3     12
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftneg
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftneg                                              3     0      3     469
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _qualified                                           12     5      7    8342
                                             15 COMRAM    12     5      7
                             ___ftge
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _out_mf                                              10     2      8    7655
                                             15 COMRAM    10     2      8
                             ___ftge
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___ftge                                               9     3      6    1958
                                              6 COMRAM     9     3      6
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _linspace                                            14     4     10   17341
                                             54 COMRAM    14     4     10
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             4     1      3    2080
                                              8 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) _defuzzy                                             15    11      4   14107
                                             54 COMRAM    15    11      4
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    4187
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    2622
                                             12 COMRAM    15     9      6
                           ___awtoft (ARG)
                           ___ftpack
                           ___lbtoft (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftdiv                                             15     9      6    2720
                                             39 COMRAM    15     9      6
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             12     6      6    3814
                                             27 COMRAM    12     6      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    1724
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _PWM_DutyCycle1
     _SetDCPWM1
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
       ___wmul (ARG)
     ___fttol
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___wmul (ARG)
       ___lbtoft (ARG)
         ___ftpack
     ___lbtoft
       ___ftpack
   ___awtoft
     ___ftpack
   ___fttol
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
       ___wmul (ARG)
     ___lbtoft (ARG)
       ___ftpack
   _fuzzy_system_single1
     _defuzzy
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___wmul (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             ___wmul (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___wmul (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___wmul (ARG)
       ___wmul
     _linspace
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___wmul (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             ___wmul (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___wmul (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___wmul (ARG)
       ___wmul
     _out_mf
       ___ftge
         ___wmul (ARG)
       ___wmul
     _qualified
       ___ftge
         ___wmul (ARG)
       ___wmul
     _tri_mf
       ___wmul
       _triangular
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             ___wmul (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
         ___ftdiv
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             ___wmul (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftge
           ___wmul (ARG)
         ___ftneg
         ___wmul (ARG)
     _triangular
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___wmul (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             ___wmul (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___wmul (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftge
         ___wmul (ARG)
       ___ftneg
       ___wmul (ARG)
   _fuzzy_system_single2
     _defuzzy
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___wmul (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             ___wmul (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___wmul (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___wmul (ARG)
       ___wmul
     _linspace
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___wmul (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             ___wmul (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___wmul (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___wmul (ARG)
       ___wmul
     _out_mf
       ___ftge
         ___wmul (ARG)
       ___wmul
     _qualified
       ___ftge
         ___wmul (ARG)
       ___wmul
     _tri_mf
       ___wmul
       _triangular
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             ___wmul (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
         ___ftdiv
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             ___wmul (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftge
           ___wmul (ARG)
         ___ftneg
         ___wmul (ARG)
     _triangular
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___wmul (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             ___wmul (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___wmul (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftge
         ___wmul (ARG)
       ___ftneg
       ___wmul (ARG)
   _getCNY70Value
   _go_back
     _PWM_DutyCycle1
       _SetDCPWM1
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___wmul (ARG)
       ___fttol
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___wmul (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___lbtoft
         ___ftpack
     _PWM_DutyCycle2
       _SetDCPWM2
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___wmul (ARG)
       ___fttol
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___wmul (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___lbtoft
         ___ftpack
     _motor_Backforward
   _mcu_init
     _PWM_DutyCycle1
       _SetDCPWM1
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___wmul (ARG)
       ___fttol
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___wmul (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___lbtoft
         ___ftpack
     _PWM_DutyCycle2
       _SetDCPWM2
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___wmul (ARG)
       ___fttol
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___wmul (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___lbtoft
         ___ftpack
     _PWM_init1
       _OpenPWM1
     _PWM_init2
       _OpenPWM2
   _motor_forward

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100     F0      F0      17       93.8%
BITBANK5           100      0       0      14        0.0%
BANK5              100     F0      F0      15       93.8%
BITBANK4           100      0       0      12        0.0%
BANK4              100     F0      F0      13       93.8%
BITBANK3           100      0       0      10        0.0%
BANK3              100     F0      F0      11       93.8%
BITBANK2           100      0       0       8        0.0%
BANK2              100     F0      F0       9       93.8%
BITBANK1           100      0       0       6        0.0%
BANK1              100     F0      F0       7       93.8%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     8F      95       5       93.1%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5E      5F       1      100.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     694      20        0.0%
DATA                 0      0     694       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Thu Oct 26 18:13:05 2017

                       ??_motor_forward 0001                                       _i 00F1  
               __size_of_PWM_DutyCycle1 006A                 __size_of_PWM_DutyCycle2 006A  
                                    l97 71AC                     ___wmul@multiplicand 0003  
                           __CFG_BORV$3 000000                            __CFG_CP0$OFF 000000  
                          __CFG_CP1$OFF 000000                            __CFG_CP2$OFF 000000  
                          __CFG_CP3$OFF 000000                            ___ftadd@exp1 0027  
                          ___ftadd@exp2 0026                            ___ftadd@sign 0025  
                                   l211 6A90                                     l221 6AF0  
                                   l213 6AA8                                     l119 6E9C  
                                   l223 6B06                                     l215 6AB8  
                                   l128 78FA                                     l208 6A80  
                                   l217 6AC8                                     l209 6B26  
                                   l219 6AE0                                     l612 6A6E  
                                   l293 6768                                     l294 6772  
                                   l295 6774                                     l650 74BA  
                                   l706 6698                                     l716 6BFA  
                                   l653 7382                                     l664 742E  
                                   l673 744A                                     l649 7356  
                                   l681 6CD0                                     l690 6928  
                                   l684 6CA0                                     l696 6DB4  
                          __CFG_CPB$OFF 000000                                     _PR2 000FCB  
                          __CFG_CPD$OFF 000000                            __CFG_BOR$OFF 000000  
                                   wreg 000FE8                            __CFG_LVP$OFF 000000  
                          ___ftdiv@cntr 0031                            ___ftdiv@sign 0036  
                          qualified@min 0017                            __CFG_WDT$OFF 000000  
                                  l2011 68CA                                    l2101 6D12  
                                  l2021 6926                                    l2015 68FA  
                                  l2041 75B4                                    l2115 6D44  
                                  l2051 7694                                    l2035 74F4  
                                  l2125 6D6C                                    l2045 75D4  
                                  l2119 6D54                                    l2129 6D7C  
                                  l2145 67A2                                    l2321 6E96  
                                  l2155 6B42                                    l2075 6764  
                                  l2253 7076                                    l2173 6B9C  
                                  l2095 6CEC                                    l2343 78A6  
                                  l2319 6E6A                                    l2191 6BEA  
                                  l2183 6BC4                                    l2361 7274  
                                  l2249 6F94                                    l2337 77B0  
                                  l2185 6BD0                                    l2177 6BAC  
                                  l2267 7104                                    l2187 6BD4  
                                  l2373 72DA                                    l2543 6B1E  
                                  l1921 73C0                                    l1905 7390  
                                  l1931 73F4                                    l1861 69D8  
                                  l1941 7428                                    l1933 73FC  
                                  l2653 6EA4                                    l1927 73E2  
                                  l1873 6A24                                    l1865 69E6  
                                  l1929 73EC                                    l1875 6A42  
                                  l1867 69F0                                    l1947 7466  
                                  l1939 741E                                    l2675 6F34  
                                  l1877 6A4C                                    l1869 6A0E  
                                  l1957 7496                                    l1973 6C3C  
                                  l1967 6C16                                    l1993 6C7A  
                                  l1899 7364                                    u2001 6CFC  
                                  u2010 6D04                                    u2100 6BB2  
                                  u2051 6B38                                    u2070 6B60  
                                  u3017 6960                                    u2075 6B58  
                                  u1811 6C26                                    u1820 6C2E  
                                  u1581 7320                                    u1591 7334  
                                  u1915 75C4                                    u2830 6B16  
                                  u1791 6C0C                                    u2680 6AD8  
                                  u1945 66DA                                    u2780 6B00  
                                  u1981 6CE2                                    u1975 6714  
                                  _TMR2 000FCC                                    _main 6E9E  
                          ___ftpack@arg 0001                            ___ftpack@exp 0004  
                                  fsr1l 000FE1                                    fsr2l 000FD9  
                                  prodh 000FF4                                    prodl 000FF3  
                                  start 0000                           __CFG_IESO$OFF 000000  
                         __CFG_MCLRE$ON 000000                            ___ftmul@cntr 001A  
                          ___ftmul@sign 001B                            ___fttol@exp1 002A  
                          ___fttol@lval 0026                           __CFG_PLLDIV$1 000000  
                        __CFG_CCP2MX$ON 000000                                   ?_main 0001  
                       __end_of___ftadd 74BC                         __end_of___ftdiv 6CD2  
                       __end_of___ftneg 66A6                         __end_of___ftmul 6DB6  
                       __end_of___fttol 6BFC                                   _T2CON 000FCA  
                        __CFG_DEBUG$OFF 000000                                   _PORTA 000F80  
                                 _PORTB 000F81                                   _PORTC 000F82  
                                 _PORTD 000F83                                   _PORTE 000F84  
                         __CFG_USBDIV$2 000000                                   _TRISA 000F92  
                                 _TRISB 000F93                                   _TRISC 000F94  
                                 _TRISD 000F95                                   _TRISE 000F96  
                         __CFG_PWRT$OFF 000000                           __CFG_WRT0$OFF 000000  
                         __CFG_WRT1$OFF 000000                           __CFG_WRT2$OFF 000000  
               PWM_DutyCycle1@DutyCycle 002F                           __CFG_WRT3$OFF 000000  
                       __end_of_defuzzy 7310                          __CFG_EBTR0$OFF 000000  
                        __CFG_FCMEN$OFF 000000                          __CFG_EBTR1$OFF 000000  
                        __CFG_EBTR2$OFF 000000                          __CFG_EBTR3$OFF 000000  
                       __end_of_go_back 65FA                           __CFG_WRTB$OFF 000000  
                         __CFG_WRTC$OFF 000000                           __CFG_WRTD$OFF 000000  
                        __CFG_EBTRB$OFF 000000                           ___awtoft@sign 000C  
                ??_fuzzy_system_single1 0056                  ??_fuzzy_system_single2 0056  
                          out_mf@result 0010                           ___ftpack@sign 0005  
                                 main@a 00E1                                   main@b 00E4  
                                 tablat 000FF5                 PWM_DutyCycle2@DutyCycle 002F  
                                 status 000FD8                          __CFG_ICPRT$OFF 000000  
                    __size_of_PWM_init1 001E                      __size_of_PWM_init2 001E  
                       __initialization 66A6                            __end_of_main 6F8A  
                      __end_of_OpenPWM1 65E6                        __end_of_OpenPWM2 677E  
                                ??_main 00DD                           ___fttol@sign1 0025  
                         __activetblptr 000003                           linspace@start 0039  
                                _CCPR1L 000FBE                                  _CCPR2L 000FBB  
                      __end_of___awtoft 67C6                        __end_of___ftpack 6A70  
                      __end_of___lbtoft 665A  fuzzy_system_single2@qualified_cons_mf1 0378  
fuzzy_system_single2@qualified_cons_mf2 0478  fuzzy_system_single2@qualified_cons_mf3 0400  
    fuzzy_system_single2@overall_out_mf 0578                      __size_of_SetDCPWM1 003A  
                    __size_of_SetDCPWM2 003A                          __CFG_XINST$OFF 000000  
                                ___ftge 689A                                  ___wmul 665A  
                             ??___ftadd 0022                          _PWM_DutyCycle1 67C6  
                        _PWM_DutyCycle2 6830                          __CFG_STVREN$ON 000000  
                             ??___ftdiv 002E                               ??___ftneg 0004  
                             ??___ftmul 0013                               ??___fttol 0020  
                      __end_of_mcu_init 69C8                               ??_defuzzy 003B  
                      __end_of_linspace 708C                                  _out_mf 76A2  
                                _tri_mf 708C                               ??_go_back 0035  
                 ___ftmul@f3_as_product 0017              fuzzy_system_single1@output 00DA  
            fuzzy_system_single2@output 00DA                            triangular@ux 0043  
                                tblptrh 000FF7                                  tblptrl 000FF6  
                                tblptru 000FF8                       __end_of_PWM_init1 6618  
                     __end_of_PWM_init2 6636                       _motor_Backforward 65C0  
                            __accesstop 0060                 __end_of__initialization 66CA  
                       __CFG_PBADEN$OFF 000000                              ___ftadd@f1 001C  
                            ___ftadd@f2 001F                      ?_motor_Backforward 0001  
                            ___ftge@ff1 0007                              ___ftge@ff2 000A  
          PWM_DutyCycle2@percentageDuty 0031                              ___ftdiv@f1 0028  
                            ___ftdiv@f2 002B                              ___ftdiv@f3 0032  
                            ___ftneg@f1 0001                              ___awtoft@c 0009  
                            ___lbtoft@c 000C                  __end_of_PWM_DutyCycle1 6830  
                __end_of_PWM_DutyCycle2 689A                              ___ftmul@f1 000D  
                            ___ftmul@f2 0010                              ___fttol@f1 001C  
                        __pcstackCOMRAM 0001                     ??_motor_Backforward 0001  
                          __pidataBANK0 65BE                       __end_of_SetDCPWM1 670A  
                     __end_of_SetDCPWM2 6744                             linspace@end 003C  
             __end_of_motor_Backforward 65CA                           tri_mf@t_value 0046  
                            __pbssBANK0 00EF               fuzzy_system_single1@input 0053  
             fuzzy_system_single2@input 0053                               ?_OpenPWM1 0001  
                             ?_OpenPWM2 0001                         ?_PWM_DutyCycle1 0001  
                       ?_PWM_DutyCycle2 0001                                 ?___ftge 0007  
                               ?___wmul 0001                  __size_of_getCNY70Value 00B8  
                               _CCP1CON 000FBD                                 _CCP2CON 000FBA  
                 __end_of_motor_forward 65D4                               ?___awtoft 0009  
                             ?___ftpack 0001                               ?___lbtoft 0009  
                               ?_out_mf 0010                                 ?_tri_mf 0046  
                    __size_of_qualified 00E8                         __CFG_VREGEN$OFF 000000  
                             ?_mcu_init 0001                              ??_OpenPWM1 0001  
                            ??_OpenPWM2 0001                               ?_linspace 0037  
                               __Hparam 0000                                 __Lparam 0000  
                       __size_of___ftge 0090                                 ___ftadd 7310  
                               ___ftdiv 6BFC                                 ___ftneg 6680  
                       __size_of___wmul 0026                                 ___ftmul 6CD2  
                               ___fttol 6B28                                 __pcinit 66A6  
                            ??___awtoft 000C                              ??___ftpack 0006  
                            ??___lbtoft 000C                                 __ramtop 0800  
                               _defuzzy 71AE                                 __ptext0 6E9E  
                               __ptext1 65CA                                 __ptext2 692A  
                               __ptext3 6618                                 __ptext4 6744  
                               __ptext5 65FA                                 __ptext6 65D4  
                               __ptext7 65E6                                 __ptext8 65C0  
                               __ptext9 6830                                 _go_back 65E6  
                       __size_of_out_mf 025A                         __size_of_tri_mf 0122  
                               _countup 00F3                               _T2CONbits 000FCA  
            __size_of_motor_Backforward 000A                           _getCNY70Value 6A70  
                  end_of_initialization 66CA            fuzzy_system_single1@ante_mf1 0100  
          fuzzy_system_single1@ante_mf2 0178            fuzzy_system_single1@ante_mf3 0278  
         __size_of_fuzzy_system_single1 0382           __size_of_fuzzy_system_single2 0382  
          fuzzy_system_single1@cons_mf1 0300            fuzzy_system_single1@cons_mf2 0200  
          fuzzy_system_single1@cons_mf3 0500                              ??_mcu_init 0034  
          fuzzy_system_single2@ante_mf1 0100            fuzzy_system_single2@ante_mf2 0178  
          fuzzy_system_single2@ante_mf3 0278                              ??_linspace 0041  
          fuzzy_system_single2@cons_mf1 0300            fuzzy_system_single2@cons_mf2 0200  
          fuzzy_system_single2@cons_mf3 0500                       __end_of_qualified 6E9E  
                               postdec1 000FE5                                 postdec2 000FDD  
                               out_mf@i 0018                                 out_mf@x 0012  
                               out_mf@y 0014                                 out_mf@z 0016  
                               postinc1 000FE6                                 postinc2 000FDE  
                               tri_mf@a 004A                                 tri_mf@b 004D  
                               tri_mf@c 0050                                 tri_mf@i 00D8  
                               tri_mf@x 0048                              defuzzy@out 003B  
                             _PORTAbits 000F80                               _PORTBbits 000F81  
                             _PORTDbits 000F83                               _TRISBbits 000F93  
                             _TRISCbits 000F94                          ?_getCNY70Value 0001  
                            _triangular 74BC                               _PWM_init1 65FA  
                             _PWM_init2 6618  fuzzy_system_single1@qualified_cons_mf1 0378  
fuzzy_system_single1@qualified_cons_mf2 0478  fuzzy_system_single1@qualified_cons_mf3 0400  
                           ___ftdiv@exp 0035                              main@sensed 00ED  
                           ___ftmul@exp 0016                          __end_of___ftge 692A  
                        __end_of___wmul 6680                          __end_of_out_mf 78FC  
                        __end_of_tri_mf 71AE                     start_initialization 66A6  
                             _SetDCPWM1 66D0                               _SetDCPWM2 670A  
                       SetDCPWM1@DCycle 0005                         SetDCPWM2@DCycle 0005  
                             _DutyCycle 00EF                              ?_PWM_init1 0001  
                            ?_PWM_init2 0001                        ??_PWM_DutyCycle1 002B  
                      ??_PWM_DutyCycle2 002B                            linspace@size 003F  
                fuzzy_system_single1@w1 0056                  fuzzy_system_single1@w2 0059  
                fuzzy_system_single1@w3 005C                  fuzzy_system_single2@w1 0056  
                fuzzy_system_single2@w2 0059                  fuzzy_system_single2@w3 005C  
                     __size_of_OpenPWM1 0012                       __size_of_OpenPWM2 003A  
                              ??___ftge 000D                                ??___wmul 0005  
                           __pdataBANK0 00F3                        __CFG_LPT1OSC$OFF 000000  
                           triangular@a 0037                             triangular@b 003A  
                           triangular@c 003D                             triangular@x 0040  
                              ??_out_mf 0018                                ??_tri_mf 0053  
                     __size_of___awtoft 0048                       __size_of___ftpack 00A8  
                     __size_of___lbtoft 0024                             __pbssCOMRAM 005F  
                       ??_getCNY70Value 0003                           __pcstackBANK0 0060  
                         __pcstackBANK1 0100                           __pcstackBANK2 0200  
                         __pcstackBANK3 0300                           __pcstackBANK4 0400  
                         __pcstackBANK5 0500                           __pcstackBANK6 0600  
                            ?_SetDCPWM1 0001                              ?_SetDCPWM2 0001  
    fuzzy_system_single1@overall_out_mf 0578                             ?_triangular 0037  
                     __size_of_mcu_init 009E                               _main$1475 00E7  
                             _main$1476 00EA                       __size_of_linspace 0102  
                              ?___ftadd 001C                                ?___ftdiv 0028  
                              ?___ftneg 0001                                ?___ftmul 000D  
                              ?___fttol 001C                                ?_defuzzy 0037  
                              ?_go_back 0034                             ??_PWM_init1 0002  
                           ??_PWM_init2 0004            PWM_DutyCycle1@percentageDuty 0031  
                __size_of_motor_forward 000A                          ___wmul@product 0005  
                              _PIE1bits 000F9D                                _PIR1bits 000F9E  
                      __CFG_WDTPS$32768 000000                               defuzzy@mf 0039  
          __end_of_fuzzy_system_single1 7C7E            __end_of_fuzzy_system_single2 8000  
                             _qualified 6DB6                     __size_of_triangular 01E6  
                     ___wmul@multiplier 0001                              qualified@i 001A  
                            qualified@w 0014                              qualified@x 0012  
                            qualified@y 0010                             ??_SetDCPWM1 0003  
                           ??_SetDCPWM2 0003                      SetDCPWM1@dutycycle 0001  
                            tri_mf@temp 0060                            _Timer2Config 005F  
                              _OpenPWM1 65D4                                _OpenPWM2 6744  
                 fuzzy_system_single1@x 0600                   fuzzy_system_single1@y 0678  
                 fuzzy_system_single2@x 0600                   fuzzy_system_single2@y 0678  
                              __Hrparam 0000                                __Lrparam 0000  
                    SetDCPWM2@dutycycle 0001                               mcu_init@i 0035  
                            ?_qualified 0010                        __size_of___ftadd 01AC  
                      PWM_DutyCycle1@DC 0032                        PWM_DutyCycle2@DC 0032  
                      __size_of___ftdiv 00D6                        __size_of___ftneg 0026  
                      __size_of___ftmul 00E4                        __size_of___fttol 00D4  
                         _motor_forward 65CA                                ___awtoft 677E  
                              ___ftpack 69C8                                ___lbtoft 6636  
                        OpenPWM2@ccp2mx 0003                   __CFG_FOSC$INTOSCIO_EC 000000  
                             linspace@i 0043                        __size_of_defuzzy 0162  
                             linspace@x 0037                        __size_of_go_back 0014  
                        OpenPWM1@period 0001                          OpenPWM2@period 0002  
                              __ptext10 670A                                __ptext11 67C6  
                              __ptext20 6680                                __ptext12 6636  
                              __ptext21 6DB6                                __ptext13 6B28  
                              __ptext30 7310                                __ptext22 76A2  
                              __ptext14 66D0                                __ptext31 69C8  
                              __ptext23 689A                                __ptext15 6A70  
                              __ptext24 6F8A                                __ptext16 7C7E  
                              __ptext25 677E                                __ptext17 78FC  
                              __ptext26 71AE                                __ptext18 708C  
                              __ptext27 665A                                __ptext19 74BC  
                              __ptext28 6CD2                                __ptext29 6BFC  
                       PWM_init1@period 0002                         PWM_init2@period 0004  
                              _mcu_init 692A                           __size_of_main 00EC  
                              _linspace 6F8A                                defuzzy@i 0044  
                              defuzzy@x 0037                          ?_motor_forward 0001  
                 __CFG_CPUDIV$OSC1_PLL2 000000                            ??_triangular 0043  
                  _fuzzy_system_single1 78FC                    _fuzzy_system_single2 7C7E  
                            _OSCCONbits 000FD3                             ??_qualified 0017  
                           defuzzy@sum1 003E                             defuzzy@sum2 0041  
                    __end_of_triangular 76A2                          go_back@m_right 0035  
                 __end_of_getCNY70Value 6B28                   ?_fuzzy_system_single1 0053  
                 ?_fuzzy_system_single2 0053                           go_back@m_left 0034  
